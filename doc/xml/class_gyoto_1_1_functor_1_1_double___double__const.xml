<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_functor_1_1_double___double__const" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gyoto::Functor::Double_Double_const</compoundname>
    <derivedcompoundref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t" prot="public" virt="non-virtual">Gyoto::Astrobj::PolishDoughnut::intersection_t</derivedcompoundref>
    <derivedcompoundref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1outerradius__t" prot="public" virt="non-virtual">Gyoto::Astrobj::PolishDoughnut::outerradius_t</derivedcompoundref>
    <includes refid="_gyoto_functors_8h" local="no">GyotoFunctors.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_functor_1_1_double___double__const_1a1cec50c19b669404da1365354f31ec23" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Functor::Double_Double_const::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
<para>Exit status code of &quot;various&quot; methods (at least <ref refid="class_gyoto_1_1_functor_1_1_double___double__const_1a6063638089204e028c693db3e41f3361" kindref="member">secant()</ref> !) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="64" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoFunctors.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double___double__const_1a96c373ea9e09d7c98c3466f0ad8a5998" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gyoto::Functor::Double_Double_const::~Double_Double_const</definition>
        <argsstring>()</argsstring>
        <name>~Double_Double_const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="60" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double___double__const_1a04c5a5b9446dfa5c71fdcd91cae9ae27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Functor::Double_Double_const::operator()</definition>
        <argsstring>(double) const =0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t_1af19882fd4f6249c8dbfcd0fa69967b7c">operator()</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1outerradius__t_1a7c779a6c459162c8cb9ad7446327cf5c">operator()</reimplementedby>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>The actual function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="69" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double___double__const_1a3322b1d8670ec7cb80962e1a680b6dd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Functor::Double_Double_const::ridders</definition>
        <argsstring>(double from, double to) const</argsstring>
        <name>ridders</name>
        <param>
          <type>double</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Ridder&apos;s root-finding method applied on <ref refid="class_gyoto_1_1_functor_1_1_double___double__const_1a04c5a5b9446dfa5c71fdcd91cae9ae27" kindref="member">operator()()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>boundaries for root-searching </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the root </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double___double__const_1a6063638089204e028c693db3e41f3361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Functor::Double_Double_const::secant</definition>
        <argsstring>(double from, double to)</argsstring>
        <name>secant</name>
        <param>
          <type>double</type>
          <declname>from</declname>
        </param>
        <param>
          <type>double</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Secant root-finding method applied on <ref refid="class_gyoto_1_1_functor_1_1_double___double__const_1a04c5a5b9446dfa5c71fdcd91cae9ae27" kindref="member">operator()()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Sets status to -0 in case of convergence -1 if two distinct inputs evaluated to the same output -2 if maximum number of iterations (20) reached</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>boundaries for root-finding </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the root </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="89" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A functor like double (func) (double) const. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gyoto::Astrobj::PolishDoughnut::outerradius_t</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1outerradius__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Functor::Double_Double_const</label>
        <link refid="class_gyoto_1_1_functor_1_1_double___double__const"/>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::PolishDoughnut::intersection_t</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="57" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoFunctors.h" bodystart="58" bodyend="90"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_functor_1_1_double___double__const_1a04c5a5b9446dfa5c71fdcd91cae9ae27" prot="public" virt="pure-virtual"><scope>Gyoto::Functor::Double_Double_const</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double___double__const_1a3322b1d8670ec7cb80962e1a680b6dd2" prot="public" virt="non-virtual"><scope>Gyoto::Functor::Double_Double_const</scope><name>ridders</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double___double__const_1a6063638089204e028c693db3e41f3361" prot="public" virt="non-virtual"><scope>Gyoto::Functor::Double_Double_const</scope><name>secant</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double___double__const_1a1cec50c19b669404da1365354f31ec23" prot="public" virt="non-virtual"><scope>Gyoto::Functor::Double_Double_const</scope><name>status</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double___double__const_1a96c373ea9e09d7c98c3466f0ad8a5998" prot="public" virt="virtual"><scope>Gyoto::Functor::Double_Double_const</scope><name>~Double_Double_const</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
