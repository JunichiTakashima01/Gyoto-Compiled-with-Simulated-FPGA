<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_smart_pointer" kind="class" language="C++" prot="public">
    <compoundname>Gyoto::SmartPointer</compoundname>
    <includes refid="_gyoto_smart_pointer_8h" local="no">GyotoSmartPointer.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointer_1a8c1f4930220a9616d1ff3188a331f79f" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Gyoto::SmartPointer&lt; T &gt;::obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <briefdescription>
<para>Real pointer, don&apos;t mess with it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="141" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a19879c1d9d7c33ae243dad8bcf142839" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointer&lt; T &gt;::decRef</definition>
        <argsstring>()</argsstring>
        <name>decRef</name>
        <briefdescription>
<para>Decrement the reference counter. Warning: don&apos;t mess with it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="147" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="147" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a5f322eab04710d46620891312fc93225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gyoto::SmartPointer&lt; T &gt;::SmartPointer</definition>
        <argsstring>(T *orig=NULL)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>T *</type>
          <declname>orig</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructor from a standard pointer-to-class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orig</parametername>
</parameternamelist>
<parameterdescription>
<para>: a pointer to an instance of class T, created using new T().</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example: <programlisting><codeline><highlight class="normal">SmartPointer&lt;Gyoto::Metric::Generic&gt;<sp/>ObjPtr<sp/>(new<sp/>Gyoto::Metric(...));<sp/>//<sp/>create<sp/>SmartPointer<sp/>ObjPtr</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="169" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a038ad0cade67323590306ae90cfedc03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gyoto::SmartPointer&lt; T &gt;::SmartPointer</definition>
        <argsstring>(const SmartPointer&lt; T &gt; &amp;orig)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
<para>Copy constructor from same type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orig</parametername>
</parameternamelist>
<parameterdescription>
<para>: a <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> to an instance of class T</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example: <programlisting><codeline><highlight class="normal">SmartPointer&lt;Gyoto::Metric::Generic&gt;<sp/>ObjPtr<sp/>(new<sp/>Gyoto::Metric(...));<sp/>//<sp/>create<sp/>SmartPointer<sp/>ObjPtr</highlight></codeline>
<codeline><highlight class="normal">SmartPointer&lt;Gyoto::Metric::Generic&gt;<sp/>ObjPtr2<sp/>=<sp/>ObjPtr;<sp/>//<sp/>create<sp/>SmartPointer<sp/>ObjPtr2</highlight></codeline>
</programlisting></para>
<para>ObjPtr and ObjPtr2 point to the same instance of class T. Copying increments the reference counter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="189" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a866b41012aa41f3db6d1961f88864c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Gyoto::SmartPointer&lt; T &gt;::SmartPointer</definition>
        <argsstring>(const SmartPointer&lt; U &gt; &amp;orig)</argsstring>
        <name>SmartPointer</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; U &gt; &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
<para>Copy constructor from compatible type (used for casting) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>orig</parametername>
</parameternamelist>
<parameterdescription>
<para>: a <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> to an instance of another class U</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Example: MetricPtr is a SmartPoiter&lt;Metric&gt;, but really points to an instance of the child class Gyoto::Kerr:</para>
<para><programlisting><codeline><highlight class="normal">SmartPointer&lt;Gyoto::Kerr&gt;<sp/>KerrPtr<sp/>(MetricPtr);</highlight></codeline>
</programlisting></para>
<para>MetricPtr and KerrPtr point to the same instance of class Kerr. The methods specific to class Kerr are available only to KerrPtr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="213" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1ac07932421e66773bb6332078a9f61d4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; Gyoto::SmartPointer&lt; T &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereference operator &quot;*&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>address of the pointed-to-object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="225" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="225" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1afb1c6e177c3bd6117631f34832212387" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; Gyoto::SmartPointer&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereference operator &quot;*&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>address of the pointed-to-object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="237" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1af94feafb5ced1f3fd83fde42d81fb1d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Gyoto::SmartPointer&lt; T &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Dereference operator &quot;-&gt;&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para>Access to the pointed-to-object&apos;s members. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="249" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a6ba4d5beaa5c6ee51044e59faa98548e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Gyoto::SmartPointer&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Dereference operator &quot;-&gt;&quot; (const) </para>
        </briefdescription>
        <detaileddescription>
<para>Access to the pointed-to-object&apos;s members. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="261" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="261" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a27687ea19ff46dee051fff054a4040e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::SmartPointer&lt; T &gt;::operator==</definition>
        <argsstring>(const SmartPointer&lt; T &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Comparison operator between two <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> of same kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="271" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1ad4af543c5173b6db3a8e38b28836ef30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::SmartPointer&lt; T &gt;::operator!=</definition>
        <argsstring>(const SmartPointer&lt; T &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Comparison operator between two <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> of same kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="276" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1ae291871ceeefecd299a2c90662a7f8a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
        <definition>SmartPointer&lt; T &gt;&amp; Gyoto::SmartPointer&lt; T &gt;::operator=</definition>
        <argsstring>(SmartPointer&lt; T &gt; &amp;right)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Copy a <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> to another (already defined) <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> of same kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="282" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="282" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a052b03f85fe033743276051ebf01ee1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; T &gt; &amp;</type>
        <definition>SmartPointer&lt; T &gt;&amp; Gyoto::SmartPointer&lt; T &gt;::operator=</definition>
        <argsstring>(T *right)</argsstring>
        <name>operator=</name>
        <param>
          <type>T *</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Copy a normal pointer to an (already defined) <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> of same kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="301" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="301" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a01a1006bfdc662b6931996de5ded484b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gyoto::SmartPointer&lt; T &gt;::operator T*</definition>
        <argsstring>() const</argsstring>
        <name>operator T*</name>
        <briefdescription>
<para>Cast <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> to normal pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="319" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1a9add10bbe8db7a862dc682578ee82021" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Gyoto::SmartPointer&lt; T &gt;::~SmartPointer</definition>
        <argsstring>()</argsstring>
        <name>~SmartPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="319" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointer_1afec9573b7e22fe700f82b26d779bce65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* Gyoto::SmartPointer&lt; T &gt;::operator()</definition>
        <argsstring>() const</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Get standard, non-smart pointer to object. Use with care. </para>
        </briefdescription>
        <detaileddescription>
<para>This public method is needed to cast from a <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> flavor to another. It should almost certainly never be used in user code, except perhaps for debugging purposes.</para>
<para><simplesect kind="return"><para>usual pointer to object, T*. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="351" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="351" bodyend="351"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Pointers performing reference counting. </para>
    </briefdescription>
    <detaileddescription>
<para>Pointee must inherit from class <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">SmartPointee</ref>.</para>
<para>To create an object and a <ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref> pointing to it:</para>
<para><programlisting><codeline><highlight class="normal">SmartPointer&lt;Gyoto::Metric::Generic&gt;<sp/>ObjPtr<sp/>(new<sp/>Gyoto::Metric(...));</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-class of <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="134" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="135" bodyend="353"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_smart_pointer_1a19879c1d9d7c33ae243dad8bcf142839" prot="private" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>decRef</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a8c1f4930220a9616d1ff3188a331f79f" prot="private" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>obj</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a01a1006bfdc662b6931996de5ded484b" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator T*</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1ad4af543c5173b6db3a8e38b28836ef30" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator!=</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1afec9573b7e22fe700f82b26d779bce65" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1ac07932421e66773bb6332078a9f61d4b" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator*</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1afb1c6e177c3bd6117631f34832212387" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator*</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1af94feafb5ced1f3fd83fde42d81fb1d9" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator-&gt;</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a6ba4d5beaa5c6ee51044e59faa98548e" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator-&gt;</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1ae291871ceeefecd299a2c90662a7f8a0" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator=</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a052b03f85fe033743276051ebf01ee1e" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator=</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a27687ea19ff46dee051fff054a4040e9" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>operator==</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a5f322eab04710d46620891312fc93225" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a038ad0cade67323590306ae90cfedc03" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a866b41012aa41f3db6d1961f88864c5a" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>SmartPointer</name></member>
      <member refid="class_gyoto_1_1_smart_pointer_1a9add10bbe8db7a862dc682578ee82021" prot="public" virt="non-virtual"><scope>Gyoto::SmartPointer</scope><name>~SmartPointer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
