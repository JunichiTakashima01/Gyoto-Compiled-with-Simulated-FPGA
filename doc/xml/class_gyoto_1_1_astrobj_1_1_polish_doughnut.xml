<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_astrobj_1_1_polish_doughnut" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gyoto::Astrobj::PolishDoughnut</compoundname>
    <basecompoundref refid="class_gyoto_1_1_astrobj_1_1_standard" prot="public" virt="non-virtual">Gyoto::Astrobj::Standard</basecompoundref>
    <basecompoundref refid="class_gyoto_1_1_hook_1_1_listener" prot="protected" virt="non-virtual">Gyoto::Hook::Listener</basecompoundref>
    <includes refid="_gyoto_polish_doughnut_8h" local="no">GyotoPolishDoughnut.h</includes>
    <innerclass refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t" prot="private">Gyoto::Astrobj::PolishDoughnut::intersection_t</innerclass>
    <innerclass refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1outerradius__t" prot="private">Gyoto::Astrobj::PolishDoughnut::outerradius_t</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aea2131812c6990486dfd4ff0089835bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Gyoto::SmartPointer&lt; Gyoto::Astrobj::PolishDoughnut &gt;</definition>
        <argsstring></argsstring>
        <name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::PolishDoughnut &gt;</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut" kindref="compound">Gyoto::Astrobj::PolishDoughnut</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="1" column="0" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab0cd7e012f185c1b632c18cadfd1ff89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class intersection_t</definition>
        <argsstring></argsstring>
        <name>intersection_t</name>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t" kindref="compound">intersection_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="245" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a96f6f9634b2204a74e4009ddf26af721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const PolishDoughnut &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut" kindref="compound">PolishDoughnut</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="267" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac713818c8a13f21cb28510cf5f0b8d05" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_thermal_bremsstrahlung" kindref="compound">Spectrum::ThermalBremsstrahlung</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::ThermalBremsstrahlung&gt; Gyoto::Astrobj::PolishDoughnut::spectrumBrems_</definition>
        <argsstring></argsstring>
        <name>spectrumBrems_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="75" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa3d93ae99af65ebeccd85f3ab2e50310" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_thermal_synchrotron" kindref="compound">Spectrum::ThermalSynchrotron</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::ThermalSynchrotron&gt; Gyoto::Astrobj::PolishDoughnut::spectrumSynch_</definition>
        <argsstring></argsstring>
        <name>spectrumSynch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="76" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab511d780ebadd19ea2238b48dfeb304e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_power_law_synchrotron" kindref="compound">Spectrum::PowerLawSynchrotron</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::PowerLawSynchrotron&gt; Gyoto::Astrobj::PolishDoughnut::spectrumPLSynch_</definition>
        <argsstring></argsstring>
        <name>spectrumPLSynch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="77" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1afbf5d0dbe21cd2617adfaf2c469235f0" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::l0_</definition>
        <argsstring></argsstring>
        <name>l0_</name>
        <briefdescription>
<para>Angular momentum. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="78" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::lambda_</definition>
        <argsstring></argsstring>
        <name>lambda_</name>
        <briefdescription>
<para>Adimentionned angular momentum. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="79" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a9b2d12a41a72d557316d1f80b047afdc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::W_surface_</definition>
        <argsstring></argsstring>
        <name>W_surface_</name>
        <briefdescription>
<para>Potential surface value. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="80" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac8a72ed2bc404fb9826fc86dc11d9e52" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::W_centre_</definition>
        <argsstring></argsstring>
        <name>W_centre_</name>
        <briefdescription>
<para>Potential central value. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="81" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5120476cd9f66aca3449c31622eea20d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::r_cusp_</definition>
        <argsstring></argsstring>
        <name>r_cusp_</name>
        <briefdescription>
<para>Cusp radius in geometrical units. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="82" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2e07f2748eebb56a2b040a1383039a78" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::r_centre_</definition>
        <argsstring></argsstring>
        <name>r_centre_</name>
        <briefdescription>
<para>Central radius in geometrical units. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="83" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a352f4773370d84e617459e1d3a89b50c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::r_torusouter_</definition>
        <argsstring></argsstring>
        <name>r_torusouter_</name>
        <briefdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_torus" kindref="compound">Torus</ref> outer coordinate radius. Tied to <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="84" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a475c5ae508acceb3ba6cc919a2f6cf20" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::DeltaWm1_</definition>
        <argsstring></argsstring>
        <name>DeltaWm1_</name>
        <briefdescription>
<para>1./(W_centre_ - W_surface_); </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="85" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::central_enthalpy_cgs_</definition>
        <argsstring></argsstring>
        <name>central_enthalpy_cgs_</name>
        <briefdescription>
<para>Central enthalpy per unit volume in erg/cm3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="86" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a008e9ea0b578abcd7d4a8ba6f427997d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::central_temperature_</definition>
        <argsstring></argsstring>
        <name>central_temperature_</name>
        <briefdescription>
<para>T<subscript>center</subscript> in K. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="87" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a91d207eec3d3be2f78c06cf357e70cec" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <briefdescription>
<para>P<subscript>gas</subscript>/P<subscript>magn</subscript> (careful not standard) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="88" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a9714e7a2b959a2c943e0ca6f62ceee6a" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::magnetizationParameter_</definition>
        <argsstring></argsstring>
        <name>magnetizationParameter_</name>
        <briefdescription>
<para>P<subscript>magn</subscript>/(n<subscript>e</subscript> m<subscript>p</subscript> c<superscript>2</superscript>) (careful, very different from above) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="89" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab0ad265513f17f53991c8c0d2d2b6ee2" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::aa_</definition>
        <argsstring></argsstring>
        <name>aa_</name>
        <briefdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">PolishDoughnut::gg_</ref> spin, cached when setting <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="90" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a85b26c2cc1ff83ece2140c703470ad8d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::aa2_</definition>
        <argsstring></argsstring>
        <name>aa2_</name>
        <briefdescription>
<para>aa_<superscript>2</superscript> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="91" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a82d9b7c04a3ac16c03fbaf3b924c3f80" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::PolishDoughnut::spectral_oversampling_</definition>
        <argsstring></argsstring>
        <name>spectral_oversampling_</name>
        <briefdescription>
<para>Oversampling used in <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0" kindref="member">integrateEmission()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="92" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae9baa7917cd5b3d3781e08ae2b51a7c6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::angle_averaged_</definition>
        <argsstring></argsstring>
        <name>angle_averaged_</name>
        <briefdescription>
<para>1 if Komissarov model should be angle averaged </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="93" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae174ce613b8dd90af5fc756a48fbbe50" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::bremsstrahlung_</definition>
        <argsstring></argsstring>
        <name>bremsstrahlung_</name>
        <briefdescription>
<para>1 if Komissarov model should compute Brems radiation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="94" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4c23ab8b4ae58fa2db84bb27e0ddcfc9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::deltaPL_</definition>
        <argsstring></argsstring>
        <name>deltaPL_</name>
        <briefdescription>
<para>fraction of thermal energy in non-thermal electrons </para>
        </briefdescription>
        <detaileddescription>
<para>Obsiously, 0 means no non-thermal electrons at all. In this case, the (trivial) non-thermal computations are skipped. Ther is thus non need for an additional &quot;nonthermal_&quot; flag. Fraction of electrons emitting powerlaw synchro </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="102" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1bea7f081e9775f17967521d69ac04ff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::adaf_</definition>
        <argsstring></argsstring>
        <name>adaf_</name>
        <briefdescription>
<para>true to switch to an ADAF model rather tha Polish doughnut </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="104" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1accaf819ba7258a6a35794483c700adfa" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::ADAFtemperature_</definition>
        <argsstring></argsstring>
        <name>ADAFtemperature_</name>
        <briefdescription>
<para>ADAF central temperature. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="105" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2af4cb3285308f7e419cb56cef39fffe" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::ADAFdensity_</definition>
        <argsstring></argsstring>
        <name>ADAFdensity_</name>
        <briefdescription>
<para>ADAF central density. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="106" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa1af985b6012b82432a2506bdc090833" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::changecusp_</definition>
        <argsstring></argsstring>
        <name>changecusp_</name>
        <briefdescription>
<para>true to apply the fishy rcusp_ change (to be changed) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="108" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5dc339fe8ac05d2ece15ef1d630cb7fe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::rochelobefilling_</definition>
        <argsstring></argsstring>
        <name>rochelobefilling_</name>
        <briefdescription>
<para>true if torus filling its Roche lobe </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="109" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac23ea235cba87a9985ff665059f840b0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::defangmomrinner_</definition>
        <argsstring></argsstring>
        <name>defangmomrinner_</name>
        <briefdescription>
<para>true if torus defined from l0 and rin </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="110" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae0f2752545c6e3716dae7f2c036d4891" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::rintorus_</definition>
        <argsstring></argsstring>
        <name>rintorus_</name>
        <briefdescription>
<para>Inner radius of the doughnut. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="111" column="9" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::critical_value_</definition>
        <argsstring></argsstring>
        <name>critical_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="94" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::safety_value_</definition>
        <argsstring></argsstring>
        <name>safety_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="95" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::delta_inobj_</definition>
        <argsstring></argsstring>
        <name>delta_inobj_</name>
        <briefdescription>
<para>Constant value of the integration step inside object, in units of the compact object&apos;s mass M. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Astrobj::Generic::gg_</definition>
        <argsstring></argsstring>
        <name>gg_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> in this end of the Universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="222" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::rmax_</definition>
        <argsstring></argsstring>
        <name>rmax_</name>
        <briefdescription>
<para>Maximum distance to the center of the coordinate system [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum distance from the center of the coordinate system at which a photon may hit the object. Child classes may compute a decent value for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> at any time if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is DBL_MAX. External classes (Photons in particular) must use <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> to access this information.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="234" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::deltamaxinsidermax_</definition>
        <argsstring></argsstring>
        <name>deltamaxinsidermax_</name>
        <briefdescription>
<para>Maximum <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integration step inside <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum step for <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integation when inside the sphere of radius <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" kindref="member">deltamaxinsidermax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="242" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::flag_radtransf_</definition>
        <argsstring></argsstring>
        <name>flag_radtransf_</name>
        <briefdescription>
<para>1 if radiative transfer inside <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, else 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="244" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::shadow_</definition>
        <argsstring></argsstring>
        <name>shadow_</name>
        <briefdescription>
<para>1 to highlight the shadow region in the image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="246" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::noredshift_</definition>
        <argsstring></argsstring>
        <name>noredshift_</name>
        <briefdescription>
<para>1 to impose redshift factor g = 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="247" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::kind_</definition>
        <argsstring></argsstring>
        <name>kind_</name>
        <briefdescription>
<para>The &quot;kind&quot; that is output in the XML entity. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>kind=&quot;kind_&quot;<sp/>...&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="162" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gyoto::Object::plugins_</definition>
        <argsstring></argsstring>
        <name>plugins_</name>
        <briefdescription>
<para>The plug-ins that needs to be loaded to access this instance&apos;s class. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>...<sp/>plugin=&quot;plugins_&quot;&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="172" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae201a220950364993f2de038277d81b9" prot="public" static="yes" mutable="no">
        <type><ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const</type>
        <definition>GYOTO_OBJECT Property const Gyoto::Astrobj::PolishDoughnut::properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="116" column="41" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a372cf1535b0f51744df6c0860bb11330" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Gyoto::Astrobj::PolishDoughnut::GYOTO_OBJECT_THREAD_SAFETY</definition>
        <argsstring></argsstring>
        <name>GYOTO_OBJECT_THREAD_SAFETY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="117" column="2" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aca787d2b9df0fd95c5004050a82215d4" prot="private" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t" kindref="compound">intersection_t</ref></type>
        <definition>intersection_t Gyoto::Astrobj::PolishDoughnut::intersection</definition>
        <argsstring></argsstring>
        <name>intersection</name>
        <briefdescription>
<para>double intersection(double) <ref refid="namespace_gyoto_1_1_functor" kindref="compound">Functor</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="247" column="17" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::__defaultfeatures</definition>
        <argsstring></argsstring>
        <name>__defaultfeatures</name>
        <briefdescription>
<para>Whether some virtual methods are implemented. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementations of some methods call one-another. This member is used internally to avoid infinite recursion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="215" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <briefdescription>
<para>Reference counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="83" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t Gyoto::SmartPointee::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
<para>A mutex. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled with libpthread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="89" column="19" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a143dcc27c175a682977e9fc7db775046" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>virtual Property const* Gyoto::Astrobj::PolishDoughnut::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a7cfca1aa6f8fc7b4826dae937ca98f24">getProperties</reimplements>
        <briefdescription>
<para>Get list of properties. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is declared automatically by the <ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> macro and defined automatically by the <ref refid="_gyoto_property_8h_1a1356435ea7ee0e18d07201a80e034dcc" kindref="member">GYOTO_PROPERTY_END</ref> macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="116" column="78"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acbe2c229f702905204ea0d822b94e17c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::fillProperty</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp, Property const &amp;p) const</argsstring>
        <name>fillProperty</name>
        <reimplements refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b">fillProperty</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Output a single <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> to XML. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation decides what to do based on the <emphasis>p.type</emphasis>. The format matches how <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">setParameters()</ref> an <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003" kindref="member">setParameter()</ref> would interpret the XML descition.</para>
<para>Overriding this method should be avoided, but makes sense in some cases (for instance <ref refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032" kindref="member">Screen::fillProperty()</ref> selects a different unit for <emphasis>Distance</emphasis> based on its magnitude, so that stellar sizes are expressed in solar radii while smaller sizes can be expressed in meters and larger sizes in parsecs).</para>
<para>Overriding implementation should fall-back on calling the implementation in the direct parent class: <programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>fmp-&gt;doSomething();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::fillProperty(fmp,<sp/>p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="120" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abdd1429d201841923493ed262edf1cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::PolishDoughnut::PolishDoughnut</definition>
        <argsstring>()</argsstring>
        <name>PolishDoughnut</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="122" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a8c84d7950c97a979ee0e0f47316660df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::PolishDoughnut::PolishDoughnut</definition>
        <argsstring>(const PolishDoughnut &amp;)</argsstring>
        <name>PolishDoughnut</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut" kindref="compound">PolishDoughnut</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="123" column="2"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa1e6b2ef3176bf4b464667eb68ffc8ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut" kindref="compound">PolishDoughnut</ref> *</type>
        <definition>virtual PolishDoughnut* Gyoto::Astrobj::PolishDoughnut::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5e9f81e6888919dea2437639a871a3e">clone</reimplements>
        <briefdescription>
<para>Cloner. </para>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented by the various <ref refid="class_gyoto_1_1_astrobj_1_1_generic" kindref="compound">Astrobj::Generic</ref> subclasses in order to support cloning: <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj&gt;<sp/>deep_copy<sp/>=<sp/>original-&gt;clone();</highlight></codeline>
</programlisting></para>
<para>Cloning is necessary for multi-threading, recommended for interaction with the Yorick plug-in etc.</para>
<para>Implementing it is very straightforward, as long as the copy constructor <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" kindref="member">Generic(const Generic&amp; )</ref> has been implemented: <programlisting><codeline><highlight class="normal">MyAstrobj*<sp/>MyAstrobj::clone()<sp/>const<sp/>{<sp/>return<sp/>new<sp/>MyAstrobj(*this);<sp/>}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="124" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a15aa27e6f83c93b3ff1de941df0b5acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gyoto::Astrobj::PolishDoughnut::~PolishDoughnut</definition>
        <argsstring>()</argsstring>
        <name>~PolishDoughnut</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a72332a7baff87b38b6d2a2e9a4c090ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::getL0</definition>
        <argsstring>() const</argsstring>
        <name>getL0</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1afbf5d0dbe21cd2617adfaf2c469235f0" kindref="member">PolishDoughnut::l0_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="134" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa3faf010d2d2bc861a98bf7f690a50db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::lambda</definition>
        <argsstring>() const</argsstring>
        <name>lambda</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="137" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a47fa7573a9deaa646d0ffb61c24853be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::lambda</definition>
        <argsstring>(double lambda)</argsstring>
        <name>lambda</name>
        <param>
          <type>double</type>
          <declname>lambda</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" kindref="member">PolishDoughnut::lambda_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="138" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1ebdf18167d5a36c18c56af2e293ba1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::centralEnthalpyPerUnitVolume</definition>
        <argsstring>() const</argsstring>
        <name>centralEnthalpyPerUnitVolume</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" kindref="member">PolishDoughnut::central_enthalpy_cgs_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="140" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab45b3b78d7abf3e495989b6e0d935250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::centralEnthalpyPerUnitVolume</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>centralEnthalpyPerUnitVolume</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" kindref="member">PolishDoughnut::central_enthalpy_cgs_</ref> in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="141" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a0fe94a3afa3844b025bd807e8041041b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::centralEnthalpyPerUnitVolume</definition>
        <argsstring>(double density)</argsstring>
        <name>centralEnthalpyPerUnitVolume</name>
        <param>
          <type>double</type>
          <declname>density</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" kindref="member">PolishDoughnut::central_enthalpy_cgs_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="142" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1d68815b27b82fee62683d01ccf820f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::centralEnthalpyPerUnitVolume</definition>
        <argsstring>(double density, std::string const &amp;unit)</argsstring>
        <name>centralEnthalpyPerUnitVolume</name>
        <param>
          <type>double</type>
          <declname>density</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" kindref="member">PolishDoughnut::central_enthalpy_cgs_</ref> in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="143" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1ea1b3e6762457ad55b0d76a91f31bd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::centralTemp</definition>
        <argsstring>() const</argsstring>
        <name>centralTemp</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a008e9ea0b578abcd7d4a8ba6f427997d" kindref="member">PolishDoughnut::central_temperature_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="145" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aca2ca78c5cc19742dedfe8ac17e43b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::centralTemp</definition>
        <argsstring>(double val)</argsstring>
        <name>centralTemp</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a008e9ea0b578abcd7d4a8ba6f427997d" kindref="member">PolishDoughnut::central_temperature_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="146" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa33f19bc08289a198ad2a437d5ce3546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a91d207eec3d3be2f78c06cf357e70cec" kindref="member">PolishDoughnut::beta_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="148" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ad156186ed6737d3c8e5065fc5011ae3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::beta</definition>
        <argsstring>(double beta)</argsstring>
        <name>beta</name>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a91d207eec3d3be2f78c06cf357e70cec" kindref="member">PolishDoughnut::beta_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="149" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a881a2ec1dcb7444f779c3c2236879fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::magnetizationParameter</definition>
        <argsstring>(double rr)</argsstring>
        <name>magnetizationParameter</name>
        <param>
          <type>double</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="151" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a73bea104a500a7199e11937b2c196a7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::magnetizationParameter</definition>
        <argsstring>() const</argsstring>
        <name>magnetizationParameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="152" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a3af236b3067f89018f3ca23dd23be92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::spectralOversampling</definition>
        <argsstring>(size_t)</argsstring>
        <name>spectralOversampling</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a82d9b7c04a3ac16c03fbaf3b924c3f80" kindref="member">PolishDoughnut::spectral_oversampling_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="154" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa0a8c4889d661514d77d7a62dde5d45e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::PolishDoughnut::spectralOversampling</definition>
        <argsstring>() const</argsstring>
        <name>spectralOversampling</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a82d9b7c04a3ac16c03fbaf3b924c3f80" kindref="member">PolishDoughnut::spectral_oversampling_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="155" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acd0c405bb71f565ace11d36557567d04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::changeCusp</definition>
        <argsstring>() const</argsstring>
        <name>changeCusp</name>
        <briefdescription>
<para>Get PolishDoughnut::komissarov_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="157" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae1329f805f5301aa74caf5aa6fb37fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::changeCusp</definition>
        <argsstring>(bool t)</argsstring>
        <name>changeCusp</name>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Set PolishDoughnut::komissarov_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="158" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a68bd42885d6b39675d9b2ae0098670ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::bremsstrahlung</definition>
        <argsstring>() const</argsstring>
        <name>bremsstrahlung</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae174ce613b8dd90af5fc756a48fbbe50" kindref="member">PolishDoughnut::bremsstrahlung_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="159" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a12b1417b79e712e7779678a1fbc5a7c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::bremsstrahlung</definition>
        <argsstring>(bool brems)</argsstring>
        <name>bremsstrahlung</name>
        <param>
          <type>bool</type>
          <declname>brems</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae174ce613b8dd90af5fc756a48fbbe50" kindref="member">PolishDoughnut::bremsstrahlung_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="160" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1af4ddc0f3cd0d77dd25186d604606f050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::angleAveraged</definition>
        <argsstring>() const</argsstring>
        <name>angleAveraged</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae9baa7917cd5b3d3781e08ae2b51a7c6" kindref="member">PolishDoughnut::angle_averaged_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="161" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1af6091b69f4724d06affdd285308948e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::angleAveraged</definition>
        <argsstring>(bool komis)</argsstring>
        <name>angleAveraged</name>
        <param>
          <type>bool</type>
          <declname>komis</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae9baa7917cd5b3d3781e08ae2b51a7c6" kindref="member">PolishDoughnut::angle_averaged_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="162" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a684241be2fd9c13e14af9b46e919155d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::nonThermalDeltaExpo</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>nonThermalDeltaExpo</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="163" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a12cb7d20d657d9dd04902c360f600dd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::PolishDoughnut::nonThermalDeltaExpo</definition>
        <argsstring>() const</argsstring>
        <name>nonThermalDeltaExpo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="164" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a39204a41e60e1c1640825ca74c90db7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::angmomrinner</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>angmomrinner</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="165" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aef7d2b597d7f8a39b5b08da93f060d49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::PolishDoughnut::angmomrinner</definition>
        <argsstring>() const</argsstring>
        <name>angmomrinner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="166" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a97e883db8437ab18069bb0401a578f2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::adafparams</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>adafparams</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="167" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a86430f2badc97fa4cd3681fbae626df1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::PolishDoughnut::adafparams</definition>
        <argsstring>() const</argsstring>
        <name>adafparams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="168" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ad3662a006704b7913a0ba40a46237660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::adaf</definition>
        <argsstring>(bool t)</argsstring>
        <name>adaf</name>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="169" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2eb077f960c7e91ae5eaac6807288592" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::PolishDoughnut::adaf</definition>
        <argsstring>() const</argsstring>
        <name>adaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="170" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::PolishDoughnut::setParameter</definition>
        <argsstring>(Gyoto::Property const &amp;p, std::string const &amp;name, std::string const &amp;content, std::string const &amp;unit)</argsstring>
        <name>setParameter</name>
        <reimplements refid="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98">setParameter</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (and name) </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (<emphasis>p</emphasis>) of this <emphasis>name</emphasis> is found (i.e. either <emphasis>p.name</emphasis> or <emphasis>p.name_false</emphasis> is equal to <emphasis>name</emphasis>). Implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::setParameter(p,<sp/>name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> that matches <emphasis>name</emphasis> (<emphasis>p.name</emphasis> == <emphasis>name</emphasis> or <emphasis>p.name_false</emphasis> == <emphasis>name</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="171" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5ce356cd83b7e6ab9a880db65b479ba5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::getWsurface</definition>
        <argsstring>() const</argsstring>
        <name>getWsurface</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a9b2d12a41a72d557316d1f80b047afdc" kindref="member">PolishDoughnut::W_surface_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="177" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a903910dceec88cde8e8f579652ecb95d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::getWcentre</definition>
        <argsstring>() const</argsstring>
        <name>getWcentre</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac8a72ed2bc404fb9826fc86dc11d9e52" kindref="member">PolishDoughnut::W_centre_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="178" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a8f520a30c8aa90f03a4f7b44d7a0c58e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::getRcusp</definition>
        <argsstring>() const</argsstring>
        <name>getRcusp</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5120476cd9f66aca3449c31622eea20d" kindref="member">PolishDoughnut::r_cusp_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="179" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1046cc135414af53b0d9a9cb3988bf18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::getRcentre</definition>
        <argsstring>() const</argsstring>
        <name>getRcentre</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2e07f2748eebb56a2b040a1383039a78" kindref="member">PolishDoughnut::r_centre_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="180" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab752daf92833f9ec6134e6c50ed2c607" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::PolishDoughnut::metric</definition>
        <argsstring>(Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;)</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd">metric</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="183" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::PolishDoughnut::Impact</definition>
        <argsstring>(Photon *ph, size_t index, Astrobj::Properties *data)</argsstring>
        <name>Impact</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7">Impact</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Does a photon at these coordinates impact the object? </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" kindref="member">Impact()</ref> checks whether a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> impacts the object between two integration steps of the photon&apos;s trajectory (those two steps are photon-&gt;getCoord(index, coord1) and photon-&gt;getCoord(index+1, coord2)). Impact returns 1 if the photon impacts the object between these two steps, else 0. In many cases of geometrically thick obects, the implementation <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Astrobj::Standard::Impact()</ref> will be fine.</para>
<para>Impact will call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">Generic::processHitQuantities()</ref> (which is virtual and may be re-implemented) to compute observable properties on demand: if the data pointer is non-NULL, the object will look in it for pointers to properties which apply to its kind. If a pointer to a property known to this object is present, then the property is computed and store at the pointed-to address. For instance, all objects know the &quot;intensity&quot; property. If data-&gt;intensity != NULL, the instensity is computed and stored in *data-&gt;intensity.</para>
<para>If data is non-NULL and only in this case, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref> will also call ph-&gt;transmit() to update the transmissions of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> (see <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit(size_t, double)</ref>). This must not be done if data is NULL (see <ref refid="class_gyoto_1_1_astrobj_1_1_complex_1a1ec0f21fbe89cfdcc1dda5851d0ab209" kindref="member">Astrobj::Complex::Impact()</ref> for an explanation).</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" kindref="member">Impact()</ref> may not extend the ph <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. The only two dates that are guaranteed to be defined are at indices index and index+1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> aimed at the object; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the last photon step; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure to hold the observables at impact.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if impact, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="187" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4da0028c5b09c475eba74364a17447e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::PolishDoughnut::operator()</definition>
        <argsstring>(double const coord[4])</argsstring>
        <name>operator()</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88">operator()</reimplements>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Function defining the object interior. </para>
        </briefdescription>
        <detaileddescription>
<para>A potential, distance, or whatever function such that <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4da0028c5b09c475eba74364a17447e2" kindref="member">operator()(double const coord[4])</ref> &lt; <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" kindref="member">Standard::critical_value_</ref> if and only if coord is inside the object. This function is used by the default implmenetation of <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" kindref="member">Impact()</ref>. If <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" kindref="member">Impact()</ref> is overloaded, it is not necessary to overload operator()(double coord[4]). The default implementation throws an error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="190" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>(double val)</argsstring>
        <name>safetyValue</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="128" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>() const</argsstring>
        <name>safetyValue</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="129" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>() const</argsstring>
        <name>deltaInObj</name>
        <briefdescription>
<para>Get Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the constant integration step inside the astrobj</para>
<para><simplesect kind="return"><para>delta_inobj_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>(double val)</argsstring>
        <name>deltaInObj</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Functor::Double_constDoubleArray::operator()</definition>
        <argsstring>(double const data[])=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_1a312fb0f3764200c1037564f7fc982e0a">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The actual function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::giveDelta</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>giveDelta</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a7923f45423943f81d5daf94a1d1e7e01">giveDelta</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Maximum <delta/> inside object. </para>
        </briefdescription>
        <detaileddescription>
<para>Gives the requested integration step <delta/><subscript>t</subscript> (in coordinate time t) between two neighbooring points along a portion of geodesic inside an astrobj; the current implementation only considers a constant delta, equal to Standard::deltaInobj()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate at which <delta/><subscript>t</subscript> is given </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="177" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_1ae0ec76caf0f970442e1825016b804b9e">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2f5f60d3f32c175484ddb48f16a09be9">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a9a4ee32519b8425863a0360cb628d9ac">metric</reimplementedby>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="299" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>()</argsstring>
        <name>rMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a59fde26fc4e4542108e714cc5e2cadac">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1aea16e485a51f46b322b7e27bd8f95ebf">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1af4dfb2b79fe0879c0871ea9828d79f19">rMax</reimplementedby>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Get maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para>Child classes may use the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> member to cache this value, if its current value is DBL_MAX.</para>
<para>It can also be set using <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref>.</para>
<para><simplesect kind="return"><para>rmax_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="317" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>() const</argsstring>
        <name>rMax</name>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="318" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> and convert result to unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double rmax converted to unit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="327" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Set maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> in geometrical units. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="342" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val, std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" kindref="member">Generic::rMax(double val)</ref> after converting val from unit to geometrical units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> expressed in unit &quot;unit&quot;; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="351" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::deltaMax</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>deltaMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1ac44d8265c9b1206c9b0db08661700bd8">deltaMax</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Get max step constraint for adaptive integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max step to find this object reliably </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="334" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Generic::GYOTO_OBJECT_ACCESSORS_UNIT</definition>
        <argsstring>(deltaMaxInsideRMax)</argsstring>
        <name>GYOTO_OBJECT_ACCESSORS_UNIT</name>
        <param>
          <type>deltaMaxInsideRMax</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="353" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>(bool flag)</argsstring>
        <name>opticallyThin</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set whether the object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>Set flag indicating that radiative transfer should be integrated, i.e. the object is to be considered optically thin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if optically thin, 0 if optically thick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>() const</argsstring>
        <name>opticallyThin</name>
        <briefdescription>
<para>Query whether object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" kindref="member">opticallyThin(bool flag)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>(bool flag)</argsstring>
        <name>showshadow</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>() const</argsstring>
        <name>showshadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="369" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>(bool flag)</argsstring>
        <name>redshift</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="371" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>() const</argsstring>
        <name>redshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="372" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref></type>
        <definition>virtual Gyoto::Quantity_t Gyoto::Astrobj::Generic::getDefaultQuantities</definition>
        <argsstring>()</argsstring>
        <name>getDefaultQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a3205ac156dea7d83682d3a890e9604ec">getDefaultQuantities</reimplementedby>
        <briefdescription>
<para>Which quantities to compute if know was requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref> suitable as input to <ref refid="class_gyoto_1_1_scenery_1acaed08cd4fa2113101d26436cd96aebd" kindref="member">Gyoto::Scenery::setRequestedQuantities()</ref> to set de default quantities to compute for this object. The default of these defaults GYOTO_QUANTITY_INTENSITY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="380" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::setParameters</definition>
        <argsstring>(FactoryMessenger *fmp)</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_gyoto_1_1_object_1aa0a8b119e7aa95b21be081f8c97e1626">setParameters</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a635b0ea47d78c02a999d932eec8b16c5">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a931ca188ae49a0d8e9764a151edd3553">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_oscil_torus_1a0e4df99b42b3d3722d6ea39972d1421d">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Main loop in Subcontractor_t function. </para>
        </briefdescription>
        <detaileddescription>
<para>The Subcontractor_t function for each <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> kind should look somewhat like this (templated as <ref refid="namespace_gyoto_1_1_astrobj_1a889583a9d40c821bd55c4191cb3201ed" kindref="member">Gyoto::Astrobj::Subcontractor&lt;MyKind&gt;</ref>): <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj::Generic&gt;</highlight></codeline>
<codeline><highlight class="normal">Gyoto::Astrobj::MyKind::Subcontractor(FactoryMessenger*<sp/>fmp)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SmartPointer&lt;MyKind&gt;<sp/>ao<sp/>=<sp/>new<sp/>MyKind();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ao<sp/>-&gt;<sp/>setParameters(fmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>ao;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Each object kind should implement setParameter(string name, string content, string unit) to interpret the individual XML elements. <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">setParameters()</ref> can be overloaded in case the specific <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> class needs low level access to the <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref>. See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">UniformSphere::setParameters()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="408" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, state_t const &amp;coord_ph_hit, double const *coord_obj_hit, double dt, Astrobj::Properties *data) const</argsstring>
        <name>processHitQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a639da6614e85224814af4f2f6622e9ab">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6d49fda70fa23c3d8d9ed4386793a287">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1a339f1cd765cd173c34c85552e7e4c415">processHitQuantities</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Fills <ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>processHitQuantities fills the requested data in Impact. To use it, you need to call it in the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14" kindref="member">Impact()</ref> method for your object in case of hit. It will fill Redshift, Intensity, <ref refid="namespace_gyoto_1_1_spectrum" kindref="compound">Spectrum</ref>, BinSpectrum and update the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref>&apos;s transmission by calling <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit()</ref>, only if data==NULL.</para>
<para>You can overload it for your <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>. The generic implementation calls <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" kindref="member">integrateEmission()</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="466" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, double *coord_ph_hit, double *coord_obj_hit, double dt, Astrobj::Properties *data) const =delete</argsstring>
        <name>processHitQuantities</name>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="469" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6a02e8cdae8245805ea322ea039629bd">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a1959fc55d5a8ae291a97bdd0c671b02f">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_analytic_emission_1a34fb7967be7d6e2b99b07ab1b78db706">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_model_atmosphere_1a43d345310246cf22b100866f84f8ee7d">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_xillver_reflection_1a3d3c012b2d5c93ede2fdd8dd8d4ce8cf">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_directional_disk_1a7922052feb1a4471753a41463fd72015">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_1a4e20a1364eb3f2e8d2113d264efb103a">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a8f73e6ed0328cec2a9d8b408e3cc9ef7">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a25fce651aee743e033aee7ea2991d7c9">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1ae03931fd40be766cf3b9aceaeda2bcc6">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_b_b_1ac0b8dc44edf3754c2b0c9eb876655b1e">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_grid_intensity_1a8126a61ceded9f93325d72d853767a7f">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_iron_line_1a623669c69d274cac8204fd9221de806c">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_p_l_1ac593c781834f45547e77f12d72436f2b">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1af355c23d4ac320e8bada7419e955332b">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a9bd1fb09edbf579d0e179fab6a950f10">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a7a34b44aa0fe91618ecdaadd87438d0b">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_inflate_star_1a732cd458782de4ab3887b5c303714de3">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a145deb35b7401163837aaa50ce6952ac">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length ds<subscript>em</subscript>, in the emitter&apos;s frame. It should take self-absorption along ds<subscript>em</subscript> into account.</para>
<para>Reminder :<itemizedlist>
<listitem><para>intensity = I<subscript><nu/></subscript> [J m^-2 s^-1 ster^-1 Hz^-1];</para>
</listitem><listitem><para>invariant intensity = I<subscript><nu/></subscript>/<nu/><superscript>3</superscript>, which has the same value in any frame;</para>
</listitem><listitem><para>emission coefficient = j<subscript><nu/></subscript> [J m^-3 s^-1 ster^-1 Hz^-1] , defined by dI<subscript><nu/></subscript> = j<subscript><nu/></subscript>*ds, where ds is the distance travelled by the photon inside the object;</para>
</listitem><listitem><para>invariant emission coef = j<subscript><nu/></subscript>/<nu/><superscript>2</superscript>, which has the same value in any frame.</para>
</listitem></itemizedlist>
</para>
<para>The equation used for radiative transfer (without absorption) is:</para>
<para>d(I<subscript><nu/></subscript>/<nu/><superscript>3</superscript>)/d<lambda/> = (j<subscript><nu/></subscript>/<nu/><superscript>2</superscript>) [*]</para>
<para>where <lambda/> is the integration parameter along the null geodesic.</para>
<para>NB: Let us consider a particular observer, with <nu/> being the frequency measured by this observer, and ds being the proper distance (as measured by the observer) that the photon travels as it moves from <lambda/> to <lambda/>+d<lambda/> along its geodesic. Then it can be shown that:</para>
<para>d<lambda/> = ds/<nu/></para>
<para>This shows that Eq. [*] is homogeneous.</para>
<para>The default implementation returns 1. if optically thick and ds<subscript>em</subscript> if optically thin. It allows for a quick implementation of your object for visualization purposes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nu_em</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency at emission [Hz] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>length over which to integrate inside the object [geometrical units] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="522" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="525" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a229272a0eec6c7eaeff905a4f4190e2e">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> for several values of <nu/><subscript>em</subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length dsem. It should take self-absorption along dsem into account.</para>
<para>Same as emission(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const looping on several values of nu_em.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Inu[] and nu_em[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I<subscript><nu/></subscript> or dI<subscript><nu/></subscript> [W m-2 sr-2] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="551" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="554" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="565" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double *Inu, double *Qnu, double *Unu, double *Vnu, Eigen::Matrix4d *Onu, double const *nuem, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1ac70d4cc58245764c6a76026755dac088">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a15a271cca8f57aab8a920720e78bc8e2">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1a099bdffa842fea620d36006f680052e3">radiativeQ</reimplementedby>
        <param>
          <type>double *</type>
          <declname>Inu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Qnu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Unu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Vnu</declname>
        </param>
        <param>
          <type>Eigen::Matrix4d *</type>
          <declname>Onu</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Compute the increment of Stokes parameters and transmission matrix. Polarised version of RadiaveQ. </para>
        </briefdescription>
        <detaileddescription>
<para>First function to be called for radiative quantities. If exist, i.e. implemented in an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, return the Stokes parameters emitted by the small volume of length dsem.</para>
<para>Warning :<itemizedlist>
<listitem><para>The basis used to determine the Stokes coefficients is different from the observer parallel transported polarisation basis. One should use getChi function to compute the angle between these two basis.</para>
</listitem><listitem><para>The non polarized case must also be implemented in this function to avoid error.</para>
</listitem></itemizedlist>
</para>
<para>See exemple in SimplePolarStar.C.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of intensity (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter Q (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Unu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter U (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter V (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Onu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output transmission (Eigen) matrix (must be set to a previously allocated array of Matrix4d) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of nu_em[], Inu[], Qnu[], Unu[], Vnu[], and Onu[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Increment of the Stokes parameters (I,Q,U,V) and local Transmission matrix (O). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="602" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a302d31a2017146695ea41f878dbb1336">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a6add4c7014e29c3049d1f3b53b700922">integrateEmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the integral of <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> from <nu/><subscript>1</subscript> to <nu/><subscript>2</subscript>. The default implementation is a numerical integrator which works well enough and is reasonably fast if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> is a smooth function (i.e. no emission or absorption lines). If possible, it is wise to implement an analytical solution. It is used by processHitQuantities to compute the &quot;BinSpectrum&quot; quantity which is the most physical: it is the only quantity that can be actually measured directly by a real-life instrument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="617" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]=NULL) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, double *cph, double *co) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]) const</argsstring>
        <name>transmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1ad4fc9a40ef19f5af4277853b96a45f3e">transmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd">transmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Transmission: exp( <alpha/><subscript><nu/></subscript> * ds<subscript>em</subscript> ) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> computes the transmission of this fluid element or 0 if optically thick. The default implementation returns 1. (no attenuation) if optically thin, 0. if optically thick.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuem</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency in the fluid&apos;s frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="646" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="648" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, double coord[8]) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="649" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" kindref="member">Omatrix()</ref> computes the exponential of the Mueller matrix which contains the absorption and Faraday coefficients and is used in the polarized radiative transfer equation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Onu</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix (must be allocated previously) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphanu[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 4 absorption coefficients in the Stokes basis (I,Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnu[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 3 Faraday coefficients in the Stokes basis (Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Chi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of rotation between the parallel transported observer polarization basis and the Stokes basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="663" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="666" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="667" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Pmatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Pmatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="670" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double sin2Chi, double cos2Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the rotation matrix with angle Chi to the emission Stokes vector constructed in the fonction from the individual coefficients </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="677" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="678" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::getChi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], bool elec=false) const</argsstring>
        <name>getChi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Chi angle. Return the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::getSinCos2Chi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], double *sin2Chi, double *cos2Chi, bool elec=false) const</argsstring>
        <name>getSinCos2Chi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cosinus and sinus of 2*Chi angle. Chi being the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph) const</argsstring>
        <name>computeB4vect</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the magnetic field 4-vector at a given position and a given configuration</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>B4vect</parametername>
</parameternamelist>
<parameterdescription>
<para>the output 4-vector magnetic field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magneticConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>string which determine the wanted configuration (&apos;Radial&apos;, &apos;Azimuthal&apos;, &apos;Vertical&apos;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the object which also contain its velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the photon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect_ipole</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph, double spin) const</argsstring>
        <name>computeB4vect_ipole</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X, int *const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array containing the range of all the axes (for exemple : radius, \theta, \varphi) at which the array is knwon. Should be built as a pointer of pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the length of each axes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[N][3]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contain the minimum value, the maximum value and the length of each axes. The axes will be assumed to be linearly spaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="731" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointee::incRefCount</definition>
        <argsstring>()</argsstring>
        <name>incRefCount</name>
        <briefdescription>
<para>Increment the reference counter. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::decRefCount</definition>
        <argsstring>()</argsstring>
        <name>decRefCount</name>
        <briefdescription>
<para>Decrement the reference counter and return current value. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::getRefCount</definition>
        <argsstring>()</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>Get the current number of references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="98" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Object::isThreadSafe</definition>
        <argsstring>() const</argsstring>
        <name>isThreadSafe</name>
        <briefdescription>
<para>Whether this class is thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Return True if this object is thread-safe, i.e. if an instance and its clone can be used in parallel threads (in the context of Scenery::raytrace()). Known objects which are not thread-safe include Lorene metrics and everything from the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in.</para>
<para>The default implementation considers that the class itself is thread safe and recurses into the declared properties to check whether they are safe too. Classes that abide to the Object/Property paradigm and are themselves thread-safe have nothing special to do.</para>
<para>Objects that clone children in their copy constructor that are not declared as properties must take these children into account.</para>
<para>Classes that are never thread-safe must declare it. It acn be easily done using GYOTO_OBJECT_THREAD_SAFETY in the class declaration and GYOTO_PROPERTY_THREAD_UNSAFE in the class definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="197" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="237" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="240" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="243" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="246" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="252" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="255" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>Property const* Gyoto::Object::property</definition>
        <argsstring>(std::string const pname) const</argsstring>
        <name>property</name>
        <param>
          <type>std::string const</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Find property by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Look into the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> list for a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> whose <emphasis>name</emphasis> (or <emphasis>name_false</emphasis>, for a boolean <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>) is <emphasis>pname</emphasis>. Return a const pointer to the first such property found, or NULL if none is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="267" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillElement</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp) const</argsstring>
        <name>fillElement</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a88d6f38c5fa5401a860291fbb21526d5">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_complex_1ada5f1fb56b87c56ff64113a49c76cca0">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_complex_1a0d73e5fd77b0e920af44894abfc96a99">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a63501e86c47ea6b67e0c564c706a72f1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Fill the XML element for this <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation simply calls <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref> for each <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> defined for the <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>.</para>
<para>Derived classes should avoid overriding <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref>. It may make sense occasionally, e.g. to make sure that the metric is output first.</para>
<para>To customize how a given <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> is rendered, it is better to override <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref>.</para>
<para>If this method is overridden, the implementation should in general call <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> on the direct base. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="316" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Object::setParameter</definition>
        <argsstring>(std::string name, std::string content, std::string unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a0c6f1aee4a478c5ef695348d64eae2d4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_kerr_k_s_1a4c9d3a51c5d1478908516a0b96a42135">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_rot_star3__1_1ac2fbf2bb5796e3d7c7eb80dccfe20af7">setParameter</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by name. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if no <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> of this <emphasis>name</emphasis> is found. Overriding implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>int<sp/>setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">int<sp/>B::setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>return<sp/>A::setParameter(name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>0;<sp/><sp/>//<sp/>name<sp/>was<sp/>known</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity). This may have a path component, e.g. &quot;Astrobj::Radius&quot;, in which case a property named &quot;Astrobj&quot; will be sought in the current object, and setParameter will be called recusrively on this <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> with Radius as name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if this parameter is known, 1 if it is not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="390" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::describeProperty</definition>
        <argsstring>(Gyoto::Property const &amp;p) const</argsstring>
        <name>describeProperty</name>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Format desrciption for a property. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string containing the name(s) and type of the property, as well as whether it supports unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Object::help</definition>
        <argsstring>() const</argsstring>
        <name>help</name>
        <briefdescription>
<para>Print (to stdout) some help on this class. </para>
        </briefdescription>
        <detaileddescription>
<para>Describe all properties that this instance supports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Object::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af6c1082ac163e833fff9e934b417b194">kind</reimplementedby>
        <briefdescription>
<para>Get kind_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="456" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa9b86e321868f68ef17c0b1c06b00593" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::PolishDoughnut::tell</definition>
        <argsstring>(Gyoto::Hook::Teller *msg)</argsstring>
        <name>tell</name>
        <reimplements refid="class_gyoto_1_1_hook_1_1_listener_1a900ac53b9f989d3e2de0a917d440d9a1">tell</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_hook_1_1_teller" kindref="compound">Gyoto::Hook::Teller</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Update <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab0ad265513f17f53991c8c0d2d2b6ee2" kindref="member">PolishDoughnut::aa_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_hook_1_1_listener_1a900ac53b9f989d3e2de0a917d440d9a1" kindref="member">Hook::Listener::tell()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="200" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae87634f7393638366006a9e82ea58e91" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::PolishDoughnut::getVelocity</definition>
        <argsstring>(double const pos[4], double vel[4])</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1acdc2e44eb25269f41b0710f62acfee40">getVelocity</reimplements>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Fluid velocity field. </para>
        </briefdescription>
        <detaileddescription>
<para>Fill vel with the 4-vector velocity of the fluid at 4-position pos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>4-position at which to compute velocity; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vel</parametername>
</parameternamelist>
<parameterdescription>
<para>4-velocity at pos. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="201" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::PolishDoughnut::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>integrateEmission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb">integrateEmission</reimplements>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>PolishDought::emission() is slow. Integrating it is very slow. This implementation simply oversamples the spectrum by <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a82d9b7c04a3ac16c03fbaf3b924c3f80" kindref="member">PolishDoughnut::spectral_oversampling_</ref> and sums the trapezoids.</para>
<para>For general documentation, see <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" kindref="member">Astrobj::Generic::integrateEmission(double * I, double const * boundaries, size_t const * chaninds, size_t nbnu, double dsem, double *cph, double *co) const </ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="213" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aff09a9faa13d0be2428a97325740e87b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::PolishDoughnut::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>radiativeQ</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa">radiativeQ</reimplements>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>emission and transmission together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="217" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::kind</definition>
        <argsstring>(const std::string)</argsstring>
        <name>kind</name>
        <param>
          <type>const std::string</type>
        </param>
        <briefdescription>
<para>Set kind_. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" kindref="member">kind(const std::string)</ref> is protected because, for most Objects, it should not be changed in runtime. Set kind_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="453" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab8b51c04946760fc848a32838fcf6d4f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::PolishDoughnut::potential</definition>
        <argsstring>(double r, double theta) const</argsstring>
        <name>potential</name>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>Potential defining shape, used by <ref refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4da0028c5b09c475eba74364a17447e2" kindref="member">operator()()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="225" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interp1d</definition>
        <argsstring>(double const x, double const y0, double const y1) const</argsstring>
        <name>interp1d</name>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the 1D linear interpolation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x query position along the linear function [0,1]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the low position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the high position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="741" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpNd</definition>
        <argsstring>(int const N, double *const Xq, double **const X, double *const Y, std::string const *cond_limit) const</argsstring>
        <name>interpNd</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the N- dimension interpolation on an N-dimensional cube</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X[2**N][N]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contains for the 2**N points of the N dimensional cube the associated axes values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y[2**N]</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the value of the array to be interpolated at each points of the N-dimensional cube. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="751" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::getIndice</definition>
        <argsstring>(double &amp;xq, std::string const cond_limit, double const X_params[3], double *const X=NULL) const</argsstring>
        <name>getIndice</name>
        <param>
          <type>double &amp;</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>cond_limit</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>X_params</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double *const</type>
          <declname>X</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that return the closest indice of the query value on an axis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query value on the axis. Could be modified in case of periodic boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary conditions that will be applied to the axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array which contain the minimum value, the maximum value and the length of the axe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) array which contains the value of the axis points. Usefull for not linearly spaced axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="760" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" static="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref> &gt;</type>
        <definition>typedef Gyoto::SmartPointer&lt;Gyoto::SmartPointee&gt; Gyoto::SmartPointee::Subcontractor_t(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</definition>
        <argsstring>(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</argsstring>
        <name>Subcontractor_t</name>
        <briefdescription>
<para>A subcontractor builds an object upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Various classes need to provide a subcontractor to be able to instantiate themselves upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. A subcontractor is a function (often a static member function) which accepts a pointer to a <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> as unique parameter, communicates with the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref> using this messenger to read an XML description of the object to build, and returns this objet. <ref refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" kindref="member">SmartPointee::Subcontractor_t</ref>* is just generic enough a typedef to cast to and from other subcontractor types: <ref refid="namespace_gyoto_1_1_astrobj_1aa53c7ada58c8c8f3799c3485b7d8f3bb" kindref="member">Astrobj::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_metric_1ad6b33a642cc94ad67855184d2adb95df" kindref="member">Metric::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a163055eef14aee22dd8fa5188812d889" kindref="member">Spectrum::Subcontractor_t</ref>. A subcontractor needs to be registered using the relevant <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Register()</ref> function: <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Astrobj::Register()</ref>, <ref refid="namespace_gyoto_1_1_metric_1a602cba49b001e7470f3d439d1ab3e8f7" kindref="member">Metric::Register()</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a517874749d838d7121880e7d9d14c626" kindref="member">Spectrum::Register()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="114" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A toroidal accretion structure. </para>
    </briefdescription>
    <detaileddescription>
<para>Latest reference: Vincent, F. H.; Yan, W.; Straub, O.; Zdziarski, A. A.; Abramowicz, M. A. 2015, <bold>A magnetized torus for modeling Sagittarius A* millimeter images and spectra</bold>, A&amp;A 574:A48.</para>
<para>Reference: Straub, O.; Vincent, F. H.; Abramowicz, M. A.; Gourgoulhon, E.; &amp; Paumard, T. 2012, <bold>Modelling the black hole silhouette in Sagittarius A* with ion tori</bold>, A&amp;A 543:83. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Gyoto::Astrobj::PolishDoughnut</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
      </node>
      <node id="4">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="7">
        <label>Gyoto::Hook::Listener</label>
        <link refid="class_gyoto_1_1_hook_1_1_listener"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Gyoto::Property</label>
        <link refid="class_gyoto_1_1_property"/>
        <childnode refid="7" relation="usage">
          <edgelabel>getter_unit</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>getter</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>setter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>setter_unit</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::PolishDoughnut</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="protected-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>intersection</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>spectrumPLSynch_</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>spectrumSynch_</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::ThermalSynchrotron &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="12">
        <label>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="20">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::PowerLawSynchrotron &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Gyoto::SmartPointer&lt; Gyoto::Screen &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="16">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrometer::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="5">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>Gyoto::Functor::Double_Double_const</label>
        <link refid="class_gyoto_1_1_functor_1_1_double___double__const"/>
      </node>
      <node id="10">
        <label>Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="4">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="14">
        <label>Gyoto::Property::setter_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__t"/>
        <childnode refid="9" relation="usage">
          <edgelabel>set_spectrometer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>set_metric</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>set_spectrum</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>set_astrobj</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>set_screen</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Gyoto::Property::setter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__unit__t"/>
      </node>
      <node id="11">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="17">
        <label>Gyoto::Hook::Listener</label>
        <link refid="class_gyoto_1_1_hook_1_1_listener"/>
      </node>
      <node id="7">
        <label>Gyoto::Property::getter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__unit__t"/>
      </node>
      <node id="8">
        <label>Gyoto::Property::getter_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__t"/>
        <childnode refid="9" relation="usage">
          <edgelabel>get_spectrometer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>get_metric</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>get_spectrum</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>get_astrobj</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>get_screen</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>Gyoto::Astrobj::PolishDoughnut::intersection_t</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1_1intersection__t"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>papa</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" line="66" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoPolishDoughnut.h" bodystart="69" bodyend="272"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>__defaultfeatures</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a85b26c2cc1ff83ece2140c703470ad8d" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>aa2_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab0ad265513f17f53991c8c0d2d2b6ee2" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>aa_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ad3662a006704b7913a0ba40a46237660" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>adaf</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2eb077f960c7e91ae5eaac6807288592" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>adaf</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1bea7f081e9775f17967521d69ac04ff" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>adaf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2af4cb3285308f7e419cb56cef39fffe" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>ADAFdensity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a97e883db8437ab18069bb0401a578f2f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>adafparams</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a86430f2badc97fa4cd3681fbae626df1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>adafparams</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1accaf819ba7258a6a35794483c700adfa" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>ADAFtemperature_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae9baa7917cd5b3d3781e08ae2b51a7c6" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>angle_averaged_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1af4ddc0f3cd0d77dd25186d604606f050" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>angleAveraged</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1af6091b69f4724d06affdd285308948e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>angleAveraged</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a39204a41e60e1c1640825ca74c90db7b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>angmomrinner</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aef7d2b597d7f8a39b5b08da93f060d49" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>angmomrinner</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa33f19bc08289a198ad2a437d5ce3546" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>beta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ad156186ed6737d3c8e5065fc5011ae3f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>beta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a91d207eec3d3be2f78c06cf357e70cec" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>beta_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a68bd42885d6b39675d9b2ae0098670ee" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>bremsstrahlung</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a12b1417b79e712e7779678a1fbc5a7c0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>bremsstrahlung</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae174ce613b8dd90af5fc756a48fbbe50" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>bremsstrahlung_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abe3b65fc2dd86a2d21addfbc61720880" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>central_enthalpy_cgs_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a008e9ea0b578abcd7d4a8ba6f427997d" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>central_temperature_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1ebdf18167d5a36c18c56af2e293ba1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralEnthalpyPerUnitVolume</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab45b3b78d7abf3e495989b6e0d935250" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralEnthalpyPerUnitVolume</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a0fe94a3afa3844b025bd807e8041041b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralEnthalpyPerUnitVolume</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1d68815b27b82fee62683d01ccf820f5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralEnthalpyPerUnitVolume</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1ea1b3e6762457ad55b0d76a91f31bd3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralTemp</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aca2ca78c5cc19742dedfe8ac17e43b12" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>centralTemp</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acd0c405bb71f565ace11d36557567d04" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>changeCusp</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae1329f805f5301aa74caf5aa6fb37fae" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>changeCusp</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa1af985b6012b82432a2506bdc090833" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>changecusp_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa1e6b2ef3176bf4b464667eb68ffc8ba" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>clone</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>computeB4vect</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>computeB4vect_ipole</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>critical_value_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>decRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac23ea235cba87a9985ff665059f840b0" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>defangmomrinner_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>delta_inobj_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>deltamaxinsidermax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4c23ab8b4ae58fa2db84bb27e0ddcfc9" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>deltaPL_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a475c5ae508acceb3ba6cc919a2f6cf20" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>DeltaWm1_</name></member>
      <member refid="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>describeProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>fillElement</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acbe2c229f702905204ea0d822b94e17c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>fillProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>flag_radtransf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa01d6dc0f2a939e8c9cab6bfad0171fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a54143ea81889a2d2ae75f0ca9ad0264a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3a0ff7964797a990879dd4cd2026cfbb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getChi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getDefaultQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getIndice</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a72332a7baff87b38b6d2a2e9a4c090ee" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getL0</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a143dcc27c175a682977e9fc7db775046" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getProperties</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a1046cc135414af53b0d9a9cb3988bf18" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getRcentre</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a8f520a30c8aa90f03a4f7b44d7a0c58e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getRcusp</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getSinCos2Chi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae87634f7393638366006a9e82ea58e91" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a903910dceec88cde8e8f579652ecb95d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getWcentre</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5ce356cd83b7e6ab9a880db65b479ba5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>getWsurface</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>gg_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>giveDelta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aea2131812c6990486dfd4ff0089835bc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::PolishDoughnut &gt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>GYOTO_OBJECT_ACCESSORS_UNIT</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a372cf1535b0f51744df6c0860bb11330" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>GYOTO_OBJECT_THREAD_SAFETY</name></member>
      <member refid="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>help</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Impact</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>incRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>interp1d</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>interpNd</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aca787d2b9df0fd95c5004050a82215d4" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>intersection</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab0cd7e012f185c1b632c18cadfd1ff89" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>intersection_t</name></member>
      <member refid="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>isThreadSafe</name></member>
      <member refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>kind_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1afbf5d0dbe21cd2617adfaf2c469235f0" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>l0_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa3faf010d2d2bc861a98bf7f690a50db" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>lambda</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a47fa7573a9deaa646d0ffb61c24853be" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>lambda</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abb35787d430a0ac922c422a3afcb33dc" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>lambda_</name></member>
      <member refid="class_gyoto_1_1_hook_1_1_listener_1a44482865ba840a67bb5a4de050304913" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Listener</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a881a2ec1dcb7444f779c3c2236879fb4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>magnetizationParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a73bea104a500a7199e11937b2c196a7b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>magnetizationParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a9714e7a2b959a2c943e0ca6f62ceee6a" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>magnetizationParameter_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab752daf92833f9ec6134e6c50ed2c607" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>mutex_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a684241be2fd9c13e14af9b46e919155d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>nonThermalDeltaExpo</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a12cb7d20d657d9dd04902c360f600dd5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>nonThermalDeltaExpo</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>noredshift_</name></member>
      <member refid="class_gyoto_1_1_object_1a5173d279a53bbc9850771e344d6b79b0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a5834e83ca1482a379c7ddefb1919457f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a1fbd53bedaf8d18f67b12ec0660b8aa7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a4da0028c5b09c475eba74364a17447e2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" virt="pure-virtual" ambiguityscope="Gyoto::Functor::Double_constDoubleArray::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a96f6f9634b2204a74e4009ddf26af721" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>plugins_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Pmatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1abdd1429d201841923493ed262edf1cad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>PolishDoughnut</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a8c84d7950c97a979ee0e0f47316660df" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>PolishDoughnut</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab8b51c04946760fc848a32838fcf6d4f" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>potential</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae201a220950364993f2de038277d81b9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>properties</name></member>
      <member refid="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>property</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2e07f2748eebb56a2b040a1383039a78" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>r_centre_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5120476cd9f66aca3449c31622eea20d" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>r_cusp_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a352f4773370d84e617459e1d3a89b50c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>r_torusouter_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aff09a9faa13d0be2428a97325740e87b" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>refCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ae0f2752545c6e3716dae7f2c036d4891" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rintorus_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a5dc339fe8ac05d2ece15ef1d630cb7fe" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rochelobefilling_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>safety_value_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>setParameters</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>shadow_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a7d212bcd7d3ac4147e18683c47ca910d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1adc075b08ca5d3c0635bc97f843835f8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a82d9b7c04a3ac16c03fbaf3b924c3f80" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectral_oversampling_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a3af236b3067f89018f3ca23dd23be92b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectralOversampling</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa0a8c4889d661514d77d7a62dde5d45e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectralOversampling</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac713818c8a13f21cb28510cf5f0b8d05" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectrumBrems_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab511d780ebadd19ea2238b48dfeb304e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectrumPLSynch_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa3d93ae99af65ebeccd85f3ab2e50310" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>spectrumSynch_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a8b99f313d5bb7a143d2125663cde29f1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1f8278591f27a729bb1222424619730c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a7948720c27fc3bdaf23c8c52a769a68e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a95b93c6163a8dc99bba0010c53fd04fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>Subcontractor_t</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aa9b86e321868f68ef17c0b1c06b00593" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>tell</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ac8a72ed2bc404fb9826fc86dc11d9e52" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>W_centre_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a9b2d12a41a72d557316d1f80b047afdc" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>W_surface_</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a56681650c78dc2089816993041f288c0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~Double_constDoubleArray</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1adf8758eab0634929f5c3630a54a88f07" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~Generic</name></member>
      <member refid="class_gyoto_1_1_hook_1_1_listener_1a68ee73f312f9e50d2a4563543ff15a57" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~Listener</name></member>
      <member refid="class_gyoto_1_1_object_1ab6f302f93bfd1f07ae2a6a48b3c74932" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a15aa27e6f83c93b3ff1de941df0b5acf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~PolishDoughnut</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a4301d456d1d36ed7912d073b742c74e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a24d8ea9fd96f72f1dfc197bc396a662d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::PolishDoughnut</scope><name>~Standard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
