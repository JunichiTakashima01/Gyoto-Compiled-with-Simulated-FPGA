<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_astrobj_1_1_blob" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gyoto::Astrobj::Blob</compoundname>
    <basecompoundref refid="class_gyoto_1_1_astrobj_1_1_star" prot="public" virt="non-virtual">Gyoto::Astrobj::Star</basecompoundref>
    <includes refid="_gyoto_blob_8h" local="no">GyotoBlob.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_blob_1a30d10baf9e43c0eba11c5cf71b3ab3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Gyoto::SmartPointer&lt; Gyoto::Astrobj::Blob &gt;</definition>
        <argsstring></argsstring>
        <name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Blob &gt;</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_astrobj_1_1_blob" kindref="compound">Gyoto::Astrobj::Blob</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="1" column="0" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a7eb420f7250117218e0270cba59d200e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::numberDensity_cgs_</definition>
        <argsstring></argsstring>
        <name>numberDensity_cgs_</name>
        <briefdescription>
<para>cgs-unit number density of hotspot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="60" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a622e45e6adb8a2fc0febdf10587a61ed" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::temperature_</definition>
        <argsstring></argsstring>
        <name>temperature_</name>
        <briefdescription>
<para>temperature of hotspot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="61" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a739ec0505709ea11c467101464cca10a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeRef_M_</definition>
        <argsstring></argsstring>
        <name>timeRef_M_</name>
        <briefdescription>
<para>M-unit reference time for Gaussian hotspot evolution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="62" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1ac39fdbec31c2209010b9fc5fa96efc37" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeSigma_M_</definition>
        <argsstring></argsstring>
        <name>timeSigma_M_</name>
        <briefdescription>
<para>M-unit temporal sigma for Gaussian hotspot evolution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="63" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a3e16870030d467a9058c8928317be4c7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::magnetizationParameter_</definition>
        <argsstring></argsstring>
        <name>magnetizationParameter_</name>
        <briefdescription>
<para>magnetization parameter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="64" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a3cce49700b9466e5d0e45c53a99205b3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::kappaIndex_</definition>
        <argsstring></argsstring>
        <name>kappaIndex_</name>
        <briefdescription>
<para>hotspot synchrotron kappa-distribution index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="65" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a23d90b06112158084777ed835381f821" prot="private" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_kappa_distribution_synchrotron" kindref="compound">Spectrum::KappaDistributionSynchrotron</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::KappaDistributionSynchrotron&gt; Gyoto::Astrobj::Blob::spectrumKappaSynch_</definition>
        <argsstring></argsstring>
        <name>spectrumKappaSynch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="66" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a3d9da530e3d1a9b076a412318cbea227" prot="private" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_power_law_synchrotron" kindref="compound">Spectrum::PowerLawSynchrotron</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::PowerLawSynchrotron&gt; Gyoto::Astrobj::Blob::spectrumPLSynch_</definition>
        <argsstring></argsstring>
        <name>spectrumPLSynch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="67" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a96925fc32cb0aaf43b20639921a6b3fc" prot="private" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_thermal_synchrotron" kindref="compound">Spectrum::ThermalSynchrotron</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::ThermalSynchrotron&gt; Gyoto::Astrobj::Blob::spectrumThermalSynch_</definition>
        <argsstring></argsstring>
        <name>spectrumThermalSynch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="68" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1ad9e882c3945e0941d049bc89601c5195" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Blob::magneticConfig_</definition>
        <argsstring></argsstring>
        <name>magneticConfig_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="69" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a4f20b8b4c2f83e918d181d9346dd3714" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Blob::electronDistrib_</definition>
        <argsstring></argsstring>
        <name>electronDistrib_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="70" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::__defaultfeatures</definition>
        <argsstring></argsstring>
        <name>__defaultfeatures</name>
        <briefdescription>
<para>Whether some virtual methods are implemented. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementations of some methods call one-another. This member is used internally to avoid infinite recursion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="215" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <briefdescription>
<para>Reference counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="83" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t Gyoto::SmartPointee::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
<para>A mutex. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled with libpthread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="89" column="19" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_blob_1a63fd983a342c1755f98a89f03f89078e" prot="public" static="yes" mutable="no">
        <type><ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const</type>
        <definition>GYOTO_OBJECT Property const Gyoto::Astrobj::Blob::properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="75" column="42" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a1e2b5026d024236ea9a8970f1296def2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>virtual Property const* Gyoto::Astrobj::Blob::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_star_1a0153c6e720d7300454bd78ee1e17d3c5">getProperties</reimplements>
        <briefdescription>
<para>Get list of properties. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is declared automatically by the <ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> macro and defined automatically by the <ref refid="_gyoto_property_8h_1a1356435ea7ee0e18d07201a80e034dcc" kindref="member">GYOTO_PROPERTY_END</ref> macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="75" column="79"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a1b086c9b355bb6935fd9603456a7bf96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Blob::Blob</definition>
        <argsstring>()</argsstring>
        <name>Blob</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="class_gyoto_1_1_astrobj_1_1_blob" kindref="compound">Blob</ref> object with undefined initial conditions. One needs to set the coordinate system, the metric, and the initial position and velocity before integrating the orbit. setInititialCondition() can be used for that. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="83" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a53eeb009e0c1a87b709a4e1118968702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Blob::Blob</definition>
        <argsstring>(const Blob &amp;orig)</argsstring>
        <name>Blob</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_blob" kindref="compound">Blob</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="85" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a8e950021898b79a296ff72a534bea640" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_blob" kindref="compound">Blob</ref> *</type>
        <definition>virtual Blob* Gyoto::Astrobj::Blob::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_star_1a9500b9530ce198a28284e215e98054c5">clone</reimplements>
        <briefdescription>
<para>Cloner. </para>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented by the various <ref refid="class_gyoto_1_1_astrobj_1_1_generic" kindref="compound">Astrobj::Generic</ref> subclasses in order to support cloning: <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj&gt;<sp/>deep_copy<sp/>=<sp/>original-&gt;clone();</highlight></codeline>
</programlisting></para>
<para>Cloning is necessary for multi-threading, recommended for interaction with the Yorick plug-in etc.</para>
<para>Implementing it is very straightforward, as long as the copy constructor <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" kindref="member">Generic(const Generic&amp; )</ref> has been implemented: <programlisting><codeline><highlight class="normal">MyAstrobj*<sp/>MyAstrobj::clone()<sp/>const<sp/>{<sp/>return<sp/>new<sp/>MyAstrobj(*this);<sp/>}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="86" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1acd7df6867dd1542953509b7af7ebd6de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gyoto::Astrobj::Blob::~Blob</definition>
        <argsstring>()</argsstring>
        <name>~Blob</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="88" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a4c1f725ae8846f2151686321b94f7a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::electronDistribution</definition>
        <argsstring>(const std::string &amp;kind)</argsstring>
        <name>electronDistribution</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>kind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="91" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1ade5b4c3601e15bb25eb6466bb5bad3a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Blob::electronDistribution</definition>
        <argsstring>() const</argsstring>
        <name>electronDistribution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="92" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a42aac90602cfbe24dadfa677d8a7513f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Blob::className</definition>
        <argsstring>() const</argsstring>
        <name>className</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_star_1af247a6fcaa58c21d0ebbca3c922f1ba4">className</reimplements>
        <briefdescription>
<para>&quot;Blob&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="94" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1ad67e21908a300508dfabe2d5a4008340" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Blob::className_l</definition>
        <argsstring>() const</argsstring>
        <name>className_l</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_star_1a7d97c083f53d5236d318ce7dd6925d2a">className_l</reimplements>
        <briefdescription>
<para>&quot;inflate_star&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="95" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a7be77a0d1636593637571c776b7d6bf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::numberDensity</definition>
        <argsstring>() const</argsstring>
        <name>numberDensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a0b1c86a1a3a053b40febcfa045210ee0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::numberDensity</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>numberDensity</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1ab73c1cc0d5b268b26254a64d5c5b7558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::numberDensity</definition>
        <argsstring>(double ne)</argsstring>
        <name>numberDensity</name>
        <param>
          <type>double</type>
          <declname>ne</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="100" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a3d64cc8504f88047dd178ffe7df32079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::numberDensity</definition>
        <argsstring>(double dens, std::string const &amp;unit)</argsstring>
        <name>numberDensity</name>
        <param>
          <type>double</type>
          <declname>dens</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="101" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a2b242cf2dec6bb91572f3b6f134b4b85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::temperature</definition>
        <argsstring>() const</argsstring>
        <name>temperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a2d4f3531c47bd7bff5541795e65407a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::temperature</definition>
        <argsstring>(double tt)</argsstring>
        <name>temperature</name>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="103" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a9626b949f054b3427094079dfc898943" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeRef</definition>
        <argsstring>() const</argsstring>
        <name>timeRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a2c5528539f6e3a1861019f31d4fbbd34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeRef</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>timeRef</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a52e37dd958c37d8d5c12fe699c5826ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::timeRef</definition>
        <argsstring>(double tt)</argsstring>
        <name>timeRef</name>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="106" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a96fdbb26994065e495eae799fff6887d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::timeRef</definition>
        <argsstring>(double tt, std::string const &amp;unit)</argsstring>
        <name>timeRef</name>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="107" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a541b7d3fe96dc8c1d9eddbe95971db9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeSigma</definition>
        <argsstring>() const</argsstring>
        <name>timeSigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a693a0daccd9c615d45ee059f618ef980" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::timeSigma</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>timeSigma</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a99b6b6fc0de0cc2d5bee9d4946e9f2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::timeSigma</definition>
        <argsstring>(double tt)</argsstring>
        <name>timeSigma</name>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="110" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a934bf2aafa1a6a8ad9e02d872e0adce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::timeSigma</definition>
        <argsstring>(double tt, std::string const &amp;unit)</argsstring>
        <name>timeSigma</name>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="111" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1aeaa9a4163dde8d299031c52f257314a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::magnetizationParameter</definition>
        <argsstring>(double rr)</argsstring>
        <name>magnetizationParameter</name>
        <param>
          <type>double</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="112" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a14774384332ef215f119f6d799685eda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::magnetizationParameter</definition>
        <argsstring>() const</argsstring>
        <name>magnetizationParameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a87f1abdd75ca607736b638fa5fa40cc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Blob::kappaIndex</definition>
        <argsstring>() const</argsstring>
        <name>kappaIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a1945bee1dff2fb0ef1f16b0493a547e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::kappaIndex</definition>
        <argsstring>(double)</argsstring>
        <name>kappaIndex</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="115" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1ade87f85922fde42b06270528487330e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Blob::magneticConfiguration</definition>
        <argsstring>(std::string config)</argsstring>
        <name>magneticConfiguration</name>
        <param>
          <type>std::string</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="116" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1af3218552bc145c481f9573ba8a6178df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Blob::magneticConfiguration</definition>
        <argsstring>() const</argsstring>
        <name>magneticConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="117" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1aa9e772639c3b505c12f17912a2a8aea9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Blob::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>radiativeQ</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa">radiativeQ</reimplements>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>emission and transmission together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="119" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_blob_1a802f5151d9e1328893c6ea136ccd60af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Blob::radiativeQ</definition>
        <argsstring>(double Inu[], double Qnu[], double Unu[], double Vnu[], Eigen::Matrix4d Onu[], double const nu_ems[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]) const</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Qnu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Unu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Vnu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Eigen::Matrix4d</type>
          <declname>Onu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_ems</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="124" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a0fac2855eeaf27c08681b767c7ba592a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::metric</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt;)</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd">metric</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a05ceb0db36380a273c987ac5288ef6b7">metric</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="138" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a9a4ee32519b8425863a0360cb628d9ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Star::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee">metric</reimplements>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="139" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1ad5361b431562bbe8813e9ad8e9da13d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Star::getMass</definition>
        <argsstring>() const</argsstring>
        <name>getMass</name>
        <reimplements refid="class_gyoto_1_1_worldline_1a6b881b454ff1f61e33fec9379b16130b">getMass</reimplements>
        <briefdescription>
<para>Return 1. </para>
        </briefdescription>
        <detaileddescription>
<para>The mass of a <ref refid="class_gyoto_1_1_astrobj_1_1_star" kindref="compound">Star</ref> is always 1. Stars do not perturb the metric. The only relevant point is that Stars are massive particules, their exact mass is of no importance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="146" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Star::rMax</definition>
        <argsstring>()</argsstring>
        <name>rMax</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf">rMax</reimplements>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Get maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para>Child classes may use the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> member to cache this value, if its current value is DBL_MAX.</para>
<para>It can also be set using <ref refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1" kindref="member">rMax()</ref>.</para>
<para><simplesect kind="return"><para>rmax_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>() const</argsstring>
        <name>rMax</name>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="318" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> and convert result to unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double rmax converted to unit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="327" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Set maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> in geometrical units. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="342" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val, std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" kindref="member">Generic::rMax(double val)</ref> after converting val from unit to geometrical units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> expressed in unit &quot;unit&quot;; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="351" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1aa6b4cfca9a76e9ab8a0793d9b95ce4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::setInitialCondition</definition>
        <argsstring>(double const coord[8])</argsstring>
        <name>setInitialCondition</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a3735d6f7d779665d5775da44b7546f0e">setInitialCondition</reimplementedby>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Same as Worldline::setInitialCondition(gg, coord, sys,1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="153" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ae31d27ebf8613473fb5ac5d150494786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::setInitialCondition</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt; gg, const double coord[8], const int dir, double const Ephi[4], double const Etheta[4])</argsstring>
        <name>setInitialCondition</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
          <declname>gg</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>Ephi</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>Etheta</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Set or re-set the initial condition prior to integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref> to the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Gyoto::Metric</ref> in this universe; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>8 element array containing the initial condition, i.e. the 4-position and the 4-velocity of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> at the receiving end; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>direction: 1 for future, -1 for past. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ephi</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value of base vector to parallel-transport. Ignored if <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref> is false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Etheta</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value of base vector to parallel-transport. Ignored if <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref> is false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="666" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aea7ebf7a56248b9df9b0cca7814a057c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::setInitialCondition</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt; gg, const double coord[8], const int dir)</argsstring>
        <name>setInitialCondition</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
          <declname>gg</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set or re-set the initial condition prior to integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref> to the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Gyoto::Metric</ref> in this universe; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>8 element array containing the initial condition, i.e. the 4-position and the 4-velocity of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> at the receiving end; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>direction: 1 for future, -1 for past. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="679" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Astrobj::Star::setParameter</definition>
        <argsstring>(std::string name, std::string content, std::string unit)</argsstring>
        <name>setParameter</name>
        <reimplements refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b">setParameter</reimplements>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by name. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if no <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> of this <emphasis>name</emphasis> is found. Overriding implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>int<sp/>setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">int<sp/>B::setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>return<sp/>A::setParameter(name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>0;<sp/><sp/>//<sp/>name<sp/>was<sp/>known</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity). This may have a path component, e.g. &quot;Astrobj::Radius&quot;, in which case a property named &quot;Astrobj&quot; will be sought in the current object, and setParameter will be called recusrively on this <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> with Radius as name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if this parameter is known, 1 if it is not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="159" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::setParameter</definition>
        <argsstring>(Gyoto::Property const &amp;p, std::string const &amp;name, std::string const &amp;content, std::string const &amp;unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003">setParameter</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (and name) </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (<emphasis>p</emphasis>) of this <emphasis>name</emphasis> is found (i.e. either <emphasis>p.name</emphasis> or <emphasis>p.name_false</emphasis> is equal to <emphasis>name</emphasis>). Implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::setParameter(p,<sp/>name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> that matches <emphasis>name</emphasis> (<emphasis>p.name</emphasis> == <emphasis>name</emphasis> or <emphasis>p.name_false</emphasis> == <emphasis>name</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="426" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::setParameters</definition>
        <argsstring>(FactoryMessenger *fmp)</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a">setParameters</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Main loop in Subcontractor_t function. </para>
        </briefdescription>
        <detaileddescription>
<para>The Subcontractor_t function for each <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> kind should look somewhat like this (templated as <ref refid="namespace_gyoto_1_1_astrobj_1a889583a9d40c821bd55c4191cb3201ed" kindref="member">Gyoto::Astrobj::Subcontractor&lt;MyKind&gt;</ref>): <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj::Generic&gt;</highlight></codeline>
<codeline><highlight class="normal">Gyoto::Astrobj::MyKind::Subcontractor(FactoryMessenger*<sp/>fmp)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SmartPointer&lt;MyKind&gt;<sp/>ao<sp/>=<sp/>new<sp/>MyKind();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ao<sp/>-&gt;<sp/>setParameters(fmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>ao;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Each object kind should implement setParameter(string name, string content, string unit) to interpret the individual XML elements. <ref refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e" kindref="member">setParameters()</ref> can be overloaded in case the specific <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> class needs low level access to the <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref>. See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">UniformSphere::setParameters()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="164" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a152074fdddb29950936d3193d3aea55d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::fillProperty</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp, Property const &amp;p) const</argsstring>
        <name>fillProperty</name>
        <reimplements refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b">fillProperty</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Output a single <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> to XML. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation decides what to do based on the <emphasis>p.type</emphasis>. The format matches how <ref refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e" kindref="member">setParameters()</ref> an <ref refid="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527" kindref="member">setParameter()</ref> would interpret the XML descition.</para>
<para>Overriding this method should be avoided, but makes sense in some cases (for instance <ref refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032" kindref="member">Screen::fillProperty()</ref> selects a different unit for <emphasis>Distance</emphasis> based on its magnitude, so that stellar sizes are expressed in solar radii while smaller sizes can be expressed in meters and larger sizes in parsecs).</para>
<para>Overriding implementation should fall-back on calling the implementation in the direct parent class: <programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>fmp-&gt;doSomething();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::fillProperty(fmp,<sp/>p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="167" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a51700948b06b09337703d0b8f626d8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::getCartesian</definition>
        <argsstring>(double const *const dates, size_t const n_dates, double *const x, double *const y, double *const z, double *const xprime=NULL, double *const yprime=NULL, double *const zprime=NULL)</argsstring>
        <name>getCartesian</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5bb0f209ef90a9331297caf3013a9225">getCartesian</reimplements>
        <param>
          <type>double const *const</type>
          <declname>dates</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>n_dates</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>xprime</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>yprime</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>zprime</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Get the 6 Cartesian coordinates for specific dates. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is present in both the API of <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere" kindref="compound">UniformSphere</ref> and <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. It is pure virtual in <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere" kindref="compound">UniformSphere</ref>. The <ref refid="class_gyoto_1_1_astrobj_1_1_star" kindref="compound">Star</ref> reimplementation is a trivial wrapper around <ref refid="class_gyoto_1_1_worldline_1a52e534430d89982b4b617e51e7aa0807" kindref="member">Worldline::getCartesian()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="185" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a918f9b19ae2c683dec1d0efab04e913a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::getVelocity</definition>
        <argsstring>(double const pos[4], double vel[4])</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3393591c9e1fef3171f4016109a888e">getVelocity</reimplements>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Yield velocity of the center of the sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="189" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Star::radiativeQ</definition>
        <argsstring>(double *Inu, double *Qnu, double *Unu, double *Vnu, Eigen::Matrix4d *Onu, double const *nuem, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>radiativeQ</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96">radiativeQ</reimplements>
        <param>
          <type>double *</type>
          <declname>Inu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Qnu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Unu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Vnu</declname>
        </param>
        <param>
          <type>Eigen::Matrix4d *</type>
          <declname>Onu</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Compute the increment of Stokes parameters and transmission matrix. Polarised version of RadiaveQ. </para>
        </briefdescription>
        <detaileddescription>
<para>First function to be called for radiative quantities. If exist, i.e. implemented in an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, return the Stokes parameters emitted by the small volume of length dsem.</para>
<para>Warning :<itemizedlist>
<listitem><para>The basis used to determine the Stokes coefficients is different from the observer parallel transported polarisation basis. One should use getChi function to compute the angle between these two basis.</para>
</listitem><listitem><para>The non polarized case must also be implemented in this function to avoid error.</para>
</listitem></itemizedlist>
</para>
<para>See exemple in SimplePolarStar.C.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of intensity (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter Q (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Unu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter U (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter V (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Onu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output transmission (Eigen) matrix (must be set to a previously allocated array of Matrix4d) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of nu_em[], Inu[], Qnu[], Unu[], Vnu[], and Onu[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Increment of the Stokes parameters (I,Q,U,V) and local Transmission matrix (O). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="191" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="565" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6687bc8062ddb7b085531805f7e90218" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::spectrum</definition>
        <argsstring>(SmartPointer&lt; Spectrum::Generic &gt;)</argsstring>
        <name>spectrum</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set spectrum_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="137" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7a72bf3b1fb87c1641dc59a5c2c7e95d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::spectrum</definition>
        <argsstring>() const</argsstring>
        <name>spectrum</name>
        <briefdescription>
<para>Get spectrum_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="139" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3fad5ceba1126c9792721dceaa54889" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::opacity</definition>
        <argsstring>(SmartPointer&lt; Spectrum::Generic &gt;)</argsstring>
        <name>opacity</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="141" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6c6781d676a5d8755c69b9fb9a424c21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::opacity</definition>
        <argsstring>() const</argsstring>
        <name>opacity</name>
        <briefdescription>
<para>Get opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="143" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2aea833f9a7d311ebe20ab5760fa224c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
<para>Get radius_ in geometrical units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="145" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7e4cc8c5335694bf74684fd47421e5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(double)</argsstring>
        <name>radius</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1a66ad21157952f4cc3232525a80659947">radius</reimplementedby>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set radius_ in geometrical units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="146" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aecdeb59ffd2238ea17d16edfbd9ac537" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>radius</name>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
<para>Get radius_ in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="147" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ace341bcc018e32817483518a2861737a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(double, std::string const &amp;)</argsstring>
        <name>radius</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
<para>Set radius_ in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="148" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a657c4e7d92af87a2baff31aab44e1ad4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::deltaMaxOverRadius</definition>
        <argsstring>() const</argsstring>
        <name>deltaMaxOverRadius</name>
        <briefdescription>
<para>Get dltmor_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1a288e87aaac846c66785a3334ddbb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::deltaMaxOverRadius</definition>
        <argsstring>(double f)</argsstring>
        <name>deltaMaxOverRadius</name>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set dltmor_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="151" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1af06f064b6e6bf8b69891fb42bffe9ff1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::deltaMaxOverDistance</definition>
        <argsstring>() const</argsstring>
        <name>deltaMaxOverDistance</name>
        <briefdescription>
<para>Get dltmod_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa722f232b7256c5af7bba02283dc2444" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::deltaMaxOverDistance</definition>
        <argsstring>(double f)</argsstring>
        <name>deltaMaxOverDistance</name>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set dltmod_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="154" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa5385b540457561b12840f4ef56f5f96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::UniformSphere::isotropic</definition>
        <argsstring>() const</argsstring>
        <name>isotropic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="156" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeedd10ed45f14bacea65f5d44251dced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::UniformSphere::isotropic</definition>
        <argsstring>(bool)</argsstring>
        <name>isotropic</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="157" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ab38ad87c3a8a46a434699d0c6b8207be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="158" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a8db8dec2c5aef7b97e350f5294bf535f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::UniformSphere::alpha</definition>
        <argsstring>(double)</argsstring>
        <name>alpha</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="159" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1e4971aa995221805a8dfbd9ba3b2684" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::operator()</definition>
        <argsstring>(double const coord[4])</argsstring>
        <name>operator()</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88">operator()</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a01c91b96424b05f2062d05c8a5e61852">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Square distance to the center of the sphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Ensure integration does not miss the object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="163" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Functor::Double_constDoubleArray::operator()</definition>
        <argsstring>(double const data[])=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_1a312fb0f3764200c1037564f7fc982e0a">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The actual function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::deltaMax</definition>
        <argsstring>(double *coord)</argsstring>
        <name>deltaMax</name>
        <param>
          <type>double *</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max( <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" kindref="member">dltmor_</ref>*<ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" kindref="member">radius_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" kindref="member">dltmod_</ref>*operator()(double coord[]) ) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="171" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::deltaMax</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>deltaMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1ac44d8265c9b1206c9b0db08661700bd8">deltaMax</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Get max step constraint for adaptive integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max step to find this object reliably </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="334" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aaa4a59a6eef22e86bea86afb3cbae113" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::deltaMax</definition>
        <argsstring>() const</argsstring>
        <name>deltaMax</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1ad5790f6d8667d6d80a82e6156d202917" kindref="member">delta_max_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="513" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aa553e5eaafccb20782536519c30c73d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Worldline::deltaMax</definition>
        <argsstring>(double const pos[8], double delta_max_external) const</argsstring>
        <name>deltaMax</name>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>delta_max_external</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get delta max at a given position</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>4-position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delta_max_external</parametername>
</parameternamelist>
<parameterdescription>
<para>external constraint on delta_max </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the smallest value between <ref refid="class_gyoto_1_1_worldline_1ad5790f6d8667d6d80a82e6156d202917" kindref="member">delta_max_</ref>, delta_max_external, and R*<ref refid="class_gyoto_1_1_worldline_1acc816534ccad7be9dc97f8d650e087e3" kindref="member">delta_max_over_r_</ref> where R is pos[1] in spherical coordinates and max(x1, x2, x3) in Cartesian coordinates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="534" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ad551ce9b6131f44b4560f43a90557f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::deltaMax</definition>
        <argsstring>(double h1)</argsstring>
        <name>deltaMax</name>
        <param>
          <type>double</type>
          <declname>h1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set delta_max_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="539" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="525" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a229272a0eec6c7eaeff905a4f4190e2e">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> for several values of <nu/><subscript>em</subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length dsem. It should take self-absorption along dsem into account.</para>
<para>Same as emission(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const looping on several values of nu_em.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Inu[] and nu_em[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I<subscript><nu/></subscript> or dI<subscript><nu/></subscript> [W m-2 sr-2] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="551" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="554" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a302d31a2017146695ea41f878dbb1336">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a6add4c7014e29c3049d1f3b53b700922">integrateEmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the integral of <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> from <nu/><subscript>1</subscript> to <nu/><subscript>2</subscript>. The default implementation is a numerical integrator which works well enough and is reasonably fast if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> is a smooth function (i.e. no emission or absorption lines). If possible, it is wise to implement an analytical solution. It is used by processHitQuantities to compute the &quot;BinSpectrum&quot; quantity which is the most physical: it is the only quantity that can be actually measured directly by a real-life instrument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="617" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]=NULL) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a65318a11cd3eb26258deb3dde9942056">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1ae7fe80444da7bea77b2cef62ffaaf096">integrateEmission</reimplementedby>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Like double integrateEmission(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]) const for each <ref refid="namespace_gyoto_1_1_spectrometer" kindref="compound">Spectrometer</ref> channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="628" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, double *cph, double *co) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]) const</argsstring>
        <name>transmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1ad4fc9a40ef19f5af4277853b96a45f3e">transmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd">transmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Transmission: exp( <alpha/><subscript><nu/></subscript> * ds<subscript>em</subscript> ) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> computes the transmission of this fluid element or 0 if optically thick. The default implementation returns 1. (no attenuation) if optically thin, 0. if optically thick.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuem</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency in the fluid&apos;s frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="646" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="648" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, double coord[8]) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="649" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>(double val)</argsstring>
        <name>safetyValue</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="128" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>() const</argsstring>
        <name>safetyValue</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="129" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>() const</argsstring>
        <name>deltaInObj</name>
        <briefdescription>
<para>Get Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the constant integration step inside the astrobj</para>
<para><simplesect kind="return"><para>delta_inobj_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>(double val)</argsstring>
        <name>deltaInObj</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Astrobj::Standard::Impact</definition>
        <argsstring>(Gyoto::Photon *ph, size_t index, Astrobj::Properties *data=NULL)</argsstring>
        <name>Impact</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14">Impact</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_inflate_star_1a3830c81bb6668a3a84bf1c8c7d0dc0c1">Impact</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3">Impact</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa">Impact</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Does a photon at these coordinates impact the object? </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref> checks whether a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> impacts the object between two integration steps of the photon&apos;s trajectory (those two steps are photon-&gt;getCoord(index, coord1) and photon-&gt;getCoord(index+1, coord2)). Impact returns 1 if the photon impacts the object between these two steps, else 0. In many cases of geometrically thick obects, the implementation <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Astrobj::Standard::Impact()</ref> will be fine.</para>
<para>Impact will call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">Generic::processHitQuantities()</ref> (which is virtual and may be re-implemented) to compute observable properties on demand: if the data pointer is non-NULL, the object will look in it for pointers to properties which apply to its kind. If a pointer to a property known to this object is present, then the property is computed and store at the pointed-to address. For instance, all objects know the &quot;intensity&quot; property. If data-&gt;intensity != NULL, the instensity is computed and stored in *data-&gt;intensity.</para>
<para>If data is non-NULL and only in this case, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref> will also call ph-&gt;transmit() to update the transmissions of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> (see <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit(size_t, double)</ref>). This must not be done if data is NULL (see <ref refid="class_gyoto_1_1_astrobj_1_1_complex_1a1ec0f21fbe89cfdcc1dda5851d0ab209" kindref="member">Astrobj::Complex::Impact()</ref> for an explanation).</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref> may not extend the ph <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. The only two dates that are guaranteed to be defined are at indices index and index+1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> aimed at the object; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the last photon step; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure to hold the observables at impact.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if impact, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="142" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::giveDelta</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>giveDelta</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a7923f45423943f81d5daf94a1d1e7e01">giveDelta</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Maximum <delta/> inside object. </para>
        </briefdescription>
        <detaileddescription>
<para>Gives the requested integration step <delta/><subscript>t</subscript> (in coordinate time t) between two neighbooring points along a portion of geodesic inside an astrobj; the current implementation only considers a constant delta, equal to Standard::deltaInobj()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate at which <delta/><subscript>t</subscript> is given </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="177" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Generic::GYOTO_OBJECT_ACCESSORS_UNIT</definition>
        <argsstring>(deltaMaxInsideRMax)</argsstring>
        <name>GYOTO_OBJECT_ACCESSORS_UNIT</name>
        <param>
          <type>deltaMaxInsideRMax</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="353" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>(bool flag)</argsstring>
        <name>opticallyThin</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set whether the object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>Set flag indicating that radiative transfer should be integrated, i.e. the object is to be considered optically thin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if optically thin, 0 if optically thick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>() const</argsstring>
        <name>opticallyThin</name>
        <briefdescription>
<para>Query whether object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" kindref="member">opticallyThin(bool flag)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>(bool flag)</argsstring>
        <name>showshadow</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>() const</argsstring>
        <name>showshadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="369" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>(bool flag)</argsstring>
        <name>redshift</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="371" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>() const</argsstring>
        <name>redshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="372" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref></type>
        <definition>virtual Gyoto::Quantity_t Gyoto::Astrobj::Generic::getDefaultQuantities</definition>
        <argsstring>()</argsstring>
        <name>getDefaultQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a3205ac156dea7d83682d3a890e9604ec">getDefaultQuantities</reimplementedby>
        <briefdescription>
<para>Which quantities to compute if know was requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref> suitable as input to <ref refid="class_gyoto_1_1_scenery_1acaed08cd4fa2113101d26436cd96aebd" kindref="member">Gyoto::Scenery::setRequestedQuantities()</ref> to set de default quantities to compute for this object. The default of these defaults GYOTO_QUANTITY_INTENSITY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="380" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, state_t const &amp;coord_ph_hit, double const *coord_obj_hit, double dt, Astrobj::Properties *data) const</argsstring>
        <name>processHitQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a639da6614e85224814af4f2f6622e9ab">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6d49fda70fa23c3d8d9ed4386793a287">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1a339f1cd765cd173c34c85552e7e4c415">processHitQuantities</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Fills <ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>processHitQuantities fills the requested data in Impact. To use it, you need to call it in the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14" kindref="member">Impact()</ref> method for your object in case of hit. It will fill Redshift, Intensity, <ref refid="namespace_gyoto_1_1_spectrum" kindref="compound">Spectrum</ref>, BinSpectrum and update the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref>&apos;s transmission by calling <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit()</ref>, only if data==NULL.</para>
<para>You can overload it for your <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>. The generic implementation calls <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" kindref="member">integrateEmission()</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="466" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, double *coord_ph_hit, double *coord_obj_hit, double dt, Astrobj::Properties *data) const =delete</argsstring>
        <name>processHitQuantities</name>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="469" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" kindref="member">Omatrix()</ref> computes the exponential of the Mueller matrix which contains the absorption and Faraday coefficients and is used in the polarized radiative transfer equation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Onu</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix (must be allocated previously) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphanu[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 4 absorption coefficients in the Stokes basis (I,Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnu[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 3 Faraday coefficients in the Stokes basis (Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Chi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of rotation between the parallel transported observer polarization basis and the Stokes basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="663" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="666" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="667" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Pmatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Pmatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="670" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double sin2Chi, double cos2Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the rotation matrix with angle Chi to the emission Stokes vector constructed in the fonction from the individual coefficients </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="677" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="678" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::getChi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], bool elec=false) const</argsstring>
        <name>getChi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Chi angle. Return the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::getSinCos2Chi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], double *sin2Chi, double *cos2Chi, bool elec=false) const</argsstring>
        <name>getSinCos2Chi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cosinus and sinus of 2*Chi angle. Chi being the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph) const</argsstring>
        <name>computeB4vect</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the magnetic field 4-vector at a given position and a given configuration</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>B4vect</parametername>
</parameternamelist>
<parameterdescription>
<para>the output 4-vector magnetic field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magneticConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>string which determine the wanted configuration (&apos;Radial&apos;, &apos;Azimuthal&apos;, &apos;Vertical&apos;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the object which also contain its velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the photon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect_ipole</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph, double spin) const</argsstring>
        <name>computeB4vect_ipole</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X, int *const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array containing the range of all the axes (for exemple : radius, \theta, \varphi) at which the array is knwon. Should be built as a pointer of pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the length of each axes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[N][3]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contain the minimum value, the maximum value and the length of each axes. The axes will be assumed to be linearly spaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="731" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointee::incRefCount</definition>
        <argsstring>()</argsstring>
        <name>incRefCount</name>
        <briefdescription>
<para>Increment the reference counter. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::decRefCount</definition>
        <argsstring>()</argsstring>
        <name>decRefCount</name>
        <briefdescription>
<para>Decrement the reference counter and return current value. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::getRefCount</definition>
        <argsstring>()</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>Get the current number of references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="98" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Object::isThreadSafe</definition>
        <argsstring>() const</argsstring>
        <name>isThreadSafe</name>
        <briefdescription>
<para>Whether this class is thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Return True if this object is thread-safe, i.e. if an instance and its clone can be used in parallel threads (in the context of Scenery::raytrace()). Known objects which are not thread-safe include Lorene metrics and everything from the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in.</para>
<para>The default implementation considers that the class itself is thread safe and recurses into the declared properties to check whether they are safe too. Classes that abide to the Object/Property paradigm and are themselves thread-safe have nothing special to do.</para>
<para>Objects that clone children in their copy constructor that are not declared as properties must take these children into account.</para>
<para>Classes that are never thread-safe must declare it. It acn be easily done using GYOTO_OBJECT_THREAD_SAFETY in the class declaration and GYOTO_PROPERTY_THREAD_UNSAFE in the class definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="197" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="237" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="240" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="243" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="246" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="252" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="255" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>Property const* Gyoto::Object::property</definition>
        <argsstring>(std::string const pname) const</argsstring>
        <name>property</name>
        <param>
          <type>std::string const</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Find property by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Look into the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> list for a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> whose <emphasis>name</emphasis> (or <emphasis>name_false</emphasis>, for a boolean <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>) is <emphasis>pname</emphasis>. Return a const pointer to the first such property found, or NULL if none is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="267" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillElement</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp) const</argsstring>
        <name>fillElement</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a88d6f38c5fa5401a860291fbb21526d5">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_complex_1ada5f1fb56b87c56ff64113a49c76cca0">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_complex_1a0d73e5fd77b0e920af44894abfc96a99">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a63501e86c47ea6b67e0c564c706a72f1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Fill the XML element for this <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation simply calls <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref> for each <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> defined for the <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>.</para>
<para>Derived classes should avoid overriding <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref>. It may make sense occasionally, e.g. to make sure that the metric is output first.</para>
<para>To customize how a given <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> is rendered, it is better to override <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref>.</para>
<para>If this method is overridden, the implementation should in general call <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> on the direct base. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="316" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::describeProperty</definition>
        <argsstring>(Gyoto::Property const &amp;p) const</argsstring>
        <name>describeProperty</name>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Format desrciption for a property. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string containing the name(s) and type of the property, as well as whether it supports unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Object::help</definition>
        <argsstring>() const</argsstring>
        <name>help</name>
        <briefdescription>
<para>Print (to stdout) some help on this class. </para>
        </briefdescription>
        <detaileddescription>
<para>Describe all properties that this instance supports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Object::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af6c1082ac163e833fff9e934b417b194">kind</reimplementedby>
        <briefdescription>
<para>Get kind_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="456" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac5df03a340b7b270299252591750ffef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::getImin</definition>
        <argsstring>() const</argsstring>
        <name>getImin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" kindref="member">imin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="394" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a25cf1928554c1f9a400297f86c2249a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::getImax</definition>
        <argsstring>() const</argsstring>
        <name>getImax</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" kindref="member">imax_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="395" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a150907d1c30cd104e5ca7707165780e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::getI0</definition>
        <argsstring>() const</argsstring>
        <name>getI0</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="396" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a50cb4e163065b2f53b3eca4a94c687d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::initCoord</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;)</argsstring>
        <name>initCoord</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="402" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aeb2275244724bfe6b7624ce24f82bcb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Worldline::initCoord</definition>
        <argsstring>() const</argsstring>
        <name>initCoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="403" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac6de9fe246a1eaa986fdab7b9b72150a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::setInitCoord</definition>
        <argsstring>(const double coord[8], int dir, double const Ephi[4], double const Etheta[4])</argsstring>
        <name>setInitCoord</name>
        <param>
          <type>const double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>Ephi</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>Etheta</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Set Initial coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" kindref="member">imin_</ref>=<ref refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" kindref="member">imax_</ref>=<ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref>, and x<emphasis><emphasis>[i0</emphasis>]=coord[<emphasis>].</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==1, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is set to 0. If dir==-1, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is set to <ref refid="class_gyoto_1_1_worldline_1ae638eb01eccdd6049fbd09df1a9375ca" kindref="member">x_size_</ref>-1.</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==0 and the Worldine has never been computed (<ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref>==0, <ref refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" kindref="member">imin_</ref>==1 and <ref refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" kindref="member">imax_</ref>==0), then dir defaults to 1 for a massive particle and -1 for a massless particle.</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==0 and the Worldine has already been computed, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is not changed.</emphasis></emphasis></para>
<para><emphasis><emphasis><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>new initial coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>direction of integration. 1 for forward integration, -1 for backards integration, 0 for unknown or both </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ephi</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value of base vector to parallel-transport. Ignored if <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref> is false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Etheta</parametername>
</parameternamelist>
<parameterdescription>
<para>initial value of base vector to parallel-transport. Ignored if <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref> is false. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</emphasis></emphasis></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="427" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a9ac0ce0ac0ce8977e501bb9c7ac61246" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::setInitCoord</definition>
        <argsstring>(const double coord[8], int dir=0)</argsstring>
        <name>setInitCoord</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a41a600e082a425252729f342f044b54b">setInitCoord</reimplementedby>
        <param>
          <type>const double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set Initial coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" kindref="member">imin_</ref>=<ref refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" kindref="member">imax_</ref>=<ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref>, and x<emphasis><emphasis>[i0</emphasis>]=coord[<emphasis>].</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==1, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is set to 0. If dir==-1, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is set to <ref refid="class_gyoto_1_1_worldline_1ae638eb01eccdd6049fbd09df1a9375ca" kindref="member">x_size_</ref>-1.</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==0 and the Worldine has never been computed (<ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref>==0, <ref refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" kindref="member">imin_</ref>==1 and <ref refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" kindref="member">imax_</ref>==0), then dir defaults to 1 for a massive particle and -1 for a massless particle.</emphasis></emphasis></para>
<para><emphasis><emphasis>If dir==0 and the Worldine has already been computed, <ref refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" kindref="member">i0_</ref> is not changed.</emphasis></emphasis></para>
<para><emphasis><emphasis><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>new initial coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>direction of integration. 1 for forward integration, -1 for backards integration, 0 for unknown or both </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</emphasis></emphasis></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="450" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a71f8a874b436a5a8ff2ac4ece5e8bd86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::setInitCoord</definition>
        <argsstring>(double const pos[4], double const vel[3], int dir=0)</argsstring>
        <name>setInitCoord</name>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set initial coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>initial 4-position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>initial 3-velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>direction of integration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="459" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a1b5eb2a9072fcd58ddb2d0c0ec360146" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::setPosition</definition>
        <argsstring>(double const pos[4])</argsstring>
        <name>setPosition</name>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Set initial 4-position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="461" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1af24d9e971a4ca150c35f134ccb9a2d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::setVelocity</definition>
        <argsstring>(double const vel[3])</argsstring>
        <name>setVelocity</name>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Set initial 3-velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="462" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a9bbab684866e8ac230f800bc7e9c6430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Forget integration, keeping initial contition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="464" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a67e175c2db554ba09e862f2c95462fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::reInit</definition>
        <argsstring>()</argsstring>
        <name>reInit</name>
        <briefdescription>
<para>Reset and recompute particle properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="465" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a54639e84eece5634e492a70df2ba6f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::integrator</definition>
        <argsstring>(std::string const &amp;type)</argsstring>
        <name>integrator</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set the integrator. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize <ref refid="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" kindref="member">state_</ref> to use the required integrator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Either &quot;Legacy&quot; or (if GYOTO_HAVE_BOOST_INTEGRATORS) one of &quot;runge_kutta_cash_karp54&quot;, &quot;runge_kutta_fehlberg78&quot;, &quot;runge_kutta_dopri5&quot;, &quot;runge_kutta_cash_karp54_classic&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="480" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a74a3873fd0d5ecc589f42ed869490cdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Worldline::integrator</definition>
        <argsstring>() const</argsstring>
        <name>integrator</name>
        <briefdescription>
<para>Describe the integrator used by <ref refid="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" kindref="member">state_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="485" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a065938779cc60b7a9911f6bbee0e87c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::integ31</definition>
        <argsstring>(bool integ)</argsstring>
        <name>integ31</name>
        <param>
          <type>bool</type>
          <declname>integ</declname>
        </param>
        <briefdescription>
<para>Set the integrator kind to 3+1 or 4D. </para>
        </briefdescription>
        <detaileddescription>
<para>Initialize <ref refid="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" kindref="member">state_</ref> to use the required geodesic equation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="493" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a7104d80c16e7575f11de2c40a4fd89cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::integ31</definition>
        <argsstring>() const</argsstring>
        <name>integ31</name>
        <briefdescription>
<para>Get the kind of geodesic equation integrated by <ref refid="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" kindref="member">state_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="498" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a627775c505b89e35b907854006ae4e39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::deltaMin</definition>
        <argsstring>() const</argsstring>
        <name>deltaMin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1aa16f2776e32d68721ba8ecb8d26d6d49" kindref="member">delta_min_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="503" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1acad9fc5f8ed605fe2e6d01cfd932c3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::deltaMin</definition>
        <argsstring>(double h1)</argsstring>
        <name>deltaMin</name>
        <param>
          <type>double</type>
          <declname>h1</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1aa16f2776e32d68721ba8ecb8d26d6d49" kindref="member">delta_min_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="508" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a6f5c39263a6b9a414b3718155ce45c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::absTol</definition>
        <argsstring>(double)</argsstring>
        <name>absTol</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1acb933770c6a8433537131c4284933113" kindref="member">abstol_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="516" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a82f5f0f5b63169690ff9e65f3d91fc36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::absTol</definition>
        <argsstring>() const</argsstring>
        <name>absTol</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1acb933770c6a8433537131c4284933113" kindref="member">abstol_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="517" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a3d5a3082be7439684166af3b298656a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::relTol</definition>
        <argsstring>(double)</argsstring>
        <name>relTol</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a12051ddd93226fd32e1b79d9d3aa83bd" kindref="member">reltol_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="518" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a12e92e0626b277854a091e8f86a27353" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::relTol</definition>
        <argsstring>() const</argsstring>
        <name>relTol</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a12051ddd93226fd32e1b79d9d3aa83bd" kindref="member">reltol_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="519" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a3c74129b1c61f3d701134acc27a1954c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::maxCrossEqplane</definition>
        <argsstring>(double)</argsstring>
        <name>maxCrossEqplane</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set #maxCrosEqplane_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="521" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a2db3eabcfc2e4fb9923b35ec9e0245f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::maxCrossEqplane</definition>
        <argsstring>() const</argsstring>
        <name>maxCrossEqplane</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1ad88a27a847c12a18870615945664ed21" kindref="member">maxCrossEqplane_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="522" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ae697989f3206778a9c351786e594e3b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::deltaMaxOverR</definition>
        <argsstring>() const</argsstring>
        <name>deltaMaxOverR</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1acc816534ccad7be9dc97f8d650e087e3" kindref="member">delta_max_over_r_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="541" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a50026c4b24926d9e34a20f4d4535e7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::deltaMaxOverR</definition>
        <argsstring>(double t)</argsstring>
        <name>deltaMaxOverR</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1acc816534ccad7be9dc97f8d650e087e3" kindref="member">delta_max_over_r_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="542" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a219060b5733728636876cda64d1d524c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::delta</definition>
        <argsstring>(const double delta)</argsstring>
        <name>delta</name>
        <param>
          <type>const double</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>Expand memory slots for polarization vectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Assignment to another <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref> Set <ref refid="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" kindref="member">delta_</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="598" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aa723569d0c6501802dc8eeabbbfdebe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::delta</definition>
        <argsstring>(double, const std::string &amp;unit)</argsstring>
        <name>delta</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" kindref="member">delta_</ref> in specified units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="599" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aff6ed2c99ffac524a6f6c2645a8f7212" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta</definition>
        <argsstring>() const</argsstring>
        <name>delta</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" kindref="member">delta_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="600" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a257fce7a70157452b9825a472df7093a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta</definition>
        <argsstring>(const std::string &amp;unit) const</argsstring>
        <name>delta</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" kindref="member">delta_</ref> in specified units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="601" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a50015f4f978acac6035ba03855cf4be9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::tMin</definition>
        <argsstring>() const</argsstring>
        <name>tMin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="602" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac9916e8f1a9d26ebd89639fd07c08c94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Worldline::tMin</definition>
        <argsstring>(const std::string &amp;unit) const</argsstring>
        <name>tMin</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref> in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="603" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac0f22a590966f45d0bcea421a3cecab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::tMin</definition>
        <argsstring>(double tlim)</argsstring>
        <name>tMin</name>
        <param>
          <type>double</type>
          <declname>tlim</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="604" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1abc9ad887b7685de40662096e45fe04ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::tMin</definition>
        <argsstring>(double, const std::string &amp;unit)</argsstring>
        <name>tMin</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref> in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="605" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a7f5bd59d2bd8b93f90dd2868e6d8626d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::adaptive</definition>
        <argsstring>(bool mode)</argsstring>
        <name>adaptive</name>
        <param>
          <type>bool</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a94d491367025a7acf30301cc57c3db06" kindref="member">adaptive_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="606" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a185c6e485545baaa77de38c63bd8a81b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::adaptive</definition>
        <argsstring>() const</argsstring>
        <name>adaptive</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a94d491367025a7acf30301cc57c3db06" kindref="member">adaptive_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="607" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a5774963f169368a7a33b8768dd47fac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::secondary</definition>
        <argsstring>(bool sec)</argsstring>
        <name>secondary</name>
        <param>
          <type>bool</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1ae9d97bca1c865147636bbee69ac0c43f" kindref="member">secondary_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="608" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aa3f3bedcfc5d6f7d82bd43bbe2765db2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::secondary</definition>
        <argsstring>() const</argsstring>
        <name>secondary</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1ae9d97bca1c865147636bbee69ac0c43f" kindref="member">secondary_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="609" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a423ebefdff3003e7400177f27f390a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::parallelTransport</definition>
        <argsstring>(bool pt)</argsstring>
        <name>parallelTransport</name>
        <param>
          <type>bool</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="610" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1af135f89b9c0a9b575553c21a13305305" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::parallelTransport</definition>
        <argsstring>() const</argsstring>
        <name>parallelTransport</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="611" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a91ee957e1bf85796836baaacf7632c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::maxiter</definition>
        <argsstring>(size_t miter)</argsstring>
        <name>maxiter</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>miter</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_worldline_1a5e87f0e06855b8dbd4248eeb4110d80f" kindref="member">maxiter_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="612" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a57fa6cf5f3d6f917d5b6230d8cbfac1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::maxiter</definition>
        <argsstring>() const</argsstring>
        <name>maxiter</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_worldline_1a5e87f0e06855b8dbd4248eeb4110d80f" kindref="member">maxiter_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="613" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a8463a649e4dd6a3049049580b7084ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double const  *</type>
        <definition>double const* Gyoto::Worldline::getCst</definition>
        <argsstring>() const</argsstring>
        <name>getCst</name>
        <briefdescription>
<para>Returns the worldline&apos;s cst of motion (if any) </para>
        </briefdescription>
        <detaileddescription>
<para>Return pointer to array holding the previously set Metric-specific constants of motion.</para>
<para>This function returns a pointer to the actual storage location and should be handled with care. std::vector&lt;double&gt; <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>:<ref refid="class_gyoto_1_1_worldline_1a3b1cc4348fbb1a47e61aeb3873614c1b" kindref="member">constantsOfMotion() const </ref>provides a convenient way to retrieve a copy of the content. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="624" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a445a1b3f034c2e6a0c80218f12192dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::setCst</definition>
        <argsstring>(double const *cst, size_t const ncsts)</argsstring>
        <name>setCst</name>
        <param>
          <type>double const *</type>
          <declname>cst</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>ncsts</declname>
        </param>
        <briefdescription>
<para>Set Metric-specific constants of motion. </para>
        </briefdescription>
        <detaileddescription>
<para>The will (re)allocate <ref refid="class_gyoto_1_1_worldline_1aa562e46c98812b3a1436fef188ded070" kindref="member">Worldline::cst_</ref>, copy cst into it, and set <ref refid="class_gyoto_1_1_worldline_1a886d3b632244a75f38328f6d0aaa9657" kindref="member">Worldline::cst_n_</ref>.</para>
<para>This is the same as void <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>:<ref refid="class_gyoto_1_1_worldline_1a5a572bbf0e6d7ede2fee2a1b967f2a39" kindref="member">constantsOfMotion(std::vector&lt;double&gt; const cstv)</ref> using a C-style array instead of a vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="635" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a5a572bbf0e6d7ede2fee2a1b967f2a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::constantsOfMotion</definition>
        <argsstring>(std::vector&lt; double &gt; const cstv)</argsstring>
        <name>constantsOfMotion</name>
        <param>
          <type>std::vector&lt; double &gt; const</type>
          <declname>cstv</declname>
        </param>
        <briefdescription>
<para>Set Metric-specific constants of motion. </para>
        </briefdescription>
        <detaileddescription>
<para>The will (re)allocate <ref refid="class_gyoto_1_1_worldline_1aa562e46c98812b3a1436fef188ded070" kindref="member">Worldline::cst_</ref>, copy cst into it, and set <ref refid="class_gyoto_1_1_worldline_1a886d3b632244a75f38328f6d0aaa9657" kindref="member">Worldline::cst_n_</ref>.</para>
<para>This is the same as getCst using a vector instead of a C-style array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="644" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a3b1cc4348fbb1a47e61aeb3873614c1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Worldline::constantsOfMotion</definition>
        <argsstring>() const</argsstring>
        <name>constantsOfMotion</name>
        <briefdescription>
<para>Return a copy of the Metric-specific constants of motion. </para>
        </briefdescription>
        <detaileddescription>
<para>This funtion return a copy of the constants of motion. <ref refid="class_gyoto_1_1_worldline_1a8463a649e4dd6a3049049580b7084ca6" kindref="member">getCst()</ref> can be used to retrieve a pointer to the actual array used internally which is slightly more efficient for read-only access. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="652" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac5479596d1b959f426f54e712c645136" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getInitialCoord</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;dest) const</argsstring>
        <name>getInitialCoord</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Get initial coordinates + base vectors. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending on the size of dest and on the value of <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref>, get position (xi_), velocity (xidot_) and possibly other triad vectors (epi_ and eti_). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="688" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aa719a09c91b55c2fb239ec9dc2d59c21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCoord</definition>
        <argsstring>(size_t index, Gyoto::state_t &amp;dest) const</argsstring>
        <name>getCoord</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>Gyoto::state_t &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Get coordinates+base vectors corresponding to index. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending on the value of <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref>, get position (xi_), velocity (xidot_) and possibly other triad vectors (epi_ and eti_). coord is resized to the right number of elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="695" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a1103ce1c6be78faebecfeec808e68c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCoord</definition>
        <argsstring>(size_t index, Gyoto::state_t &amp;dest)</argsstring>
        <name>getCoord</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>Gyoto::state_t &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Get coordinates+base vectors corresponding to index. </para>
        </briefdescription>
        <detaileddescription>
<para>We need this non-const implementation to allow the const, size_t and the non-const, double implementations to coexist. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="701" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a7f6c43e8a3da1aae1a6bfae1af1b8b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCoord</definition>
        <argsstring>(double date, Gyoto::state_t &amp;dest, bool proper=false)</argsstring>
        <name>getCoord</name>
        <param>
          <type>double</type>
          <declname>date</declname>
        </param>
        <param>
          <type>Gyoto::state_t &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>proper</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get coordinates+base vectors corresponding to date dest[0]. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending on the value of <ref refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" kindref="member">parallel_transport_</ref>, get position (xi_), velocity (xidot_) and possibly other triad vectors (epi_ and eti_). coord is resized to the right number of elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a6099b7e34c47a5335e864b6af23f8eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCoord</definition>
        <argsstring>(double const *const dates, size_t const n_dates, double *const x1dest, double *const x2dest, double *const x3dest, double *const x0dot=NULL, double *const x1dot=NULL, double *const x2dot=NULL, double *const x3dot=NULL, double *ep0=NULL, double *ep1=NULL, double *ep2=NULL, double *ep3=NULL, double *et0=NULL, double *et1=NULL, double *et2=NULL, double *et3=NULL, double *otime=NULL, bool proper=false)</argsstring>
        <name>getCoord</name>
        <param>
          <type>double const *const</type>
          <declname>dates</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>n_dates</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x1dest</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x2dest</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x3dest</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x0dot</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>x1dot</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>x2dot</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>x3dot</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>ep0</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>ep1</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>ep2</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>ep3</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>et0</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>et1</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>et2</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>et3</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *</type>
          <declname>otime</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>proper</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get 8-coordinates for specific dates. </para>
        </briefdescription>
        <detaileddescription>
<para>The coordinates will be computed using the integrator, so they will be as accurate as possible. Some heuristics are used to speed up the process and it is presumably faster to call this routine with a sorted list of dates. The line will be integrated further as required. An error will be thrown if it is not possible to reach a certain date.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dates</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of dates for which the coordinates are to be computed in proper time or affine parameter if #proper is true or in coordinate time if #proper is false (default); </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n_dates</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of dates to compute ; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">x1dest</parametername>
<parametername direction="out">x2dest</parametername>
<parametername direction="out">x3dest</parametername>
<parametername direction="out">x0dot</parametername>
<parametername direction="out">x1dot</parametername>
<parametername direction="out">x2dot</parametername>
<parametername direction="out">x3dot</parametername>
</parameternamelist>
<parameterdescription>
<para>arrays in which to store the result. These pointer may be set to NULL to retrieve only part of the information. They must be pre-allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ephi0</parametername>
<parametername direction="out">ephi1</parametername>
<parametername direction="out">ephi2</parametername>
<parametername direction="out">ephi3</parametername>
<parametername direction="out">etheta0</parametername>
<parametername direction="out">etheta1</parametername>
<parametername direction="out">etheta2</parametername>
<parametername direction="out">etheta3</parametername>
</parameternamelist>
<parameterdescription>
<para>arrays in which to store the ephi and etheta (parallel transport case). These pointer may be set to NULL to retrieve only part of the information. They must be pre-allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">otime</parametername>
</parameternamelist>
<parameterdescription>
<para>array in which to store the other time: coordinate time if #proper, else proper time or affine parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">proper</parametername>
</parameternamelist>
<parameterdescription>
<para>bool: whether #dates is proper time (or affine parameter) or coordinate time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="796" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a1cd8b8763c9c1b905357a8cf2326a22f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCoord</definition>
        <argsstring>(double *x0, double *x1, double *x2, double *x3) const</argsstring>
        <name>getCoord</name>
        <param>
          <type>double *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x3</declname>
        </param>
        <briefdescription>
<para>Get all computed positions. </para>
        </briefdescription>
        <detaileddescription>
<para>Get all the pre-computed 8 coordinates (e.g. thanks to a prior call to <ref refid="class_gyoto_1_1_worldline_1ab0b41f07994311e3c107a4ec06c18b76" kindref="member">xFill()</ref>) of this worldline. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="811" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a7ec8c577dc119ab7e08382a59be91a47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getCartesianPos</definition>
        <argsstring>(size_t index, double dest[4]) const</argsstring>
        <name>getCartesianPos</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dest</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Get Cartesian expression of 4-position at index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1afe5ed31377d8c1aa748a95be4571a049" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xStore</definition>
        <argsstring>(size_t ind, state_t const &amp;coord, double tau)</argsstring>
        <name>xStore</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1afbaa9ce4e719143d2f4591dd9641243b">xStore</reimplementedby>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>ind</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
<para>Store coord at index ind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="713" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a1e6b5447b62245180f2e3f3ddcb3049c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xStore</definition>
        <argsstring>(size_t ind, state_t const &amp;coord)=delete</argsstring>
        <name>xStore</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>ind</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="714" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a65c69d7c75c34f2fc1505a4a35525337" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xStore</definition>
        <argsstring>(size_t ind, double const coord[8])=delete</argsstring>
        <name>xStore</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>ind</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="715" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ab0b41f07994311e3c107a4ec06c18b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xFill</definition>
        <argsstring>(double tlim, bool proper=false)</argsstring>
        <name>xFill</name>
        <param>
          <type>double</type>
          <declname>tlim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>proper</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Fill x0, x1... by integrating the <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref> from previously set inittial condition to time tlim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="716" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a737ad77af418e292543d45c43f1d036a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::get_nelements</definition>
        <argsstring>() const</argsstring>
        <name>get_nelements</name>
        <briefdescription>
<para>Get number of computed dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="726" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a9bf6ee964374561bb01ea3ab218d9c9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::get_t</definition>
        <argsstring>(double *dest) const</argsstring>
        <name>get_t</name>
        <param>
          <type>double *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Get computed dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="731" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aeaae589463702fd6ef26dc323997a74c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::get_tau</definition>
        <argsstring>(double *dest) const</argsstring>
        <name>get_tau</name>
        <param>
          <type>double *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Get computed proper times or values of the affine parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="736" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a6b1c7ba28dfdf02f6bbafb8af5bc1025" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::get_xyz</definition>
        <argsstring>(double *x, double *y, double *z) const</argsstring>
        <name>get_xyz</name>
        <param>
          <type>double *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Get 3-position in cartesian coordinates for computed dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="763" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aa9dbf87c942c7708cf51f0a50912b7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::checkPhiTheta</definition>
        <argsstring>(double coord[8]) const</argsstring>
        <name>checkPhiTheta</name>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Bring <theta/> in [0,<Pi/>] and <phi/> in [0,2<Pi/>]. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_worldline_1aa9dbf87c942c7708cf51f0a50912b7f2" kindref="member">checkPhiTheta()</ref> Modifies coord if the corrdinates are spherical-like so that coord[2]=theta is in [0,pi] and coord[3]=phi is in [0,2pi]. Important to use in all astrobj in spherical coordinates to prevent &quot;z-axis problems&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="821" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac68ef6bcf7f488d376e66021e12db031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::getSkyPos</definition>
        <argsstring>(SmartPointer&lt; Screen &gt; screen, double *dalpha, double *ddellta, double *dD) const</argsstring>
        <name>getSkyPos</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_screen" kindref="compound">Screen</ref> &gt;</type>
          <declname>screen</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dalpha</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ddellta</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dD</declname>
        </param>
        <briefdescription>
<para>Get computed positions in sky coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="826" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1abb07ef845e1f9940cfab2eba1c211e47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::get_dot</definition>
        <argsstring>(double *x0dot, double *x1dot, double *x2dot, double *x3dot) const</argsstring>
        <name>get_dot</name>
        <param>
          <type>double *</type>
          <declname>x0dot</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x1dot</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x2dot</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x3dot</declname>
        </param>
        <briefdescription>
<para>Get computed 4-velocities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="831" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ae9f4f4d2c5534488c19ee7cc513a4692" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::get_prime</definition>
        <argsstring>(double *x1prime, double *x2prime, double *x3prime) const</argsstring>
        <name>get_prime</name>
        <param>
          <type>double *</type>
          <declname>x1prime</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x2prime</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>x3prime</declname>
        </param>
        <briefdescription>
<para>Get computed 3-velocities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="836" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1aec3edc5b3c78ca26c3242a256f5dd73a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::save_txyz</definition>
        <argsstring>(char *fichierxyz) const</argsstring>
        <name>save_txyz</name>
        <param>
          <type>char *</type>
          <declname>fichierxyz</declname>
        </param>
        <briefdescription>
<para>Save in a file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="842" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a9b757a9781f7cf7ae5546bde79ed7550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Worldline::save_txyz</definition>
        <argsstring>(char *const filename, double const t1, double const mass_sun, double const distance_kpc, std::string const unit, SmartPointer&lt; Screen &gt; sc=NULL)</argsstring>
        <name>save_txyz</name>
        <param>
          <type>char *const</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>mass_sun</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>distance_kpc</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_screen" kindref="compound">Screen</ref> &gt;</type>
          <declname>sc</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Save, converted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="843" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_star_1a23db3f4944af047171b3f4924edd1b2b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Gyoto::Astrobj::Star::GYOTO_WORLDLINE</definition>
        <argsstring></argsstring>
        <name>GYOTO_WORLDLINE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStar.h" line="170" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoStar.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a275047d85a86d2fec64b24e9b044134e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Worldline::stopcond</definition>
        <argsstring></argsstring>
        <name>stopcond</name>
        <briefdescription>
<para>Whether and why integration is finished. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="245" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius_</definition>
        <argsstring></argsstring>
        <name>radius_</name>
        <briefdescription>
<para>sphere radius [geometrical units] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac169925e8414775f7dbfa876b5028e2d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::UniformSphere::isotropic_</definition>
        <argsstring></argsstring>
        <name>isotropic_</name>
        <briefdescription>
<para>if 1, then emission just returns 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="97" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1afbd7b86a1aeab73e9f94cc743e942046" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::spectrum_</definition>
        <argsstring></argsstring>
        <name>spectrum_</name>
        <briefdescription>
<para>sphere emission law </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="98" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5a771f0843f820c25eb4e78fd5155058" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::opacity_</definition>
        <argsstring></argsstring>
        <name>opacity_</name>
        <briefdescription>
<para>if optically thin, opacity law </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="99" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::dltmor_</definition>
        <argsstring></argsstring>
        <name>dltmor_</name>
        <briefdescription>
<para>see <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" kindref="member">deltaMax(double*)</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="101" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::dltmod_</definition>
        <argsstring></argsstring>
        <name>dltmod_</name>
        <briefdescription>
<para>see <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" kindref="member">deltaMax(double*)</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="102" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::critical_value_</definition>
        <argsstring></argsstring>
        <name>critical_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="94" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::safety_value_</definition>
        <argsstring></argsstring>
        <name>safety_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="95" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::delta_inobj_</definition>
        <argsstring></argsstring>
        <name>delta_inobj_</name>
        <briefdescription>
<para>Constant value of the integration step inside object, in units of the compact object&apos;s mass M. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Astrobj::Generic::gg_</definition>
        <argsstring></argsstring>
        <name>gg_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> in this end of the Universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="222" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::rmax_</definition>
        <argsstring></argsstring>
        <name>rmax_</name>
        <briefdescription>
<para>Maximum distance to the center of the coordinate system [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum distance from the center of the coordinate system at which a photon may hit the object. Child classes may compute a decent value for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> at any time if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is DBL_MAX. External classes (Photons in particular) must use <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> to access this information.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="234" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::deltamaxinsidermax_</definition>
        <argsstring></argsstring>
        <name>deltamaxinsidermax_</name>
        <briefdescription>
<para>Maximum <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integration step inside <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum step for <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integation when inside the sphere of radius <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" kindref="member">deltamaxinsidermax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="242" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::flag_radtransf_</definition>
        <argsstring></argsstring>
        <name>flag_radtransf_</name>
        <briefdescription>
<para>1 if radiative transfer inside <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, else 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="244" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::shadow_</definition>
        <argsstring></argsstring>
        <name>shadow_</name>
        <briefdescription>
<para>1 to highlight the shadow region in the image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="246" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::noredshift_</definition>
        <argsstring></argsstring>
        <name>noredshift_</name>
        <briefdescription>
<para>1 to impose redshift factor g = 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="247" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::kind_</definition>
        <argsstring></argsstring>
        <name>kind_</name>
        <briefdescription>
<para>The &quot;kind&quot; that is output in the XML entity. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>kind=&quot;kind_&quot;<sp/>...&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="162" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gyoto::Object::plugins_</definition>
        <argsstring></argsstring>
        <name>plugins_</name>
        <briefdescription>
<para>The plug-ins that needs to be loaded to access this instance&apos;s class. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>...<sp/>plugin=&quot;plugins_&quot;&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="172" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a568333dca4b58df06e344c3ee801d86f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Worldline::metric_</definition>
        <argsstring></argsstring>
        <name>metric_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Gyoto::Metric</ref> in this part of the universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="248" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1adbf1b4de77211b6fffb4b6c9925e1892" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::tau_</definition>
        <argsstring></argsstring>
        <name>tau_</name>
        <briefdescription>
<para>proper time or affine parameter </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="249" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ac57e450d22b0545edeca560416fd052e" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x0_</definition>
        <argsstring></argsstring>
        <name>x0_</name>
        <briefdescription>
<para>t or T </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="250" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a085a68b8f8cdaf7bd03a8aa2b5f3a6e2" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x1_</definition>
        <argsstring></argsstring>
        <name>x1_</name>
        <briefdescription>
<para>r or x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="251" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a6ffee8d466efc462d086bbdced97b4e2" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x2_</definition>
        <argsstring></argsstring>
        <name>x2_</name>
        <briefdescription>
<para><theta/> or y </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="252" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1aa48ffa28ea27f2ad22f158cc00ea959c" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x3_</definition>
        <argsstring></argsstring>
        <name>x3_</name>
        <briefdescription>
<para><phi/> or z </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="253" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a0fac003cf86d5c632b3706aaace5296a" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x0dot_</definition>
        <argsstring></argsstring>
        <name>x0dot_</name>
        <briefdescription>
<para>tdot or Tdot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="254" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a0f66fed8a931456a6d629543a08c04de" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x1dot_</definition>
        <argsstring></argsstring>
        <name>x1dot_</name>
        <briefdescription>
<para>rdot or xdot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="255" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1afc6d6fedffc0bc06c9ce95eb34acbe7e" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x2dot_</definition>
        <argsstring></argsstring>
        <name>x2dot_</name>
        <briefdescription>
<para><theta/>dot or ydot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="256" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a18fd3d49a9bd515e5bf9685f3db98e16" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::x3dot_</definition>
        <argsstring></argsstring>
        <name>x3dot_</name>
        <briefdescription>
<para><phi/>dot or zdot </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="257" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a75c8ac99bd28731430cd8de098f8f264" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::ep0_</definition>
        <argsstring></argsstring>
        <name>ep0_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="258" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a55fd755dd3736be85ea080f95875d0eb" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::ep1_</definition>
        <argsstring></argsstring>
        <name>ep1_</name>
        <briefdescription>
<para>Coordinate of first base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="259" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1adc866ad3c2fd14a74b7be904a9366ca5" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::ep2_</definition>
        <argsstring></argsstring>
        <name>ep2_</name>
        <briefdescription>
<para>Coordinate of first base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="260" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1aee1a83604d8d47dcab5ad05a39bc5194" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::ep3_</definition>
        <argsstring></argsstring>
        <name>ep3_</name>
        <briefdescription>
<para>Coordinate of first base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="261" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a3d178fc004cdb3d80e950ac6bd4b0e08" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::et0_</definition>
        <argsstring></argsstring>
        <name>et0_</name>
        <briefdescription>
<para>Coordinate of first base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="262" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a03f99a45165ddc1f44cef8226df6a132" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::et1_</definition>
        <argsstring></argsstring>
        <name>et1_</name>
        <briefdescription>
<para>Coordinate of Second base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="263" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a676dec4bb99856085edf6aaf70645b8c" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::et2_</definition>
        <argsstring></argsstring>
        <name>et2_</name>
        <briefdescription>
<para>Coordinate of Second base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="264" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1af76c1faf3d1c909209508da1cf881fd5" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::et3_</definition>
        <argsstring></argsstring>
        <name>et3_</name>
        <briefdescription>
<para>Coordinate of Second base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="265" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ae638eb01eccdd6049fbd09df1a9375ca" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::x_size_</definition>
        <argsstring></argsstring>
        <name>x_size_</name>
        <briefdescription>
<para>Coordinate of Second base vector to parallel transport. </para>
        </briefdescription>
        <detaileddescription>
<para>Size of <ref refid="class_gyoto_1_1_worldline_1ac57e450d22b0545edeca560416fd052e" kindref="member">x0_</ref>, <ref refid="class_gyoto_1_1_worldline_1a085a68b8f8cdaf7bd03a8aa2b5f3a6e2" kindref="member">x1_</ref>... arrays </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="266" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::imin_</definition>
        <argsstring></argsstring>
        <name>imin_</name>
        <briefdescription>
<para>Minimum index for which <ref refid="class_gyoto_1_1_worldline_1ac57e450d22b0545edeca560416fd052e" kindref="member">x0_</ref>, <ref refid="class_gyoto_1_1_worldline_1a085a68b8f8cdaf7bd03a8aa2b5f3a6e2" kindref="member">x1_</ref>... have been computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="267" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::i0_</definition>
        <argsstring></argsstring>
        <name>i0_</name>
        <briefdescription>
<para>Index of initial condition in array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="268" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::imax_</definition>
        <argsstring></argsstring>
        <name>imax_</name>
        <briefdescription>
<para>Maximum index for which <ref refid="class_gyoto_1_1_worldline_1ac57e450d22b0545edeca560416fd052e" kindref="member">x0_</ref>, <ref refid="class_gyoto_1_1_worldline_1a085a68b8f8cdaf7bd03a8aa2b5f3a6e2" kindref="member">x1_</ref>... have been computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="269" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a94d491367025a7acf30301cc57c3db06" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::adaptive_</definition>
        <argsstring></argsstring>
        <name>adaptive_</name>
        <briefdescription>
<para>Whether integration should use adaptive delta. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="270" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ae9d97bca1c865147636bbee69ac0c43f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::secondary_</definition>
        <argsstring></argsstring>
        <name>secondary_</name>
        <briefdescription>
<para>Experimental: choose 0 to compute only primary image. </para>
        </briefdescription>
        <detaileddescription>
<para>This feature is in development. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="277" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Worldline::parallel_transport_</definition>
        <argsstring></argsstring>
        <name>parallel_transport_</name>
        <briefdescription>
<para>Whether to parallel transport a local triad. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically used to trace the base in which the Stokes parameters are expressed in the context of polarization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="285" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <briefdescription>
<para>Initial integrating step. </para>
        </briefdescription>
        <detaileddescription>
<para>Default: <ref refid="_gyoto_defs_8h_1ad6b16f11a8b1817d7158cc611a411b6a" kindref="member">GYOTO_DEFAULT_DELTA</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="292" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::tmin_</definition>
        <argsstring></argsstring>
        <name>tmin_</name>
        <briefdescription>
<para>Time limit for the integration (geometrical units) </para>
        </briefdescription>
        <detaileddescription>
<para>Computation does not go back before <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref>. Default is -DBL_MAX. <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref> is always expressed in geometrical units, it is essentially a tuning parameter for the ray-tracing process. <ref refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" kindref="member">tmin_</ref> should be chosen to always be longer than the distance between the screen and the object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="304" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1aa562e46c98812b3a1436fef188ded070" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::cst_</definition>
        <argsstring></argsstring>
        <name>cst_</name>
        <briefdescription>
<para><ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>&apos;s csts of motion (if any) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="306" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a886d3b632244a75f38328f6d0aaa9657" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::cst_n_</definition>
        <argsstring></argsstring>
        <name>cst_n_</name>
        <briefdescription>
<para>Number of constants of motion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="307" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1acf5ca2914b9baaab4d90eb746776d0b1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Worldline::wait_pos_</definition>
        <argsstring></argsstring>
        <name>wait_pos_</name>
        <briefdescription>
<para>Hack in setParameters() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="308" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1aabba21d1ec6015b4af6b6ecd4fe99513" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Worldline::init_vel_</definition>
        <argsstring></argsstring>
        <name>init_vel_</name>
        <briefdescription>
<para>Hack in setParameters() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="309" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a5e87f0e06855b8dbd4248eeb4110d80f" prot="protected" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Worldline::maxiter_</definition>
        <argsstring></argsstring>
        <name>maxiter_</name>
        <briefdescription>
<para>Maximum number of iterations when integrating. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="310" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1aa16f2776e32d68721ba8ecb8d26d6d49" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta_min_</definition>
        <argsstring></argsstring>
        <name>delta_min_</name>
        <briefdescription>
<para>Minimum integration step for the adaptive integrator. </para>
        </briefdescription>
        <detaileddescription>
<para>The default (<ref refid="_gyoto_defs_8h_1a04b5dbd7385703eed836bcc16dcec539" kindref="member">GYOTO_DEFAULT_DELTA_MIN</ref>) is usually fine.</para>
<para>For <ref refid="class_gyoto_1_1_worldline_1_1_integ_state_1_1_legacy" kindref="compound">IntegState::Legacy</ref>, set it in the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> instead! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="319" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ad5790f6d8667d6d80a82e6156d202917" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta_max_</definition>
        <argsstring></argsstring>
        <name>delta_max_</name>
        <briefdescription>
<para>Maximum integration step for the adaptive integrator. </para>
        </briefdescription>
        <detaileddescription>
<para>The default (<ref refid="_gyoto_defs_8h_1a61e9f37f6e15229a442c03e3928c2ace" kindref="member">GYOTO_DEFAULT_DELTA_MAX</ref>) is usually fine.</para>
<para>For <ref refid="class_gyoto_1_1_worldline_1_1_integ_state_1_1_legacy" kindref="compound">IntegState::Legacy</ref>, set it in the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> instead! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="328" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1acc816534ccad7be9dc97f8d650e087e3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::delta_max_over_r_</definition>
        <argsstring></argsstring>
        <name>delta_max_over_r_</name>
        <briefdescription>
<para>Numerical tuning parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>For <ref refid="class_gyoto_1_1_worldline_1_1_integ_state_1_1_legacy" kindref="compound">IntegState::Legacy</ref>, set it in the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> instead!</para>
<para>Ensure that delta (the numerical integration step) is never larger than a fraction of the distance between the current location and the center of the coordinate system.</para>
<para>The default (<ref refid="_gyoto_defs_8h_1af5ac2008c7e20891105ed58e4df84c52" kindref="member">GYOTO_DEFAULT_DELTA_MAX_OVER_R</ref>) is usually fine. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="341" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1acb933770c6a8433537131c4284933113" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::abstol_</definition>
        <argsstring></argsstring>
        <name>abstol_</name>
        <briefdescription>
<para>Absolute tolerance of the integrator. </para>
        </briefdescription>
        <detaileddescription>
<para>Used by the adaptive integrators implemented in IntegState::Boost. Refer to the boost::numeric::odeint documentation for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="350" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a12051ddd93226fd32e1b79d9d3aa83bd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::reltol_</definition>
        <argsstring></argsstring>
        <name>reltol_</name>
        <briefdescription>
<para>Absolute tolerance of the integrator. </para>
        </briefdescription>
        <detaileddescription>
<para>Used by the adaptive integrators implemented in IntegState::Boost. Refer to the boost::numeric::odeint documentation for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="359" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1ad88a27a847c12a18870615945664ed21" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Worldline::maxCrossEqplane_</definition>
        <argsstring></argsstring>
        <name>maxCrossEqplane_</name>
        <briefdescription>
<para>Maximum number of crossings of equatorial plane. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to determine how much higher-order image features should be kept. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="367" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_worldline_1_1_integ_state_1_1_generic" kindref="compound">Worldline::IntegState::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Worldline::IntegState::Generic&gt; Gyoto::Worldline::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
<para>An object to hold the integration state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="862" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoWorldline.h" bodystart="862" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a145deb35b7401163837aaa50ce6952ac" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::emission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;cp, double const co[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a">emission</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_inflate_star_1a732cd458782de4ab3887b5c303714de3">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Emission is determined by spectrum_ and opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="188" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3c699d3ee95ad9b98574c4ae4d5604be" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const *c_obj=NULL) const</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>c_obj</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="192" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ae4a487638d2a645011a780b8f22caafc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;, double const *) const</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
        </param>
        <param>
          <type>double const *</type>
        </param>
        <briefdescription>
<para>Transmission is determined by opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="194" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::kind</definition>
        <argsstring>(const std::string)</argsstring>
        <name>kind</name>
        <param>
          <type>const std::string</type>
        </param>
        <briefdescription>
<para>Set kind_. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" kindref="member">kind(const std::string)</ref> is protected because, for most Objects, it should not be changed in runtime. Set kind_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="453" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a467de7cc54b7a999d58f3e3347d73392" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xAllocate</definition>
        <argsstring>()</argsstring>
        <name>xAllocate</name>
        <briefdescription>
<para>Allocate x0, x1 etc. with default size. </para>
        </briefdescription>
        <detaileddescription>
<para>The default size is <ref refid="_gyoto_defs_8h_1a9e658b4f56879ea10452d87ae5c58ffa" kindref="member">GYOTO_DEFAULT_X_SIZE</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="550" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac632bf0f61f54a4169e41efed15c0b73" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xAllocate</definition>
        <argsstring>(size_t size)</argsstring>
        <name>xAllocate</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a9bf4ca6d5087771e0b0a0e588cd2614c">xAllocate</reimplementedby>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Allocate x0, x1 etc. with a specified size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>: number of cells in each array x0, x1 etc. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="555" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac5643cc01a45e5041fe7e331c663226f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>virtual size_t Gyoto::Worldline::xExpand</definition>
        <argsstring>(int dir)</argsstring>
        <name>xExpand</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a1a5c7d3c5c9e12c54117b1b55ad0c649">xExpand</reimplementedby>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Expand x0, x1 etc... to hold more elements. </para>
        </briefdescription>
        <detaileddescription>
<para>Double the size of arrays x0, x1 etc. and copy old version of the array in the first half if dir =1 and in the second half if dir =-1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>: 1 to expand after last element, -1 to expand before first element</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ind : if dir=1, new index of old last element, if dir=-1, new index of old first element </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="568" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ac8aa28fbe7d78c6a1e55d6b76fa7893b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::xExpand</definition>
        <argsstring>(double *&amp;x, int dir)</argsstring>
        <name>xExpand</name>
        <param>
          <type>double *&amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Expand one array to hold more elements. </para>
        </briefdescription>
        <detaileddescription>
<para>If you need to expand more arrays than x0_ ... x3_ and the dots, call this on your array before calling <ref refid="class_gyoto_1_1_worldline_1ac5643cc01a45e5041fe7e331c663226f" kindref="member">xExpand(int dir)</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">x</parametername>
</parameternamelist>
<parameterdescription>
<para>array to expand </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="577" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a1509139d65b69281bc818a69b4c29c2b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::eAllocate</definition>
        <argsstring>()</argsstring>
        <name>eAllocate</name>
        <briefdescription>
<para>Allocate ep0_ ... et3_. </para>
        </briefdescription>
        <detaileddescription>
<para>Allocate memory for polarization vectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="582" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1ace2d74a1c0a45e96b50114f951c47780" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::eDeallocate</definition>
        <argsstring>()</argsstring>
        <name>eDeallocate</name>
        <briefdescription>
<para>Deallocate ep0_ ... et3_. </para>
        </briefdescription>
        <detaileddescription>
<para>Deallocate memory for polarization vectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="587" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a341770cbe18f2a262c00ed8aedfe67a6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::eExpand</definition>
        <argsstring>(int dir)</argsstring>
        <name>eExpand</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_worldline_1ac8aa28fbe7d78c6a1e55d6b76fa7893b" kindref="member">xExpand(double * &amp;x, int dir)</ref> on #ep0_, <ref refid="class_gyoto_1_1_worldline_1a55fd755dd3736be85ea080f95875d0eb" kindref="member">ep1_</ref> etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="592" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_worldline_1a8255e38edb46d20eda2d669cfae4d960" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Worldline::tell</definition>
        <argsstring>(Gyoto::Hook::Teller *)</argsstring>
        <name>tell</name>
        <reimplements refid="class_gyoto_1_1_hook_1_1_listener_1a900ac53b9f989d3e2de0a917d440d9a1">tell</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_hook_1_1_teller" kindref="compound">Gyoto::Hook::Teller</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>This is how a Teller tells. </para>
        </briefdescription>
        <detaileddescription>
<para>A teller will basically call listener-&gt;tell(this).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Teller* the Teller who is telling... Useful if the Listener listens to several Tellers. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoWorldline.h" line="847" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interp1d</definition>
        <argsstring>(double const x, double const y0, double const y1) const</argsstring>
        <name>interp1d</name>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the 1D linear interpolation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x query position along the linear function [0,1]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the low position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the high position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="741" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpNd</definition>
        <argsstring>(int const N, double *const Xq, double **const X, double *const Y, std::string const *cond_limit) const</argsstring>
        <name>interpNd</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the N- dimension interpolation on an N-dimensional cube</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X[2**N][N]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contains for the 2**N points of the N dimensional cube the associated axes values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y[2**N]</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the value of the array to be interpolated at each points of the N-dimensional cube. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="751" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::getIndice</definition>
        <argsstring>(double &amp;xq, std::string const cond_limit, double const X_params[3], double *const X=NULL) const</argsstring>
        <name>getIndice</name>
        <param>
          <type>double &amp;</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>cond_limit</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>X_params</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double *const</type>
          <declname>X</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that return the closest indice of the query value on an axis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query value on the axis. Could be modified in case of periodic boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary conditions that will be applied to the axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array which contain the minimum value, the maximum value and the length of the axe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) array which contains the value of the axis points. Usefull for not linearly spaced axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="760" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" static="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref> &gt;</type>
        <definition>typedef Gyoto::SmartPointer&lt;Gyoto::SmartPointee&gt; Gyoto::SmartPointee::Subcontractor_t(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</definition>
        <argsstring>(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</argsstring>
        <name>Subcontractor_t</name>
        <briefdescription>
<para>A subcontractor builds an object upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Various classes need to provide a subcontractor to be able to instantiate themselves upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. A subcontractor is a function (often a static member function) which accepts a pointer to a <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> as unique parameter, communicates with the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref> using this messenger to read an XML description of the object to build, and returns this objet. <ref refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" kindref="member">SmartPointee::Subcontractor_t</ref>* is just generic enough a typedef to cast to and from other subcontractor types: <ref refid="namespace_gyoto_1_1_astrobj_1aa53c7ada58c8c8f3799c3485b7d8f3bb" kindref="member">Astrobj::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_metric_1ad6b33a642cc94ad67855184d2adb95df" kindref="member">Metric::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a163055eef14aee22dd8fa5188812d889" kindref="member">Spectrum::Subcontractor_t</ref>. A subcontractor needs to be registered using the relevant <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Register()</ref> function: <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Astrobj::Register()</ref>, <ref refid="namespace_gyoto_1_1_metric_1a602cba49b001e7470f3d439d1ab3e8f7" kindref="member">Metric::Register()</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a517874749d838d7121880e7d9d14c626" kindref="member">Spectrum::Register()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="114" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_blob" kindref="compound">Blob</ref> of plasma following a <ref refid="class_gyoto_1_1_astrobj_1_1_star" kindref="compound">Star</ref> orbit, emitting synchrotron, with Gaussian time-evolving density and temperature. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gyoto::Astrobj::UniformSphere</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="5">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
      </node>
      <node id="6">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Blob</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_blob"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Gyoto::Worldline</label>
        <link refid="class_gyoto_1_1_worldline"/>
        <childnode refid="10" relation="protected-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Gyoto::Hook::Listener</label>
        <link refid="class_gyoto_1_1_hook_1_1_listener"/>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Star</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_star"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>Gyoto::Property</label>
        <link refid="class_gyoto_1_1_property"/>
        <childnode refid="9" relation="usage">
          <edgelabel>getter_unit</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>getter</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>setter</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>setter_unit</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::ThermalSynchrotron &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::UniformSphere</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>opacity_</edgelabel>
          <edgelabel>spectrum_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Gyoto::SmartPointer&lt; Gyoto::Screen &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="18">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="5">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrometer::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="7">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="6">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Blob</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_blob"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>Gyoto::Property::setter_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>set_spectrometer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>set_metric</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>set_spectrum</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>set_astrobj</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>set_screen</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>Gyoto::Property::setter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__unit__t"/>
      </node>
      <node id="13">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="19">
        <label>Gyoto::Worldline</label>
        <link refid="class_gyoto_1_1_worldline"/>
        <childnode refid="20" relation="protected-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>metric_</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>Gyoto::Hook::Listener</label>
        <link refid="class_gyoto_1_1_hook_1_1_listener"/>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Star</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_star"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>spectrumThermalSynch_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Gyoto::Property::getter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__unit__t"/>
      </node>
      <node id="10">
        <label>Gyoto::Property::getter_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>get_spectrometer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>get_metric</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>get_spectrum</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>get_astrobj</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>get_screen</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/junichi/Gyoto/include/GyotoBlob.h" line="53" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoBlob.h" bodystart="54" bodyend="129"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>__defaultfeatures</name></member>
      <member refid="class_gyoto_1_1_worldline_1a6f5c39263a6b9a414b3718155ce45c4a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>absTol</name></member>
      <member refid="class_gyoto_1_1_worldline_1a82f5f0f5b63169690ff9e65f3d91fc36" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>absTol</name></member>
      <member refid="class_gyoto_1_1_worldline_1acb933770c6a8433537131c4284933113" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>abstol_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a7f5bd59d2bd8b93f90dd2868e6d8626d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>adaptive</name></member>
      <member refid="class_gyoto_1_1_worldline_1a185c6e485545baaa77de38c63bd8a81b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>adaptive</name></member>
      <member refid="class_gyoto_1_1_worldline_1a94d491367025a7acf30301cc57c3db06" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>adaptive_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ab38ad87c3a8a46a434699d0c6b8207be" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>alpha</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a8db8dec2c5aef7b97e350f5294bf535f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>alpha</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a1b086c9b355bb6935fd9603456a7bf96" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Blob</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a53eeb009e0c1a87b709a4e1118968702" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Blob</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa9dbf87c942c7708cf51f0a50912b7f2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>checkPhiTheta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a42aac90602cfbe24dadfa677d8a7513f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>className</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ad67e21908a300508dfabe2d5a4008340" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>className_l</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a8e950021898b79a296ff72a534bea640" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>clone</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>computeB4vect</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>computeB4vect_ipole</name></member>
      <member refid="class_gyoto_1_1_worldline_1a5a572bbf0e6d7ede2fee2a1b967f2a39" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>constantsOfMotion</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3b1cc4348fbb1a47e61aeb3873614c1b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>constantsOfMotion</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>critical_value_</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa562e46c98812b3a1436fef188ded070" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>cst_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a886d3b632244a75f38328f6d0aaa9657" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>cst_n_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>decRefCount</name></member>
      <member refid="class_gyoto_1_1_worldline_1a219060b5733728636876cda64d1d524c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa723569d0c6501802dc8eeabbbfdebe6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta</name></member>
      <member refid="class_gyoto_1_1_worldline_1aff6ed2c99ffac524a6f6c2645a8f7212" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta</name></member>
      <member refid="class_gyoto_1_1_worldline_1a257fce7a70157452b9825a472df7093a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta</name></member>
      <member refid="class_gyoto_1_1_worldline_1af1c32f1e25eae0cb9a51b65a3608ec37" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta_inobj_</name></member>
      <member refid="class_gyoto_1_1_worldline_1ad5790f6d8667d6d80a82e6156d202917" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta_max_</name></member>
      <member refid="class_gyoto_1_1_worldline_1acc816534ccad7be9dc97f8d650e087e3" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta_max_over_r_</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa16f2776e32d68721ba8ecb8d26d6d49" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>delta_min_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" prot="public" virt="virtual" ambiguityscope="Gyoto::"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_worldline_1aaa4a59a6eef22e86bea86afb3cbae113" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Worldline::"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa553e5eaafccb20782536519c30c73d5" prot="public" virt="virtual" ambiguityscope="Gyoto::Worldline::"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_worldline_1ad551ce9b6131f44b4560f43a90557f47" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Worldline::"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltamaxinsidermax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1af06f064b6e6bf8b69891fb42bffe9ff1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverDistance</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa722f232b7256c5af7bba02283dc2444" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverDistance</name></member>
      <member refid="class_gyoto_1_1_worldline_1ae697989f3206778a9c351786e594e3b8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverR</name></member>
      <member refid="class_gyoto_1_1_worldline_1a50026c4b24926d9e34a20f4d4535e7b7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverR</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a657c4e7d92af87a2baff31aab44e1ad4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverRadius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1a288e87aaac846c66785a3334ddbb14" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMaxOverRadius</name></member>
      <member refid="class_gyoto_1_1_worldline_1a627775c505b89e35b907854006ae4e39" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMin</name></member>
      <member refid="class_gyoto_1_1_worldline_1acad9fc5f8ed605fe2e6d01cfd932c3c9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>deltaMin</name></member>
      <member refid="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>describeProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>dltmod_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>dltmor_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a1509139d65b69281bc818a69b4c29c2b" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>eAllocate</name></member>
      <member refid="class_gyoto_1_1_worldline_1ace2d74a1c0a45e96b50114f951c47780" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>eDeallocate</name></member>
      <member refid="class_gyoto_1_1_worldline_1a341770cbe18f2a262c00ed8aedfe67a6" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>eExpand</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a4f20b8b4c2f83e918d181d9346dd3714" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>electronDistrib_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a4c1f725ae8846f2151686321b94f7a8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>electronDistribution</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ade5b4c3601e15bb25eb6466bb5bad3a6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>electronDistribution</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a145deb35b7401163837aaa50ce6952ac" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_worldline_1a75c8ac99bd28731430cd8de098f8f264" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>ep0_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a55fd755dd3736be85ea080f95875d0eb" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>ep1_</name></member>
      <member refid="class_gyoto_1_1_worldline_1adc866ad3c2fd14a74b7be904a9366ca5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>ep2_</name></member>
      <member refid="class_gyoto_1_1_worldline_1aee1a83604d8d47dcab5ad05a39bc5194" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>ep3_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3d178fc004cdb3d80e950ac6bd4b0e08" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>et0_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a03f99a45165ddc1f44cef8226df6a132" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>et1_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a676dec4bb99856085edf6aaf70645b8c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>et2_</name></member>
      <member refid="class_gyoto_1_1_worldline_1af76c1faf3d1c909209508da1cf881fd5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>et3_</name></member>
      <member refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>fillElement</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a152074fdddb29950936d3193d3aea55d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>fillProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>flag_radtransf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa01d6dc0f2a939e8c9cab6bfad0171fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a54143ea81889a2d2ae75f0ca9ad0264a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3a0ff7964797a990879dd4cd2026cfbb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_worldline_1abb07ef845e1f9940cfab2eba1c211e47" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_dot</name></member>
      <member refid="class_gyoto_1_1_worldline_1a737ad77af418e292543d45c43f1d036a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_nelements</name></member>
      <member refid="class_gyoto_1_1_worldline_1ae9f4f4d2c5534488c19ee7cc513a4692" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_prime</name></member>
      <member refid="class_gyoto_1_1_worldline_1a9bf6ee964374561bb01ea3ab218d9c9c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_t</name></member>
      <member refid="class_gyoto_1_1_worldline_1aeaae589463702fd6ef26dc323997a74c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_tau</name></member>
      <member refid="class_gyoto_1_1_worldline_1a6b1c7ba28dfdf02f6bbafb8af5bc1025" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>get_xyz</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a51700948b06b09337703d0b8f626d8bc" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCartesian</name></member>
      <member refid="class_gyoto_1_1_worldline_1a7ec8c577dc119ab7e08382a59be91a47" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCartesianPos</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getChi</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa719a09c91b55c2fb239ec9dc2d59c21" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a1103ce1c6be78faebecfeec808e68c94" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a7f6c43e8a3da1aae1a6bfae1af1b8b03" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a6099b7e34c47a5335e864b6af23f8eb6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a1cd8b8763c9c1b905357a8cf2326a22f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a8463a649e4dd6a3049049580b7084ca6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getCst</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getDefaultQuantities</name></member>
      <member refid="class_gyoto_1_1_worldline_1a150907d1c30cd104e5ca7707165780e6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getI0</name></member>
      <member refid="class_gyoto_1_1_worldline_1a25cf1928554c1f9a400297f86c2249a4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getImax</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac5df03a340b7b270299252591750ffef" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getImin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getIndice</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac5479596d1b959f426f54e712c645136" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getInitialCoord</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1ad5361b431562bbe8813e9ad8e9da13d7" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getMass</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a1e2b5026d024236ea9a8970f1296def2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getProperties</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getSinCos2Chi</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac68ef6bcf7f488d376e66021e12db031" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getSkyPos</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a918f9b19ae2c683dec1d0efab04e913a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>gg_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>giveDelta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a30d10baf9e43c0eba11c5cf71b3ab3ec" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Blob &gt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>GYOTO_OBJECT_ACCESSORS_UNIT</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a23db3f4944af047171b3f4924edd1b2b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>GYOTO_WORLDLINE</name></member>
      <member refid="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>help</name></member>
      <member refid="class_gyoto_1_1_worldline_1a8292aff35a4ec3bb6330a459db380545" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>i0_</name></member>
      <member refid="class_gyoto_1_1_worldline_1ab687dceaa55470f478681c45f66791c8" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>imax_</name></member>
      <member refid="class_gyoto_1_1_worldline_1abbf86fad0cf9bb969b919985c0bcca47" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>imin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Impact</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>incRefCount</name></member>
      <member refid="class_gyoto_1_1_worldline_1aabba21d1ec6015b4af6b6ecd4fe99513" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>init_vel_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a50cb4e163065b2f53b3eca4a94c687d6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>initCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1aeb2275244724bfe6b7624ce24f82bcb0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>initCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a065938779cc60b7a9911f6bbee0e87c1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>integ31</name></member>
      <member refid="class_gyoto_1_1_worldline_1a7104d80c16e7575f11de2c40a4fd89cf" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>integ31</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3c699d3ee95ad9b98574c4ae4d5604be" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_worldline_1a54639e84eece5634e492a70df2ba6f29" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>integrator</name></member>
      <member refid="class_gyoto_1_1_worldline_1a74a3873fd0d5ecc589f42ed869490cdb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>integrator</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>interp1d</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>interpNd</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa5385b540457561b12840f4ef56f5f96" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>isotropic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeedd10ed45f14bacea65f5d44251dced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>isotropic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac169925e8414775f7dbfa876b5028e2d" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>isotropic_</name></member>
      <member refid="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>isThreadSafe</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a87f1abdd75ca607736b638fa5fa40cc8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kappaIndex</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a1945bee1dff2fb0ef1f16b0493a547e7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kappaIndex</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a3cce49700b9466e5d0e45c53a99205b3" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kappaIndex_</name></member>
      <member refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>kind_</name></member>
      <member refid="class_gyoto_1_1_hook_1_1_listener_1a44482865ba840a67bb5a4de050304913" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Listener</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ad9e882c3945e0941d049bc89601c5195" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magneticConfig_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ade87f85922fde42b06270528487330e9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magneticConfiguration</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1af3218552bc145c481f9573ba8a6178df" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magneticConfiguration</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1aeaa9a4163dde8d299031c52f257314a3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magnetizationParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a14774384332ef215f119f6d799685eda" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magnetizationParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a3e16870030d467a9058c8928317be4c7" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>magnetizationParameter_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3c74129b1c61f3d701134acc27a1954c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxCrossEqplane</name></member>
      <member refid="class_gyoto_1_1_worldline_1a2db3eabcfc2e4fb9923b35ec9e0245f0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxCrossEqplane</name></member>
      <member refid="class_gyoto_1_1_worldline_1ad88a27a847c12a18870615945664ed21" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxCrossEqplane_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a91ee957e1bf85796836baaacf7632c91" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxiter</name></member>
      <member refid="class_gyoto_1_1_worldline_1a57fa6cf5f3d6f917d5b6230d8cbfac1f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxiter</name></member>
      <member refid="class_gyoto_1_1_worldline_1a5e87f0e06855b8dbd4248eeb4110d80f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>maxiter_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a0fac2855eeaf27c08681b767c7ba592a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a9a4ee32519b8425863a0360cb628d9ac" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_worldline_1a568333dca4b58df06e344c3ee801d86f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>metric_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>mutex_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>noredshift_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a7be77a0d1636593637571c776b7d6bf0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>numberDensity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a0b1c86a1a3a053b40febcfa045210ee0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>numberDensity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ab73c1cc0d5b268b26254a64d5c5b7558" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>numberDensity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a3d64cc8504f88047dd178ffe7df32079" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>numberDensity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a7eb420f7250117218e0270cba59d200e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>numberDensity_cgs_</name></member>
      <member refid="class_gyoto_1_1_object_1a5173d279a53bbc9850771e344d6b79b0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a5834e83ca1482a379c7ddefb1919457f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a1fbd53bedaf8d18f67b12ec0660b8aa7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3fad5ceba1126c9792721dceaa54889" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6c6781d676a5d8755c69b9fb9a424c21" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5a771f0843f820c25eb4e78fd5155058" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>opacity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1e4971aa995221805a8dfbd9ba3b2684" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" virt="pure-virtual" ambiguityscope="Gyoto::Functor::Double_constDoubleArray::"><scope>Gyoto::Astrobj::Blob</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_worldline_1a934a2e587e960fa83e2ed5fdd1482c96" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>parallel_transport_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a423ebefdff3003e7400177f27f390a7c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>parallelTransport</name></member>
      <member refid="class_gyoto_1_1_worldline_1af135f89b9c0a9b575553c21a13305305" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>parallelTransport</name></member>
      <member refid="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>plugins_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Pmatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a63fd983a342c1755f98a89f03f89078e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>properties</name></member>
      <member refid="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>property</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1aa9e772639c3b505c12f17912a2a8aea9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a802f5151d9e1328893c6ea136ccd60af" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Star::"><scope>Gyoto::Astrobj::Blob</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2aea833f9a7d311ebe20ab5760fa224c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7e4cc8c5335694bf74684fd47421e5a2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aecdeb59ffd2238ea17d16edfbd9ac537" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ace341bcc018e32817483518a2861737a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>radius_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>refCount</name></member>
      <member refid="class_gyoto_1_1_worldline_1a67e175c2db554ba09e862f2c95462fb6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>reInit</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3d5a3082be7439684166af3b298656a0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>relTol</name></member>
      <member refid="class_gyoto_1_1_worldline_1a12e92e0626b277854a091e8f86a27353" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>relTol</name></member>
      <member refid="class_gyoto_1_1_worldline_1a12051ddd93226fd32e1b79d9d3aa83bd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>reltol_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a9bbab684866e8ac230f800bc7e9c6430" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>reset</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>rmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>safety_value_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_worldline_1aec3edc5b3c78ca26c3242a256f5dd73a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>save_txyz</name></member>
      <member refid="class_gyoto_1_1_worldline_1a9b757a9781f7cf7ae5546bde79ed7550" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>save_txyz</name></member>
      <member refid="class_gyoto_1_1_worldline_1a5774963f169368a7a33b8768dd47fac9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>secondary</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa3f3bedcfc5d6f7d82bd43bbe2765db2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>secondary</name></member>
      <member refid="class_gyoto_1_1_worldline_1ae9d97bca1c865147636bbee69ac0c43f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>secondary_</name></member>
      <member refid="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_worldline_1a445a1b3f034c2e6a0c80218f12192dc8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setCst</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac6de9fe246a1eaa986fdab7b9b72150a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setInitCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a9ac0ce0ac0ce8977e501bb9c7ac61246" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setInitCoord</name></member>
      <member refid="class_gyoto_1_1_worldline_1a71f8a874b436a5a8ff2ac4ece5e8bd86" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setInitCoord</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1aa6b4cfca9a76e9ab8a0793d9b95ce4ba" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setInitialCondition</name></member>
      <member refid="class_gyoto_1_1_worldline_1ae31d27ebf8613473fb5ac5d150494786" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Worldline::"><scope>Gyoto::Astrobj::Blob</scope><name>setInitialCondition</name></member>
      <member refid="class_gyoto_1_1_worldline_1aea7ebf7a56248b9df9b0cca7814a057c" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Worldline::"><scope>Gyoto::Astrobj::Blob</scope><name>setInitialCondition</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Blob</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setParameters</name></member>
      <member refid="class_gyoto_1_1_worldline_1a1b5eb2a9072fcd58ddb2d0c0ec360146" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setPosition</name></member>
      <member refid="class_gyoto_1_1_worldline_1af24d9e971a4ca150c35f134ccb9a2d26" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>setVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>shadow_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a7d212bcd7d3ac4147e18683c47ca910d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1adc075b08ca5d3c0635bc97f843835f8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6687bc8062ddb7b085531805f7e90218" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrum</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7a72bf3b1fb87c1641dc59a5c2c7e95d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrum</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1afbd7b86a1aeab73e9f94cc743e942046" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrum_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a23d90b06112158084777ed835381f821" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrumKappaSynch_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a3d9da530e3d1a9b076a412318cbea227" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrumPLSynch_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a96925fc32cb0aaf43b20639921a6b3fc" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>spectrumThermalSynch_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a8b99f313d5bb7a143d2125663cde29f1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1f8278591f27a729bb1222424619730c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a7948720c27fc3bdaf23c8c52a769a68e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a95b93c6163a8dc99bba0010c53fd04fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a7808b37e9e1672080832c744e1760678" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Star</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1acac3358a390895d989d2c99981ac1b70" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Star</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1adc61b47cdfe14783e42026e73e3bae83" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Star</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3edacdf2600826da936645fe00ad014e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>state_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a275047d85a86d2fec64b24e9b044134e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>stopcond</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Subcontractor_t</name></member>
      <member refid="class_gyoto_1_1_worldline_1adbf1b4de77211b6fffb4b6c9925e1892" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tau_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a8255e38edb46d20eda2d669cfae4d960" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tell</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a2b242cf2dec6bb91572f3b6f134b4b85" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>temperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a2d4f3531c47bd7bff5541795e65407a2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>temperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a622e45e6adb8a2fc0febdf10587a61ed" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>temperature_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a9626b949f054b3427094079dfc898943" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeRef</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a2c5528539f6e3a1861019f31d4fbbd34" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeRef</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a52e37dd958c37d8d5c12fe699c5826ad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeRef</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a96fdbb26994065e495eae799fff6887d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeRef</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a739ec0505709ea11c467101464cca10a" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeRef_M_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a541b7d3fe96dc8c1d9eddbe95971db9a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeSigma</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a693a0daccd9c615d45ee059f618ef980" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeSigma</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a99b6b6fc0de0cc2d5bee9d4946e9f2a4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeSigma</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1a934bf2aafa1a6a8ad9e02d872e0adce6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeSigma</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1ac39fdbec31c2209010b9fc5fa96efc37" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>timeSigma_M_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a50015f4f978acac6035ba03855cf4be9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tMin</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac9916e8f1a9d26ebd89639fd07c08c94" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tMin</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac0f22a590966f45d0bcea421a3cecab1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tMin</name></member>
      <member refid="class_gyoto_1_1_worldline_1abc9ad887b7685de40662096e45fe04ff" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tMin</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3d7b1bd7f31694488378fa23783349b1" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>tmin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ae4a487638d2a645011a780b8f22caafc" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Blob</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3ddd27cf6ccd639a1dfe416c07be5ffc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a4c46ab5f3de6bf925c55cadedba7fad9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac9bb2f92e42132fe6e4d13f0143f6dfc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_worldline_1acf5ca2914b9baaab4d90eb746776d0b1" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>wait_pos_</name></member>
      <member refid="class_gyoto_1_1_worldline_1ace760376274114316e8614fd31dbfae3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Worldline</name></member>
      <member refid="class_gyoto_1_1_worldline_1a3b7f60db36f6bb48496de9f9fa186c10" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Worldline</name></member>
      <member refid="class_gyoto_1_1_worldline_1a2b675fa7ebcf3bd2d452309b7455dcb2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>Worldline</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac57e450d22b0545edeca560416fd052e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x0_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a0fac003cf86d5c632b3706aaace5296a" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x0dot_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a085a68b8f8cdaf7bd03a8aa2b5f3a6e2" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x1_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a0f66fed8a931456a6d629543a08c04de" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x1dot_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a6ffee8d466efc462d086bbdced97b4e2" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x2_</name></member>
      <member refid="class_gyoto_1_1_worldline_1afc6d6fedffc0bc06c9ce95eb34acbe7e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x2dot_</name></member>
      <member refid="class_gyoto_1_1_worldline_1aa48ffa28ea27f2ad22f158cc00ea959c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x3_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a18fd3d49a9bd515e5bf9685f3db98e16" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x3dot_</name></member>
      <member refid="class_gyoto_1_1_worldline_1ae638eb01eccdd6049fbd09df1a9375ca" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Blob</scope><name>x_size_</name></member>
      <member refid="class_gyoto_1_1_worldline_1a467de7cc54b7a999d58f3e3347d73392" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xAllocate</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac632bf0f61f54a4169e41efed15c0b73" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xAllocate</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac5643cc01a45e5041fe7e331c663226f" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xExpand</name></member>
      <member refid="class_gyoto_1_1_worldline_1ac8aa28fbe7d78c6a1e55d6b76fa7893b" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xExpand</name></member>
      <member refid="class_gyoto_1_1_worldline_1ab0b41f07994311e3c107a4ec06c18b76" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xFill</name></member>
      <member refid="class_gyoto_1_1_worldline_1afe5ed31377d8c1aa748a95be4571a049" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xStore</name></member>
      <member refid="class_gyoto_1_1_worldline_1a1e6b5447b62245180f2e3f3ddcb3049c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xStore</name></member>
      <member refid="class_gyoto_1_1_worldline_1a65c69d7c75c34f2fc1505a4a35525337" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>xStore</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_blob_1acd7df6867dd1542953509b7af7ebd6de" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Blob</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a56681650c78dc2089816993041f288c0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Double_constDoubleArray</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1adf8758eab0634929f5c3630a54a88f07" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Generic</name></member>
      <member refid="class_gyoto_1_1_hook_1_1_listener_1a68ee73f312f9e50d2a4563543ff15a57" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Listener</name></member>
      <member refid="class_gyoto_1_1_object_1ab6f302f93bfd1f07ae2a6a48b3c74932" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Object</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a4301d456d1d36ed7912d073b742c74e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a24d8ea9fd96f72f1dfc197bc396a662d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_star_1a88374b2c61400254425e9c82f1f74653" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Star</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2cd7a791cc9eb8244badc2bfd18f470a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~UniformSphere</name></member>
      <member refid="class_gyoto_1_1_worldline_1a07c369ff9e4b3785980ac615a03f9cc0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Blob</scope><name>~Worldline</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
