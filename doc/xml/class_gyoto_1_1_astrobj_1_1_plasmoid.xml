<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_astrobj_1_1_plasmoid" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gyoto::Astrobj::Plasmoid</compoundname>
    <basecompoundref refid="class_gyoto_1_1_fits_r_w" prot="public" virt="non-virtual">Gyoto::FitsRW</basecompoundref>
    <basecompoundref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere" prot="public" virt="non-virtual">Gyoto::Astrobj::UniformSphere</basecompoundref>
    <includes refid="_gyoto_plasmoid_8h" local="no">GyotoPlasmoid.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a45c2b0e054c82a4eb8444510d0b5a849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Gyoto::SmartPointer&lt; Gyoto::Astrobj::Plasmoid &gt;</definition>
        <argsstring></argsstring>
        <name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Plasmoid &gt;</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid" kindref="compound">Gyoto::Astrobj::Plasmoid</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="1" column="0" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab4a8cadab599d380e0b58a4b432f33d9" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Plasmoid::posIni_</definition>
        <argsstring></argsstring>
        <name>posIni_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="68" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a68b349ce786255608e3bd302364500e0" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Plasmoid::fourveldt_</definition>
        <argsstring></argsstring>
        <name>fourveldt_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="69" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aaabdb4056a6cd15796d85ef45cd74102" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Plasmoid::flag_</definition>
        <argsstring></argsstring>
        <name>flag_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="70" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a138efaeb5899866bbead5b315fb52b43" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Plasmoid::posSet_</definition>
        <argsstring></argsstring>
        <name>posSet_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="71" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad6210c9e0fe7204301b45a49259360a0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Plasmoid::t_inj_</definition>
        <argsstring></argsstring>
        <name>t_inj_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="72" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a0c5bb6ce502d5166cfceee5aa5d3145d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Plasmoid::radiusMax_</definition>
        <argsstring></argsstring>
        <name>radiusMax_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="73" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a95b3fd061e4f6f9cf719185cc5cba998" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Plasmoid::varyRadius_</definition>
        <argsstring></argsstring>
        <name>varyRadius_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="74" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab89abca4c7157dc3f5a748584b4a7f3c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Plasmoid::filename_</definition>
        <argsstring></argsstring>
        <name>filename_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="76" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aeead81494a91ac7babb1978cb5ead803" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Plasmoid::freq_array_</definition>
        <argsstring></argsstring>
        <name>freq_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="77" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a9cafaa89df4dbf1ff97d11024cc83f89" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Plasmoid::jnu_array_</definition>
        <argsstring></argsstring>
        <name>jnu_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="78" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a029954bce4399ecb3ec1026e9e0198ed" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Plasmoid::anu_array_</definition>
        <argsstring></argsstring>
        <name>anu_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="79" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1a10a0a3b083eb2c1fcc12919ec2bad052" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::FitsRW::nnu_</definition>
        <argsstring></argsstring>
        <name>nnu_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="54" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1a94a04f2771440e81b4d1b3c6e4d29854" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::FitsRW::numin_</definition>
        <argsstring></argsstring>
        <name>numin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="55" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1a018580f837c25a4919b95a77ebb5fbea" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::FitsRW::numax_</definition>
        <argsstring></argsstring>
        <name>numax_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="56" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1addc1e4d45f6f70c0772aa2a11112614d" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::FitsRW::nt_</definition>
        <argsstring></argsstring>
        <name>nt_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="57" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1af4b29f91f536976485cdcf4b36263b08" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::FitsRW::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="58" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1a7f21ee6956ffe28ae36b86ccdd61e63f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::FitsRW::tmin_</definition>
        <argsstring></argsstring>
        <name>tmin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="59" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_fits_r_w_1a93d2ec4a27a4ef7f2d44836d1fb1b186" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::FitsRW::tmax_</definition>
        <argsstring></argsstring>
        <name>tmax_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="60" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoFitsRW.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::__defaultfeatures</definition>
        <argsstring></argsstring>
        <name>__defaultfeatures</name>
        <briefdescription>
<para>Whether some virtual methods are implemented. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementations of some methods call one-another. This member is used internally to avoid infinite recursion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="215" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <briefdescription>
<para>Reference counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="83" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t Gyoto::SmartPointee::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
<para>A mutex. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled with libpthread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="89" column="19" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad94b5e08f8f865e9fb3ec3c61c4541ce" prot="public" static="yes" mutable="no">
        <type><ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const</type>
        <definition>GYOTO_OBJECT Property const Gyoto::Astrobj::Plasmoid::properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="84" column="42" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab07e281a440cecc6156d9a65a9166b6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>virtual Property const* Gyoto::Astrobj::Plasmoid::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a21ee6813c28d7a90d13e0f1083946fea">getProperties</reimplements>
        <briefdescription>
<para>Get list of properties. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is declared automatically by the <ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> macro and defined automatically by the <ref refid="_gyoto_property_8h_1a1356435ea7ee0e18d07201a80e034dcc" kindref="member">GYOTO_PROPERTY_END</ref> macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="84" column="79"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa2510f8797269c151b874ce0cf63223d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Plasmoid::Plasmoid</definition>
        <argsstring>()</argsstring>
        <name>Plasmoid</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid" kindref="compound">Plasmoid</ref> object with undefined initial conditions. One needs to set the coordinate system, the metric, the type of motion, and the initial position and velocity before integrating the orbit. initCoord() can be used for that. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="92" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a7f4354f031c8a720ce27c462fb106700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Plasmoid::Plasmoid</definition>
        <argsstring>(const Plasmoid &amp;orig)</argsstring>
        <name>Plasmoid</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid" kindref="compound">Plasmoid</ref> &amp;</type>
          <declname>orig</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="94" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a755b08e5729e34da8a7d9b3c52e0a6fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid" kindref="compound">Plasmoid</ref> *</type>
        <definition>virtual Plasmoid* Gyoto::Astrobj::Plasmoid::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="class_gyoto_1_1_fits_r_w_1adc59606e73c8b69015f429c563ddcea1">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="95" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2bcb782a8db17c8d991e6e2d97a55523" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gyoto::Astrobj::Plasmoid::~Plasmoid</definition>
        <argsstring>()</argsstring>
        <name>~Plasmoid</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="97" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa5e9f51df59bb9c4b74c619cec2061a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Plasmoid::className</definition>
        <argsstring>() const</argsstring>
        <name>className</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa624d01af4be3614d349c1809516bb36">className</reimplements>
        <briefdescription>
<para>&quot;Plasmoid&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="100" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa4e7df486246e77659a928a6a928f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Plasmoid::className_l</definition>
        <argsstring>() const</argsstring>
        <name>className_l</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad1ebbfdd4751504319b607fcfa3dfce5">className_l</reimplements>
        <briefdescription>
<para>&quot;inflate_star&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="101" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a79a721d1c04d0a12f09ff48adc02a999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::motionType</definition>
        <argsstring>(std::string const type)</argsstring>
        <name>motionType</name>
        <param>
          <type>std::string const</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="104" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2f5f60d3f32c175484ddb48f16a09be9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Plasmoid::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee">metric</reimplements>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="105" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1af0d77ce1db96a3cba45fe12c06c10081" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::metric</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt; gg)</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd">metric</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="106" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1adf0ab5f9e30edad15921570201e0cb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::initPosition</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>initPosition</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="107" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aff89c1612ec70fbdb1a0e0d8e8f5c79e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::Plasmoid::initPosition</definition>
        <argsstring>() const</argsstring>
        <name>initPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="108" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a9b50ba9ba5b5890a8cf457fbed631115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::initVelocity</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>initVelocity</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="109" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad0617cd6242bf77b27523fcae45c825c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::Plasmoid::initVelocity</definition>
        <argsstring>() const</argsstring>
        <name>initVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="110" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a18330d65be4bf1f7b2f36887f05e5f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::initCoord</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;v)</argsstring>
        <name>initCoord</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="111" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a3ef52ae2390c6cc1dd376d8056c5c8d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Astrobj::Plasmoid::initCoord</definition>
        <argsstring>() const</argsstring>
        <name>initCoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="112" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a88351279bbac4aa8353c0f78943e0161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::radiusMax</definition>
        <argsstring>(double rr)</argsstring>
        <name>radiusMax</name>
        <param>
          <type>double</type>
          <declname>rr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2a09a270581d8fddf237be9059829219" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Plasmoid::radiusMax</definition>
        <argsstring>() const</argsstring>
        <name>radiusMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a112acc933dd31ebbb92a56d7b2c12e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::Radius</definition>
        <argsstring>(std::string vary)</argsstring>
        <name>Radius</name>
        <param>
          <type>std::string</type>
          <declname>vary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="115" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a528ae8edfc00f55b38330373845b9464" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Plasmoid::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>radiativeQ</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa">radiativeQ</reimplements>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>emission and transmission together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="117" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a0a79b65ff401c45e21995911130401ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::getCartesian</definition>
        <argsstring>(double const *const dates, size_t const n_dates, double *const x, double *const y, double *const z, double *const xprime=NULL, double *const yprime=NULL, double *const zprime=NULL)</argsstring>
        <name>getCartesian</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5bb0f209ef90a9331297caf3013a9225">getCartesian</reimplements>
        <param>
          <type>double const *const</type>
          <declname>dates</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>n_dates</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>xprime</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>yprime</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>double *const</type>
          <declname>zprime</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Yield the Cartesian coordinates of the center of the sphere. </para>
        </briefdescription>
        <detaileddescription>
<para>If the coordinate system of the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> object is spherical, use a trivial conversion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="122" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ac6e6e632646797af86dec1e42c97a466" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::getVelocity</definition>
        <argsstring>(double const pos[4], double vel[4])</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3393591c9e1fef3171f4016109a888e">getVelocity</reimplements>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Yield velocity of the center of the sphere. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="128" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Plasmoid::Impact</definition>
        <argsstring>(Gyoto::Photon *ph, size_t index, Astrobj::Properties *data=NULL)</argsstring>
        <name>Impact</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7">Impact</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Does a photon at these coordinates impact the object? </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3" kindref="member">Impact()</ref> checks whether a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> impacts the object between two integration steps of the photon&apos;s trajectory (those two steps are photon-&gt;getCoord(index, coord1) and photon-&gt;getCoord(index+1, coord2)). Impact returns 1 if the photon impacts the object between these two steps, else 0. In many cases of geometrically thick obects, the implementation <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Astrobj::Standard::Impact()</ref> will be fine.</para>
<para>Impact will call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">Generic::processHitQuantities()</ref> (which is virtual and may be re-implemented) to compute observable properties on demand: if the data pointer is non-NULL, the object will look in it for pointers to properties which apply to its kind. If a pointer to a property known to this object is present, then the property is computed and store at the pointed-to address. For instance, all objects know the &quot;intensity&quot; property. If data-&gt;intensity != NULL, the instensity is computed and stored in *data-&gt;intensity.</para>
<para>If data is non-NULL and only in this case, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref> will also call ph-&gt;transmit() to update the transmissions of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> (see <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit(size_t, double)</ref>). This must not be done if data is NULL (see <ref refid="class_gyoto_1_1_astrobj_1_1_complex_1a1ec0f21fbe89cfdcc1dda5851d0ab209" kindref="member">Astrobj::Complex::Impact()</ref> for an explanation).</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3" kindref="member">Impact()</ref> may not extend the ph <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. The only two dates that are guaranteed to be defined are at indices index and index+1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> aimed at the object; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the last photon step; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure to hold the observables at impact.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if impact, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="130" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1aed9ca95e01f6af087bd606acf43d8f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Plasmoid::file</definition>
        <argsstring>(std::string const &amp;f)</argsstring>
        <name>file</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="133" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_plasmoid_1a415d87bd7d5d4fc0d20ebb9c0b880a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> &gt;</type>
        <definition>std::vector&lt;size_t&gt; Gyoto::Astrobj::Plasmoid::fitsRead</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>fitsRead</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="135" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a14618821e7ff186cd77f3fe5faa701f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::numin</definition>
        <argsstring>(double numn)</argsstring>
        <name>numin</name>
        <param>
          <type>double</type>
          <declname>numn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="69" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a150d23f4b7e8c4605e461dae265475e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::numin</definition>
        <argsstring>() const</argsstring>
        <name>numin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a8e5a19b9e67e5c9b09a79d67c3205580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::numax</definition>
        <argsstring>(double numx)</argsstring>
        <name>numax</name>
        <param>
          <type>double</type>
          <declname>numx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="71" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a2c7e004208a1db06bfa1938f93de7eda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::numax</definition>
        <argsstring>() const</argsstring>
        <name>numax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a82febeee4c59cc8a34f934ed17acc825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::nnu</definition>
        <argsstring>(size_t nn)</argsstring>
        <name>nnu</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="73" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1af701f65e85f5e2091eb6ec1aed2b386b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::FitsRW::nnu</definition>
        <argsstring>() const</argsstring>
        <name>nnu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="74" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1aff02a975aa91dc1326522a94dc28d39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::tmin</definition>
        <argsstring>(double tmn)</argsstring>
        <name>tmin</name>
        <param>
          <type>double</type>
          <declname>tmn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="75" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a1956a5596ca90e35e452d928c144b17f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::tmin</definition>
        <argsstring>() const</argsstring>
        <name>tmin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1ade47d79d05c48535112033bc59c3dfe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::tmax</definition>
        <argsstring>(double tmx)</argsstring>
        <name>tmax</name>
        <param>
          <type>double</type>
          <declname>tmx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1ac26e70dc8022e2db7b66b905db9254bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::tmax</definition>
        <argsstring>() const</argsstring>
        <name>tmax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a4623fc86fd9a15e02a9cf69afd39b4a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::nt</definition>
        <argsstring>(size_t nn)</argsstring>
        <name>nt</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="79" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1aeeac4977e6a717ff16ecc1c9f8547fc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::FitsRW::nt</definition>
        <argsstring>() const</argsstring>
        <name>nt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1ad3b31c5c66bad239d37a8fdb8a7b19b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::dt</definition>
        <argsstring>(double dd)</argsstring>
        <name>dt</name>
        <param>
          <type>double</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="81" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a138b0e1ed14b34f90fb0c9c6129701ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::dt</definition>
        <argsstring>() const</argsstring>
        <name>dt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1a27f9d9fabf314c8d791dd003c764b078" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::FitsRW::getIndices</definition>
        <argsstring>(size_t i[2], double const nu, double const tt, double *const freq_array) const</argsstring>
        <name>getIndices</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>i</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>tt</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>freq_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="131" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_fits_r_w_1af2ffb96dc970c8ba6fd1a8413bc3eadb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::FitsRW::interpolate</definition>
        <argsstring>(double nu, double tt, double *const array, double *const freq_array) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tt</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>freq_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFitsRW.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6687bc8062ddb7b085531805f7e90218" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::spectrum</definition>
        <argsstring>(SmartPointer&lt; Spectrum::Generic &gt;)</argsstring>
        <name>spectrum</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set spectrum_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="137" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7a72bf3b1fb87c1641dc59a5c2c7e95d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::spectrum</definition>
        <argsstring>() const</argsstring>
        <name>spectrum</name>
        <briefdescription>
<para>Get spectrum_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="139" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3fad5ceba1126c9792721dceaa54889" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::opacity</definition>
        <argsstring>(SmartPointer&lt; Spectrum::Generic &gt;)</argsstring>
        <name>opacity</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="141" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6c6781d676a5d8755c69b9fb9a424c21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::opacity</definition>
        <argsstring>() const</argsstring>
        <name>opacity</name>
        <briefdescription>
<para>Get opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="143" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2aea833f9a7d311ebe20ab5760fa224c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
<para>Get radius_ in geometrical units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="145" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7e4cc8c5335694bf74684fd47421e5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(double)</argsstring>
        <name>radius</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1a66ad21157952f4cc3232525a80659947">radius</reimplementedby>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
<para>Set radius_ in geometrical units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="146" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aecdeb59ffd2238ea17d16edfbd9ac537" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(std::string const &amp;) const</argsstring>
        <name>radius</name>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
<para>Get radius_ in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="147" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ace341bcc018e32817483518a2861737a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::radius</definition>
        <argsstring>(double, std::string const &amp;)</argsstring>
        <name>radius</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
<para>Set radius_ in specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="148" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a657c4e7d92af87a2baff31aab44e1ad4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::deltaMaxOverRadius</definition>
        <argsstring>() const</argsstring>
        <name>deltaMaxOverRadius</name>
        <briefdescription>
<para>Get dltmor_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1a288e87aaac846c66785a3334ddbb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::deltaMaxOverRadius</definition>
        <argsstring>(double f)</argsstring>
        <name>deltaMaxOverRadius</name>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set dltmor_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="151" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1af06f064b6e6bf8b69891fb42bffe9ff1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::deltaMaxOverDistance</definition>
        <argsstring>() const</argsstring>
        <name>deltaMaxOverDistance</name>
        <briefdescription>
<para>Get dltmod_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa722f232b7256c5af7bba02283dc2444" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::UniformSphere::deltaMaxOverDistance</definition>
        <argsstring>(double f)</argsstring>
        <name>deltaMaxOverDistance</name>
        <param>
          <type>double</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set dltmod_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="154" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa5385b540457561b12840f4ef56f5f96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::UniformSphere::isotropic</definition>
        <argsstring>() const</argsstring>
        <name>isotropic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="156" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeedd10ed45f14bacea65f5d44251dced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::UniformSphere::isotropic</definition>
        <argsstring>(bool)</argsstring>
        <name>isotropic</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="157" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ab38ad87c3a8a46a434699d0c6b8207be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="158" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a8db8dec2c5aef7b97e350f5294bf535f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::UniformSphere::alpha</definition>
        <argsstring>(double)</argsstring>
        <name>alpha</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="159" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1e4971aa995221805a8dfbd9ba3b2684" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::operator()</definition>
        <argsstring>(double const coord[4])</argsstring>
        <name>operator()</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88">operator()</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a01c91b96424b05f2062d05c8a5e61852">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Square distance to the center of the sphere. </para>
        </briefdescription>
        <detaileddescription>
<para>Ensure integration does not miss the object </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="163" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Functor::Double_constDoubleArray::operator()</definition>
        <argsstring>(double const data[])=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_1a312fb0f3764200c1037564f7fc982e0a">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The actual function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::deltaMax</definition>
        <argsstring>(double *coord)</argsstring>
        <name>deltaMax</name>
        <param>
          <type>double *</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max( <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" kindref="member">dltmor_</ref>*<ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" kindref="member">radius_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" kindref="member">dltmod_</ref>*operator()(double coord[]) ) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="171" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::deltaMax</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>deltaMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1ac44d8265c9b1206c9b0db08661700bd8">deltaMax</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Get max step constraint for adaptive integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max step to find this object reliably </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="334" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="525" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a229272a0eec6c7eaeff905a4f4190e2e">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> for several values of <nu/><subscript>em</subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length dsem. It should take self-absorption along dsem into account.</para>
<para>Same as emission(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const looping on several values of nu_em.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Inu[] and nu_em[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I<subscript><nu/></subscript> or dI<subscript><nu/></subscript> [W m-2 sr-2] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="551" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="554" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a302d31a2017146695ea41f878dbb1336">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a6add4c7014e29c3049d1f3b53b700922">integrateEmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the integral of <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> from <nu/><subscript>1</subscript> to <nu/><subscript>2</subscript>. The default implementation is a numerical integrator which works well enough and is reasonably fast if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> is a smooth function (i.e. no emission or absorption lines). If possible, it is wise to implement an analytical solution. It is used by processHitQuantities to compute the &quot;BinSpectrum&quot; quantity which is the most physical: it is the only quantity that can be actually measured directly by a real-life instrument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="617" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]=NULL) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a65318a11cd3eb26258deb3dde9942056">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1ae7fe80444da7bea77b2cef62ffaaf096">integrateEmission</reimplementedby>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Like double integrateEmission(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]) const for each <ref refid="namespace_gyoto_1_1_spectrometer" kindref="compound">Spectrometer</ref> channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="628" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, double *cph, double *co) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]) const</argsstring>
        <name>transmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1ad4fc9a40ef19f5af4277853b96a45f3e">transmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd">transmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Transmission: exp( <alpha/><subscript><nu/></subscript> * ds<subscript>em</subscript> ) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> computes the transmission of this fluid element or 0 if optically thick. The default implementation returns 1. (no attenuation) if optically thin, 0. if optically thick.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuem</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency in the fluid&apos;s frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="646" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="648" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, double coord[8]) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="649" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>(double val)</argsstring>
        <name>safetyValue</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="128" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>() const</argsstring>
        <name>safetyValue</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="129" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>() const</argsstring>
        <name>deltaInObj</name>
        <briefdescription>
<para>Get Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the constant integration step inside the astrobj</para>
<para><simplesect kind="return"><para>delta_inobj_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>(double val)</argsstring>
        <name>deltaInObj</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::giveDelta</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>giveDelta</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a7923f45423943f81d5daf94a1d1e7e01">giveDelta</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Maximum <delta/> inside object. </para>
        </briefdescription>
        <detaileddescription>
<para>Gives the requested integration step <delta/><subscript>t</subscript> (in coordinate time t) between two neighbooring points along a portion of geodesic inside an astrobj; the current implementation only considers a constant delta, equal to Standard::deltaInobj()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate at which <delta/><subscript>t</subscript> is given </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="177" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>()</argsstring>
        <name>rMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a59fde26fc4e4542108e714cc5e2cadac">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1aea16e485a51f46b322b7e27bd8f95ebf">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1af4dfb2b79fe0879c0871ea9828d79f19">rMax</reimplementedby>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Get maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para>Child classes may use the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> member to cache this value, if its current value is DBL_MAX.</para>
<para>It can also be set using <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref>.</para>
<para><simplesect kind="return"><para>rmax_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="317" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>() const</argsstring>
        <name>rMax</name>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="318" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> and convert result to unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double rmax converted to unit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="327" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Set maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> in geometrical units. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="342" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val, std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" kindref="member">Generic::rMax(double val)</ref> after converting val from unit to geometrical units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> expressed in unit &quot;unit&quot;; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="351" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Generic::GYOTO_OBJECT_ACCESSORS_UNIT</definition>
        <argsstring>(deltaMaxInsideRMax)</argsstring>
        <name>GYOTO_OBJECT_ACCESSORS_UNIT</name>
        <param>
          <type>deltaMaxInsideRMax</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="353" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>(bool flag)</argsstring>
        <name>opticallyThin</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set whether the object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>Set flag indicating that radiative transfer should be integrated, i.e. the object is to be considered optically thin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if optically thin, 0 if optically thick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>() const</argsstring>
        <name>opticallyThin</name>
        <briefdescription>
<para>Query whether object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" kindref="member">opticallyThin(bool flag)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>(bool flag)</argsstring>
        <name>showshadow</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>() const</argsstring>
        <name>showshadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="369" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>(bool flag)</argsstring>
        <name>redshift</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="371" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>() const</argsstring>
        <name>redshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="372" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref></type>
        <definition>virtual Gyoto::Quantity_t Gyoto::Astrobj::Generic::getDefaultQuantities</definition>
        <argsstring>()</argsstring>
        <name>getDefaultQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a3205ac156dea7d83682d3a890e9604ec">getDefaultQuantities</reimplementedby>
        <briefdescription>
<para>Which quantities to compute if know was requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref> suitable as input to <ref refid="class_gyoto_1_1_scenery_1acaed08cd4fa2113101d26436cd96aebd" kindref="member">Gyoto::Scenery::setRequestedQuantities()</ref> to set de default quantities to compute for this object. The default of these defaults GYOTO_QUANTITY_INTENSITY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="380" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::setParameters</definition>
        <argsstring>(FactoryMessenger *fmp)</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_gyoto_1_1_object_1aa0a8b119e7aa95b21be081f8c97e1626">setParameters</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a635b0ea47d78c02a999d932eec8b16c5">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a931ca188ae49a0d8e9764a151edd3553">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_oscil_torus_1a0e4df99b42b3d3722d6ea39972d1421d">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Main loop in Subcontractor_t function. </para>
        </briefdescription>
        <detaileddescription>
<para>The Subcontractor_t function for each <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> kind should look somewhat like this (templated as <ref refid="namespace_gyoto_1_1_astrobj_1a889583a9d40c821bd55c4191cb3201ed" kindref="member">Gyoto::Astrobj::Subcontractor&lt;MyKind&gt;</ref>): <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj::Generic&gt;</highlight></codeline>
<codeline><highlight class="normal">Gyoto::Astrobj::MyKind::Subcontractor(FactoryMessenger*<sp/>fmp)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SmartPointer&lt;MyKind&gt;<sp/>ao<sp/>=<sp/>new<sp/>MyKind();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ao<sp/>-&gt;<sp/>setParameters(fmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>ao;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Each object kind should implement setParameter(string name, string content, string unit) to interpret the individual XML elements. <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">setParameters()</ref> can be overloaded in case the specific <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> class needs low level access to the <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref>. See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">UniformSphere::setParameters()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="408" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, state_t const &amp;coord_ph_hit, double const *coord_obj_hit, double dt, Astrobj::Properties *data) const</argsstring>
        <name>processHitQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a639da6614e85224814af4f2f6622e9ab">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6d49fda70fa23c3d8d9ed4386793a287">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1a339f1cd765cd173c34c85552e7e4c415">processHitQuantities</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Fills <ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>processHitQuantities fills the requested data in Impact. To use it, you need to call it in the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14" kindref="member">Impact()</ref> method for your object in case of hit. It will fill Redshift, Intensity, <ref refid="namespace_gyoto_1_1_spectrum" kindref="compound">Spectrum</ref>, BinSpectrum and update the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref>&apos;s transmission by calling <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit()</ref>, only if data==NULL.</para>
<para>You can overload it for your <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>. The generic implementation calls <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" kindref="member">integrateEmission()</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="466" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, double *coord_ph_hit, double *coord_obj_hit, double dt, Astrobj::Properties *data) const =delete</argsstring>
        <name>processHitQuantities</name>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="469" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="565" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double *Inu, double *Qnu, double *Unu, double *Vnu, Eigen::Matrix4d *Onu, double const *nuem, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1ac70d4cc58245764c6a76026755dac088">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a15a271cca8f57aab8a920720e78bc8e2">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1a099bdffa842fea620d36006f680052e3">radiativeQ</reimplementedby>
        <param>
          <type>double *</type>
          <declname>Inu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Qnu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Unu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Vnu</declname>
        </param>
        <param>
          <type>Eigen::Matrix4d *</type>
          <declname>Onu</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Compute the increment of Stokes parameters and transmission matrix. Polarised version of RadiaveQ. </para>
        </briefdescription>
        <detaileddescription>
<para>First function to be called for radiative quantities. If exist, i.e. implemented in an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, return the Stokes parameters emitted by the small volume of length dsem.</para>
<para>Warning :<itemizedlist>
<listitem><para>The basis used to determine the Stokes coefficients is different from the observer parallel transported polarisation basis. One should use getChi function to compute the angle between these two basis.</para>
</listitem><listitem><para>The non polarized case must also be implemented in this function to avoid error.</para>
</listitem></itemizedlist>
</para>
<para>See exemple in SimplePolarStar.C.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of intensity (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter Q (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Unu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter U (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter V (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Onu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output transmission (Eigen) matrix (must be set to a previously allocated array of Matrix4d) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of nu_em[], Inu[], Qnu[], Unu[], Vnu[], and Onu[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Increment of the Stokes parameters (I,Q,U,V) and local Transmission matrix (O). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="602" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" kindref="member">Omatrix()</ref> computes the exponential of the Mueller matrix which contains the absorption and Faraday coefficients and is used in the polarized radiative transfer equation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Onu</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix (must be allocated previously) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphanu[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 4 absorption coefficients in the Stokes basis (I,Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnu[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 3 Faraday coefficients in the Stokes basis (Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Chi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of rotation between the parallel transported observer polarization basis and the Stokes basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="663" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="666" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="667" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Pmatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Pmatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="670" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double sin2Chi, double cos2Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the rotation matrix with angle Chi to the emission Stokes vector constructed in the fonction from the individual coefficients </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="677" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="678" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::getChi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], bool elec=false) const</argsstring>
        <name>getChi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Chi angle. Return the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::getSinCos2Chi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], double *sin2Chi, double *cos2Chi, bool elec=false) const</argsstring>
        <name>getSinCos2Chi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cosinus and sinus of 2*Chi angle. Chi being the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph) const</argsstring>
        <name>computeB4vect</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the magnetic field 4-vector at a given position and a given configuration</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>B4vect</parametername>
</parameternamelist>
<parameterdescription>
<para>the output 4-vector magnetic field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magneticConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>string which determine the wanted configuration (&apos;Radial&apos;, &apos;Azimuthal&apos;, &apos;Vertical&apos;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the object which also contain its velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the photon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect_ipole</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph, double spin) const</argsstring>
        <name>computeB4vect_ipole</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X, int *const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array containing the range of all the axes (for exemple : radius, \theta, \varphi) at which the array is knwon. Should be built as a pointer of pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the length of each axes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[N][3]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contain the minimum value, the maximum value and the length of each axes. The axes will be assumed to be linearly spaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="731" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointee::incRefCount</definition>
        <argsstring>()</argsstring>
        <name>incRefCount</name>
        <briefdescription>
<para>Increment the reference counter. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::decRefCount</definition>
        <argsstring>()</argsstring>
        <name>decRefCount</name>
        <briefdescription>
<para>Decrement the reference counter and return current value. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::getRefCount</definition>
        <argsstring>()</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>Get the current number of references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="98" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Object::isThreadSafe</definition>
        <argsstring>() const</argsstring>
        <name>isThreadSafe</name>
        <briefdescription>
<para>Whether this class is thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Return True if this object is thread-safe, i.e. if an instance and its clone can be used in parallel threads (in the context of Scenery::raytrace()). Known objects which are not thread-safe include Lorene metrics and everything from the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in.</para>
<para>The default implementation considers that the class itself is thread safe and recurses into the declared properties to check whether they are safe too. Classes that abide to the Object/Property paradigm and are themselves thread-safe have nothing special to do.</para>
<para>Objects that clone children in their copy constructor that are not declared as properties must take these children into account.</para>
<para>Classes that are never thread-safe must declare it. It acn be easily done using GYOTO_OBJECT_THREAD_SAFETY in the class declaration and GYOTO_PROPERTY_THREAD_UNSAFE in the class definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="197" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="237" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="240" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="243" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="246" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="252" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="255" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>Property const* Gyoto::Object::property</definition>
        <argsstring>(std::string const pname) const</argsstring>
        <name>property</name>
        <param>
          <type>std::string const</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Find property by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Look into the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> list for a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> whose <emphasis>name</emphasis> (or <emphasis>name_false</emphasis>, for a boolean <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>) is <emphasis>pname</emphasis>. Return a const pointer to the first such property found, or NULL if none is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="267" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillProperty</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp, Property const &amp;p) const</argsstring>
        <name>fillProperty</name>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a9bc2f2025deb97a71f21f2be5c0f5022">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_directional_disk_1a42a558bc44010a73986909dd9a2fdd41">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a160d18feeb44b24f396c1001abec7bd6">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_1abbc14f98531888e96547665a8a6a20ca">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a5acba2e137e389070bb5f7c71ea31ed5">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_model_atmosphere_1a65604453c31dac828adeaeb7c35ca23d">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1acc548bda88d62932275e8d0fcd630ca9">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acbe2c229f702905204ea0d822b94e17c">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_shift_1a234a2d08bb7918e1bc62e4a710a4df77">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a152074fdddb29950936d3193d3aea55d">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af5ccaceb5c188a7a0ea11791885919bc">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_xillver_reflection_1a9e8bc6375f3c981042b74d99ee7adf91">fillProperty</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Output a single <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> to XML. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation decides what to do based on the <emphasis>p.type</emphasis>. The format matches how <ref refid="class_gyoto_1_1_object_1aa0a8b119e7aa95b21be081f8c97e1626" kindref="member">setParameters()</ref> an <ref refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" kindref="member">setParameter()</ref> would interpret the XML descition.</para>
<para>Overriding this method should be avoided, but makes sense in some cases (for instance <ref refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032" kindref="member">Screen::fillProperty()</ref> selects a different unit for <emphasis>Distance</emphasis> based on its magnitude, so that stellar sizes are expressed in solar radii while smaller sizes can be expressed in meters and larger sizes in parsecs).</para>
<para>Overriding implementation should fall-back on calling the implementation in the direct parent class: <programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>fmp-&gt;doSomething();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::fillProperty(fmp,<sp/>p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="298" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillElement</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp) const</argsstring>
        <name>fillElement</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a88d6f38c5fa5401a860291fbb21526d5">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_complex_1ada5f1fb56b87c56ff64113a49c76cca0">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_complex_1a0d73e5fd77b0e920af44894abfc96a99">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a63501e86c47ea6b67e0c564c706a72f1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Fill the XML element for this <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation simply calls <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref> for each <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> defined for the <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>.</para>
<para>Derived classes should avoid overriding <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref>. It may make sense occasionally, e.g. to make sure that the metric is output first.</para>
<para>To customize how a given <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> is rendered, it is better to override <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref>.</para>
<para>If this method is overridden, the implementation should in general call <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> on the direct base. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="316" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Object::setParameter</definition>
        <argsstring>(std::string name, std::string content, std::string unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a0c6f1aee4a478c5ef695348d64eae2d4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_kerr_k_s_1a4c9d3a51c5d1478908516a0b96a42135">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_rot_star3__1_1ac2fbf2bb5796e3d7c7eb80dccfe20af7">setParameter</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by name. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if no <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> of this <emphasis>name</emphasis> is found. Overriding implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>int<sp/>setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">int<sp/>B::setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>return<sp/>A::setParameter(name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>0;<sp/><sp/>//<sp/>name<sp/>was<sp/>known</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity). This may have a path component, e.g. &quot;Astrobj::Radius&quot;, in which case a property named &quot;Astrobj&quot; will be sought in the current object, and setParameter will be called recusrively on this <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> with Radius as name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if this parameter is known, 1 if it is not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="390" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::setParameter</definition>
        <argsstring>(Gyoto::Property const &amp;p, std::string const &amp;name, std::string const &amp;content, std::string const &amp;unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003">setParameter</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (and name) </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (<emphasis>p</emphasis>) of this <emphasis>name</emphasis> is found (i.e. either <emphasis>p.name</emphasis> or <emphasis>p.name_false</emphasis> is equal to <emphasis>name</emphasis>). Implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::setParameter(p,<sp/>name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> that matches <emphasis>name</emphasis> (<emphasis>p.name</emphasis> == <emphasis>name</emphasis> or <emphasis>p.name_false</emphasis> == <emphasis>name</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="426" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::describeProperty</definition>
        <argsstring>(Gyoto::Property const &amp;p) const</argsstring>
        <name>describeProperty</name>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Format desrciption for a property. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string containing the name(s) and type of the property, as well as whether it supports unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Object::help</definition>
        <argsstring>() const</argsstring>
        <name>help</name>
        <briefdescription>
<para>Print (to stdout) some help on this class. </para>
        </briefdescription>
        <detaileddescription>
<para>Describe all properties that this instance supports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Object::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af6c1082ac163e833fff9e934b417b194">kind</reimplementedby>
        <briefdescription>
<para>Get kind_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="456" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::radius_</definition>
        <argsstring></argsstring>
        <name>radius_</name>
        <briefdescription>
<para>sphere radius [geometrical units] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac169925e8414775f7dbfa876b5028e2d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::UniformSphere::isotropic_</definition>
        <argsstring></argsstring>
        <name>isotropic_</name>
        <briefdescription>
<para>if 1, then emission just returns 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="97" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1afbd7b86a1aeab73e9f94cc743e942046" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::spectrum_</definition>
        <argsstring></argsstring>
        <name>spectrum_</name>
        <briefdescription>
<para>sphere emission law </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="98" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5a771f0843f820c25eb4e78fd5155058" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_generic" kindref="compound">Spectrum::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::Generic&gt; Gyoto::Astrobj::UniformSphere::opacity_</definition>
        <argsstring></argsstring>
        <name>opacity_</name>
        <briefdescription>
<para>if optically thin, opacity law </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="99" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::dltmor_</definition>
        <argsstring></argsstring>
        <name>dltmor_</name>
        <briefdescription>
<para>see <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" kindref="member">deltaMax(double*)</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="101" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::UniformSphere::dltmod_</definition>
        <argsstring></argsstring>
        <name>dltmod_</name>
        <briefdescription>
<para>see <ref refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" kindref="member">deltaMax(double*)</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="102" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoUniformSphere.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::critical_value_</definition>
        <argsstring></argsstring>
        <name>critical_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="94" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::safety_value_</definition>
        <argsstring></argsstring>
        <name>safety_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="95" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::delta_inobj_</definition>
        <argsstring></argsstring>
        <name>delta_inobj_</name>
        <briefdescription>
<para>Constant value of the integration step inside object, in units of the compact object&apos;s mass M. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Astrobj::Generic::gg_</definition>
        <argsstring></argsstring>
        <name>gg_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> in this end of the Universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="222" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::rmax_</definition>
        <argsstring></argsstring>
        <name>rmax_</name>
        <briefdescription>
<para>Maximum distance to the center of the coordinate system [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum distance from the center of the coordinate system at which a photon may hit the object. Child classes may compute a decent value for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> at any time if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is DBL_MAX. External classes (Photons in particular) must use <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> to access this information.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="234" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::deltamaxinsidermax_</definition>
        <argsstring></argsstring>
        <name>deltamaxinsidermax_</name>
        <briefdescription>
<para>Maximum <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integration step inside <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum step for <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integation when inside the sphere of radius <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" kindref="member">deltamaxinsidermax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="242" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::flag_radtransf_</definition>
        <argsstring></argsstring>
        <name>flag_radtransf_</name>
        <briefdescription>
<para>1 if radiative transfer inside <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, else 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="244" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::shadow_</definition>
        <argsstring></argsstring>
        <name>shadow_</name>
        <briefdescription>
<para>1 to highlight the shadow region in the image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="246" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::noredshift_</definition>
        <argsstring></argsstring>
        <name>noredshift_</name>
        <briefdescription>
<para>1 to impose redshift factor g = 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="247" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::kind_</definition>
        <argsstring></argsstring>
        <name>kind_</name>
        <briefdescription>
<para>The &quot;kind&quot; that is output in the XML entity. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>kind=&quot;kind_&quot;<sp/>...&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="162" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gyoto::Object::plugins_</definition>
        <argsstring></argsstring>
        <name>plugins_</name>
        <briefdescription>
<para>The plug-ins that needs to be loaded to access this instance&apos;s class. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>...<sp/>plugin=&quot;plugins_&quot;&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="172" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a145deb35b7401163837aaa50ce6952ac" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::emission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;cp, double const co[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a">emission</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_inflate_star_1a732cd458782de4ab3887b5c303714de3">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Emission is determined by spectrum_ and opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="188" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3c699d3ee95ad9b98574c4ae4d5604be" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const *c_obj=NULL) const</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>c_obj</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="192" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ae4a487638d2a645011a780b8f22caafc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::UniformSphere::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;, double const *) const</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
        </param>
        <param>
          <type>double const *</type>
        </param>
        <briefdescription>
<para>Transmission is determined by opacity_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoUniformSphere.h" line="194" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::kind</definition>
        <argsstring>(const std::string)</argsstring>
        <name>kind</name>
        <param>
          <type>const std::string</type>
        </param>
        <briefdescription>
<para>Set kind_. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" kindref="member">kind(const std::string)</ref> is protected because, for most Objects, it should not be changed in runtime. Set kind_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="453" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interp1d</definition>
        <argsstring>(double const x, double const y0, double const y1) const</argsstring>
        <name>interp1d</name>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the 1D linear interpolation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x query position along the linear function [0,1]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the low position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the high position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="741" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpNd</definition>
        <argsstring>(int const N, double *const Xq, double **const X, double *const Y, std::string const *cond_limit) const</argsstring>
        <name>interpNd</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the N- dimension interpolation on an N-dimensional cube</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X[2**N][N]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contains for the 2**N points of the N dimensional cube the associated axes values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y[2**N]</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the value of the array to be interpolated at each points of the N-dimensional cube. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="751" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::getIndice</definition>
        <argsstring>(double &amp;xq, std::string const cond_limit, double const X_params[3], double *const X=NULL) const</argsstring>
        <name>getIndice</name>
        <param>
          <type>double &amp;</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>cond_limit</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>X_params</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double *const</type>
          <declname>X</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that return the closest indice of the query value on an axis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query value on the axis. Could be modified in case of periodic boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary conditions that will be applied to the axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array which contain the minimum value, the maximum value and the length of the axe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) array which contains the value of the axis points. Usefull for not linearly spaced axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="760" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" static="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref> &gt;</type>
        <definition>typedef Gyoto::SmartPointer&lt;Gyoto::SmartPointee&gt; Gyoto::SmartPointee::Subcontractor_t(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</definition>
        <argsstring>(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</argsstring>
        <name>Subcontractor_t</name>
        <briefdescription>
<para>A subcontractor builds an object upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Various classes need to provide a subcontractor to be able to instantiate themselves upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. A subcontractor is a function (often a static member function) which accepts a pointer to a <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> as unique parameter, communicates with the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref> using this messenger to read an XML description of the object to build, and returns this objet. <ref refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" kindref="member">SmartPointee::Subcontractor_t</ref>* is just generic enough a typedef to cast to and from other subcontractor types: <ref refid="namespace_gyoto_1_1_astrobj_1aa53c7ada58c8c8f3799c3485b7d8f3bb" kindref="member">Astrobj::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_metric_1ad6b33a642cc94ad67855184d2adb95df" kindref="member">Metric::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a163055eef14aee22dd8fa5188812d889" kindref="member">Spectrum::Subcontractor_t</ref>. A subcontractor needs to be registered using the relevant <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Register()</ref> function: <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Astrobj::Register()</ref>, <ref refid="namespace_gyoto_1_1_metric_1a602cba49b001e7470f3d439d1ab3e8f7" kindref="member">Metric::Register()</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a517874749d838d7121880e7d9d14c626" kindref="member">Spectrum::Register()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="114" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_plasmoid" kindref="compound">Plasmoid</ref> Shere of plasma emitting synchrotron, following a trajectory specified in getVelocity (non-geodesic a priori) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gyoto::Astrobj::UniformSphere</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Plasmoid</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_plasmoid"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="5">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
      </node>
      <node id="6">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="2">
        <label>Gyoto::FitsRW</label>
        <link refid="class_gyoto_1_1_fits_r_w"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>Gyoto::Property</label>
        <link refid="class_gyoto_1_1_property"/>
        <childnode refid="9" relation="usage">
          <edgelabel>getter_unit</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>getter</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>setter</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>setter_unit</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::UniformSphere</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>opacity_</edgelabel>
          <edgelabel>spectrum_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Plasmoid</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_plasmoid"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Gyoto::SmartPointer&lt; Gyoto::Screen &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="18">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="5">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrometer::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="7">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
        <childnode refid="8" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="6">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="16">
        <label>Gyoto::Property::setter_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>set_spectrometer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>set_metric</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>set_spectrum</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>set_astrobj</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>set_screen</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>Gyoto::Property::setter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__unit__t"/>
      </node>
      <node id="13">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="9">
        <label>Gyoto::Property::getter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__unit__t"/>
      </node>
      <node id="2">
        <label>Gyoto::FitsRW</label>
        <link refid="class_gyoto_1_1_fits_r_w"/>
      </node>
      <node id="10">
        <label>Gyoto::Property::getter_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>get_spectrometer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>get_metric</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>get_spectrum</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>get_astrobj</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>get_screen</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/junichi/Gyoto/include/GyotoPlasmoid.h" line="60" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoPlasmoid.h" bodystart="62" bodyend="137"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>__defaultfeatures</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ab38ad87c3a8a46a434699d0c6b8207be" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>alpha</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a8db8dec2c5aef7b97e350f5294bf535f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>alpha</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a029954bce4399ecb3ec1026e9e0198ed" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>anu_array_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa5e9f51df59bb9c4b74c619cec2061a7" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>className</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa4e7df486246e77659a928a6a928f626" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>className_l</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a755b08e5729e34da8a7d9b3c52e0a6fd" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>clone</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>computeB4vect</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>computeB4vect_ipole</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>critical_value_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>decRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>delta_inobj_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a167b6712b5b6adec7cbce993d5edce81" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltamaxinsidermax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1af06f064b6e6bf8b69891fb42bffe9ff1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMaxOverDistance</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa722f232b7256c5af7bba02283dc2444" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMaxOverDistance</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a657c4e7d92af87a2baff31aab44e1ad4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMaxOverRadius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1a288e87aaac846c66785a3334ddbb14" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>deltaMaxOverRadius</name></member>
      <member refid="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>describeProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ad80007ec032c154b65d670d41c4db71e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>dltmod_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeadb79c18400b7e308338690246be14c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>dltmor_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1ad3b31c5c66bad239d37a8fdb8a7b19b8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>dt</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a138b0e1ed14b34f90fb0c9c6129701ef" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>dt</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1af4b29f91f536976485cdcf4b36263b08" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>dt_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a145deb35b7401163837aaa50ce6952ac" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aed9ca95e01f6af087bd606acf43d8f8f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>file</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab89abca4c7157dc3f5a748584b4a7f3c" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>filename_</name></member>
      <member refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>fillElement</name></member>
      <member refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>fillProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a415d87bd7d5d4fc0d20ebb9c0b880a0f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>fitsRead</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a0caeff4b020d150f2b879bba05f038a7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>FitsRW</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1af423b2db473aa19f2de976bfeb8004ba" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>FitsRW</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aaabdb4056a6cd15796d85ef45cd74102" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>flag_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>flag_radtransf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a68b349ce786255608e3bd302364500e0" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>fourveldt_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aeead81494a91ac7babb1978cb5ead803" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>freq_array_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa01d6dc0f2a939e8c9cab6bfad0171fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a54143ea81889a2d2ae75f0ca9ad0264a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3a0ff7964797a990879dd4cd2026cfbb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a0a79b65ff401c45e21995911130401ef" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getCartesian</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getChi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getDefaultQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getIndice</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a27f9d9fabf314c8d791dd003c764b078" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getIndices</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab07e281a440cecc6156d9a65a9166b6a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getProperties</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getSinCos2Chi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ac6e6e632646797af86dec1e42c97a466" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>gg_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>giveDelta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a45c2b0e054c82a4eb8444510d0b5a849" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Plasmoid &gt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>GYOTO_OBJECT_ACCESSORS_UNIT</name></member>
      <member refid="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>help</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Impact</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>incRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a18330d65be4bf1f7b2f36887f05e5f4f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initCoord</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a3ef52ae2390c6cc1dd376d8056c5c8d4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initCoord</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1adf0ab5f9e30edad15921570201e0cb54" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initPosition</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aff89c1612ec70fbdb1a0e0d8e8f5c79e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initPosition</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a9b50ba9ba5b5890a8cf457fbed631115" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad0617cd6242bf77b27523fcae45c825c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>initVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3c699d3ee95ad9b98574c4ae4d5604be" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>interp1d</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>interpNd</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1af2ffb96dc970c8ba6fd1a8413bc3eadb" prot="public" virt="non-virtual" ambiguityscope="Gyoto::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa5385b540457561b12840f4ef56f5f96" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>isotropic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aeedd10ed45f14bacea65f5d44251dced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>isotropic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac169925e8414775f7dbfa876b5028e2d" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>isotropic_</name></member>
      <member refid="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>isThreadSafe</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a9cafaa89df4dbf1ff97d11024cc83f89" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>jnu_array_</name></member>
      <member refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>kind_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2f5f60d3f32c175484ddb48f16a09be9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1af0d77ce1db96a3cba45fe12c06c10081" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a79a721d1c04d0a12f09ff48adc02a999" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>motionType</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>mutex_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a82febeee4c59cc8a34f934ed17acc825" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nnu</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1af701f65e85f5e2091eb6ec1aed2b386b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nnu</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a10a0a3b083eb2c1fcc12919ec2bad052" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nnu_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>noredshift_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a4623fc86fd9a15e02a9cf69afd39b4a1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nt</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1aeeac4977e6a717ff16ecc1c9f8547fc6" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nt</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1addc1e4d45f6f70c0772aa2a11112614d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>nt_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a8e5a19b9e67e5c9b09a79d67c3205580" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numax</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a2c7e004208a1db06bfa1938f93de7eda" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numax</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a018580f837c25a4919b95a77ebb5fbea" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numax_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a14618821e7ff186cd77f3fe5faa701f3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numin</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a150d23f4b7e8c4605e461dae265475e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numin</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a94a04f2771440e81b4d1b3c6e4d29854" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>numin_</name></member>
      <member refid="class_gyoto_1_1_object_1a5173d279a53bbc9850771e344d6b79b0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a5834e83ca1482a379c7ddefb1919457f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a1fbd53bedaf8d18f67b12ec0660b8aa7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aa3fad5ceba1126c9792721dceaa54889" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6c6781d676a5d8755c69b9fb9a424c21" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a5a771f0843f820c25eb4e78fd5155058" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>opacity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a1e4971aa995221805a8dfbd9ba3b2684" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" virt="pure-virtual" ambiguityscope="Gyoto::Functor::Double_constDoubleArray::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1aa2510f8797269c151b874ce0cf63223d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Plasmoid</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a7f4354f031c8a720ce27c462fb106700" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Plasmoid</name></member>
      <member refid="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>plugins_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Pmatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab4a8cadab599d380e0b58a4b432f33d9" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>posIni_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a138efaeb5899866bbead5b315fb52b43" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>posSet_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad94b5e08f8f865e9fb3ec3c61c4541ce" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>properties</name></member>
      <member refid="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>property</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a528ae8edfc00f55b38330373845b9464" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::UniformSphere::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a112acc933dd31ebbb92a56d7b2c12e68" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2aea833f9a7d311ebe20ab5760fa224c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7e4cc8c5335694bf74684fd47421e5a2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aecdeb59ffd2238ea17d16edfbd9ac537" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ace341bcc018e32817483518a2861737a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radius</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1aebf75bbc992ab038329bb19a5e39d756" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radius_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a88351279bbac4aa8353c0f78943e0161" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiusMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2a09a270581d8fddf237be9059829219" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiusMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a0c5bb6ce502d5166cfceee5aa5d3145d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>radiusMax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>refCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>safety_value_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>setParameters</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>shadow_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a7d212bcd7d3ac4147e18683c47ca910d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1adc075b08ca5d3c0635bc97f843835f8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a6687bc8062ddb7b085531805f7e90218" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>spectrum</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a7a72bf3b1fb87c1641dc59a5c2c7e95d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>spectrum</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1afbd7b86a1aeab73e9f94cc743e942046" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>spectrum_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a8b99f313d5bb7a143d2125663cde29f1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1f8278591f27a729bb1222424619730c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a7948720c27fc3bdaf23c8c52a769a68e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a95b93c6163a8dc99bba0010c53fd04fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>Subcontractor_t</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ad6210c9e0fe7204301b45a49259360a0" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>t_inj_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1ade47d79d05c48535112033bc59c3dfe3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmax</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1ac26e70dc8022e2db7b66b905db9254bc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmax</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a93d2ec4a27a4ef7f2d44836d1fb1b186" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmax_</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1aff02a975aa91dc1326522a94dc28d39b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmin</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a1956a5596ca90e35e452d928c144b17f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmin</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1a7f21ee6956ffe28ae36b86ccdd61e63f" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>tmin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ae4a487638d2a645011a780b8f22caafc" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Plasmoid</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a3ddd27cf6ccd639a1dfe416c07be5ffc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a4c46ab5f3de6bf925c55cadedba7fad9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1ac9bb2f92e42132fe6e4d13f0143f6dfc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>UniformSphere</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a95b3fd061e4f6f9cf719185cc5cba998" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>varyRadius_</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a56681650c78dc2089816993041f288c0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~Double_constDoubleArray</name></member>
      <member refid="class_gyoto_1_1_fits_r_w_1ab6e0358850d4b8378c8011d940aa0ce3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~FitsRW</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1adf8758eab0634929f5c3630a54a88f07" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~Generic</name></member>
      <member refid="class_gyoto_1_1_object_1ab6f302f93bfd1f07ae2a6a48b3c74932" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2bcb782a8db17c8d991e6e2d97a55523" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~Plasmoid</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a4301d456d1d36ed7912d073b742c74e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a24d8ea9fd96f72f1dfc197bc396a662d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_uniform_sphere_1a2cd7a791cc9eb8244badc2bfd18f470a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Plasmoid</scope><name>~UniformSphere</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
