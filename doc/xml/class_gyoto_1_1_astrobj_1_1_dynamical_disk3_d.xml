<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d" kind="class" language="C++" prot="public">
    <compoundname>Gyoto::Astrobj::DynamicalDisk3D</compoundname>
    <basecompoundref refid="class_gyoto_1_1_astrobj_1_1_disk3_d" prot="public" virt="non-virtual">Gyoto::Astrobj::Disk3D</basecompoundref>
    <includes refid="_gyoto_dynamical_disk3_d_8h" local="no">GyotoDynamicalDisk3D.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a615e9ddb8aff99d85fcac93eb54f3d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Gyoto::SmartPointer&lt; Gyoto::Astrobj::DynamicalDisk3D &gt;</definition>
        <argsstring></argsstring>
        <name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::DynamicalDisk3D &gt;</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d" kindref="compound">Gyoto::Astrobj::DynamicalDisk3D</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="1" column="0" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a32268b51ef40a85deea1fc737111318b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_spectrum_1_1_black_body" kindref="compound">Spectrum::BlackBody</ref> &gt;</type>
        <definition>SmartPointer&lt;Spectrum::BlackBody&gt; Gyoto::Astrobj::DynamicalDisk3D::spectrumBB_</definition>
        <argsstring></argsstring>
        <name>spectrumBB_</name>
        <briefdescription>
<para>emission law </para>
        </briefdescription>
        <detaileddescription>
<para>disk black body </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="61" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Astrobj::Generic::gg_</definition>
        <argsstring></argsstring>
        <name>gg_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> in this end of the Universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="222" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::rmax_</definition>
        <argsstring></argsstring>
        <name>rmax_</name>
        <briefdescription>
<para>Maximum distance to the center of the coordinate system [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum distance from the center of the coordinate system at which a photon may hit the object. Child classes may compute a decent value for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> at any time if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is DBL_MAX. External classes (Photons in particular) must use <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> to access this information.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="234" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::deltamaxinsidermax_</definition>
        <argsstring></argsstring>
        <name>deltamaxinsidermax_</name>
        <briefdescription>
<para>Maximum <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integration step inside <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum step for <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integation when inside the sphere of radius <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" kindref="member">deltamaxinsidermax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="242" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::flag_radtransf_</definition>
        <argsstring></argsstring>
        <name>flag_radtransf_</name>
        <briefdescription>
<para>1 if radiative transfer inside <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, else 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="244" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::shadow_</definition>
        <argsstring></argsstring>
        <name>shadow_</name>
        <briefdescription>
<para>1 to highlight the shadow region in the image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="246" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::noredshift_</definition>
        <argsstring></argsstring>
        <name>noredshift_</name>
        <briefdescription>
<para>1 to impose redshift factor g = 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="247" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::kind_</definition>
        <argsstring></argsstring>
        <name>kind_</name>
        <briefdescription>
<para>The &quot;kind&quot; that is output in the XML entity. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>kind=&quot;kind_&quot;<sp/>...&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="162" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gyoto::Object::plugins_</definition>
        <argsstring></argsstring>
        <name>plugins_</name>
        <briefdescription>
<para>The plug-ins that needs to be loaded to access this instance&apos;s class. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>...<sp/>plugin=&quot;plugins_&quot;&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="172" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1afb11286edfc1703336e3ca5b7c5a5daf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::DynamicalDisk3D::temperature_</definition>
        <argsstring></argsstring>
        <name>temperature_</name>
        <briefdescription>
<para>1 if temperature is given in fits data file, 0 if emission coef is directly given </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="64" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a6d703232c8c92ffe37729e6dd71663ad" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* Gyoto::Astrobj::DynamicalDisk3D::dirname_</definition>
        <argsstring></argsstring>
        <name>dirname_</name>
        <briefdescription>
<para>FITS files directory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="65" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a5234927bc7366388175b5f5792615c26" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::tinit_</definition>
        <argsstring></argsstring>
        <name>tinit_</name>
        <briefdescription>
<para>Time of the first FITS file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="66" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae219f2faa5ee29834986eb32db013dc0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <briefdescription>
<para>Time increment between two FITS (assumed constant) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="67" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae4681fd7d64637829b877bdbddf5324d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::DynamicalDisk3D::nb_times_</definition>
        <argsstring></argsstring>
        <name>nb_times_</name>
        <briefdescription>
<para>Number of times. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="68" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a8c84bb4a90db328ac332ce356ce63c53" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::PLindex_</definition>
        <argsstring></argsstring>
        <name>PLindex_</name>
        <briefdescription>
<para>power law index such that density_elec(E) <prop/> E<superscript>-p</superscript> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="69" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aa8e4c28edaf3eea85268593241ef3ab9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::DynamicalDisk3D::novel_</definition>
        <argsstring></argsstring>
        <name>novel_</name>
        <briefdescription>
<para>put to true if velocity of emitting particle is not provided </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="70" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac3f061aca8dcf615f039437c9a360c53" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::floortemperature_</definition>
        <argsstring></argsstring>
        <name>floortemperature_</name>
        <briefdescription>
<para>if non-zero, emission and absorption are 0 for temperatures below this floor, emission=blackbody and absorption is infty for temperatures above (this is a kind of fake optically thick case, when the emitting surface is inside the grid, not at the boundary of the grid) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="71" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1adccdfb1da53c93667833fc10290dba38" prot="private" static="no" mutable="no">
        <type>double **</type>
        <definition>double** Gyoto::Astrobj::DynamicalDisk3D::emission_array_</definition>
        <argsstring></argsstring>
        <name>emission_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of arrays of dimensionality double[nr_][nz_][nphi_][nnu_]. In FITS format, the first dimension is nu, the second phi, the third z, the last r. It contains emission coef, or a closely related quantity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="78" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a48e5acbd4ee8c1d8ace574548e7db9f0" prot="private" static="no" mutable="no">
        <type>double **</type>
        <definition>double** Gyoto::Astrobj::DynamicalDisk3D::absorption_array_</definition>
        <argsstring></argsstring>
        <name>absorption_array_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An array of arrays of dimensionality double[nr_][nz_][nphi_][nnu_]. In FITS format, the first dimension is nu, the second phi, the third z, the last r. It contains absorption coef, or a closely related quantity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="85" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a0bf5e31c9a09550120e41dd066ad8144" prot="private" static="no" mutable="no">
        <type>double **</type>
        <definition>double** Gyoto::Astrobj::DynamicalDisk3D::velocity_array_</definition>
        <argsstring></argsstring>
        <name>velocity_array_</name>
        <briefdescription>
<para>velocity(r, z, phi) </para>
        </briefdescription>
        <detaileddescription>
<para>An array of arrays of dimensionality double[nr_][nz_][nphi_][3]. In FITS format, the second dimension is phi, and the third r. The first plane in the first FITS dimention is dphi/dt, the second dz/dt, the third dr/dt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="93" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abea9d19957b967a5d7c3256ccbe2f2de" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::Disk3D::filename_</definition>
        <argsstring></argsstring>
        <name>filename_</name>
        <briefdescription>
<para>Optional FITS file name containing the arrays. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="59" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Disk3D::emissquant_</definition>
        <argsstring></argsstring>
        <name>emissquant_</name>
        <briefdescription>
<para>Physical quantity yielding emission. </para>
        </briefdescription>
        <detaileddescription>
<para>An array of dimensionality double[nr_][nz_][nphi_][nnu_]. In FITS format, the first dimension is nu, the second phi, the third z and last r. It typically contains temperature and is used only by subclasses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="66" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a185d287fb8f306e209f287c4b82c5f70" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Disk3D::opacity_</definition>
        <argsstring></argsstring>
        <name>opacity_</name>
        <briefdescription>
<para>Opacity, same dimensions as emissquant_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="68" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" prot="private" static="no" mutable="no">
        <type>double *</type>
        <definition>double* Gyoto::Astrobj::Disk3D::velocity_</definition>
        <argsstring></argsstring>
        <name>velocity_</name>
        <briefdescription>
<para>Velocity(r, z, phi) </para>
        </briefdescription>
        <detaileddescription>
<para>An array of dimensionality double[nr_][nz_][nphi_][3]. In FITS format, the second dimension is phi, the third z and last r. The first plane in the first FITS dimention is dphi/dt, the second dz/dt the last dr/dt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="75" column="11" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9890077e54296622807b306293611a85" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::dnu_</definition>
        <argsstring></argsstring>
        <name>dnu_</name>
        <briefdescription>
<para>Frequency scale of <ref refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1a3bf437f5d0a214d9af68358f85459122" kindref="member">PatternDisk::emission_</ref> in Hz. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="77" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa479ab401ec23a582338e4a4851136af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::nu0_</definition>
        <argsstring></argsstring>
        <name>nu0_</name>
        <briefdescription>
<para>Lowest frequency provided in <ref refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1a3bf437f5d0a214d9af68358f85459122" kindref="member">PatternDisk::emission_</ref> in Hz. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="78" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a4d41cbf9b15b6b1d8c473dd0a09b8db2" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::Disk3D::nnu_</definition>
        <argsstring></argsstring>
        <name>nnu_</name>
        <briefdescription>
<para>Number of frequencies provided in <ref refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1a3bf437f5d0a214d9af68358f85459122" kindref="member">PatternDisk::emission_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="79" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7072d9de4e41546d797f5d27e0084e5d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::dphi_</definition>
        <argsstring></argsstring>
        <name>dphi_</name>
        <briefdescription>
<para><delta/><phi/> between two grid columns </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="81" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a76c9e3aab695be2d28ea9abf6698c831" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::phimin_</definition>
        <argsstring></argsstring>
        <name>phimin_</name>
        <briefdescription>
<para>Minimum <phi/> in grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="82" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a2723fca241e743a9811af9a58890e947" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::Disk3D::nphi_</definition>
        <argsstring></argsstring>
        <name>nphi_</name>
        <briefdescription>
<para>Grid size in the <phi/> direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="83" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa42b6f92b99cc795808e6dd411fcc466" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::phimax_</definition>
        <argsstring></argsstring>
        <name>phimax_</name>
        <briefdescription>
<para>Maximum <phi/> in grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="84" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe216ea1d13d97ea0b2efb9d07c137d9" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::Disk3D::repeat_phi_</definition>
        <argsstring></argsstring>
        <name>repeat_phi_</name>
        <briefdescription>
<para>Number of times the pattern should be repeated to cover [0, 2<Pi/>]. </para>
        </briefdescription>
        <detaileddescription>
<para>XML elment: &lt;RepeatPhi&gt;. FITS keyword: HIERARCH GYOTO <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d" kindref="compound">Disk3D</ref> RepeatPhi </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="90" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a532e44453d143491d8a1a9674d2b8dc2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::dz_</definition>
        <argsstring></argsstring>
        <name>dz_</name>
        <briefdescription>
<para>Altitude step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="93" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7888a03d69469a3142a14982ab022f0f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::zmin_</definition>
        <argsstring></argsstring>
        <name>zmin_</name>
        <briefdescription>
<para>Minimum altitude. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="94" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad4234dfb10632b419617d5533436771a" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::Disk3D::nz_</definition>
        <argsstring></argsstring>
        <name>nz_</name>
        <briefdescription>
<para>Grid size in the altitude direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="95" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3ce5bb46e6ddba319d5be75442073979" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::zmax_</definition>
        <argsstring></argsstring>
        <name>zmax_</name>
        <briefdescription>
<para>Maximum altitude. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a053404c9ca308386ea2fe5c76b8af379" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::dr_</definition>
        <argsstring></argsstring>
        <name>dr_</name>
        <briefdescription>
<para>Radius step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="98" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abecf9c4e93e4eb71ca1c2a96308f2d33" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::rin_</definition>
        <argsstring></argsstring>
        <name>rin_</name>
        <briefdescription>
<para>Inner radius of the grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="99" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade5dd2b964d2834335d72b60369bb5c6" prot="private" static="no" mutable="no">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>size_t Gyoto::Astrobj::Disk3D::nr_</definition>
        <argsstring></argsstring>
        <name>nr_</name>
        <briefdescription>
<para>Number of rows in the patternGrid size in the r direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="100" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0e1cf6f1bd46b2933b60988652025f4f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::rout_</definition>
        <argsstring></argsstring>
        <name>rout_</name>
        <briefdescription>
<para>Outer radius of the grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="101" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abfae2f3e8c822e64ff47524c0ee2a764" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Disk3D::zsym_</definition>
        <argsstring></argsstring>
        <name>zsym_</name>
        <briefdescription>
<para>1 to symmetrize the grid z -&gt; -z (default case) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="103" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab153b1767e80474322ed8b451478590b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::tPattern_</definition>
        <argsstring></argsstring>
        <name>tPattern_</name>
        <briefdescription>
<para>If the disk is being rotated (like a pattern disk) this is the origin of time for this rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="105" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ae3ebffcf88f6fa6754bdf939622863ba" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::omegaPattern_</definition>
        <argsstring></argsstring>
        <name>omegaPattern_</name>
        <briefdescription>
<para>If the disk is being rotated (like a pattern disk) this is the rotation velocity dphi/dt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="106" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoDisk3D.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::__defaultfeatures</definition>
        <argsstring></argsstring>
        <name>__defaultfeatures</name>
        <briefdescription>
<para>Whether some virtual methods are implemented. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementations of some methods call one-another. This member is used internally to avoid infinite recursion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="215" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <briefdescription>
<para>Reference counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="83" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t Gyoto::SmartPointee::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
<para>A mutex. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled with libpthread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="89" column="19" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ad13eaed3896582b161ea9e2c95e01d4b" prot="public" static="yes" mutable="no">
        <type><ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const</type>
        <definition>GYOTO_OBJECT Property const Gyoto::Astrobj::DynamicalDisk3D::properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="98" column="42" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a741914bfb80367a68848e16653ce0734" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Gyoto::Astrobj::DynamicalDisk3D::GYOTO_OBJECT_THREAD_SAFETY</definition>
        <argsstring></argsstring>
        <name>GYOTO_OBJECT_THREAD_SAFETY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="99" column="3" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7babb137c86cb15bcfe8fc58f3a7c9a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>virtual Property const* Gyoto::Astrobj::DynamicalDisk3D::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7b50c212395e0d0417ecc6f415931649">getProperties</reimplements>
        <briefdescription>
<para>Get list of properties. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is declared automatically by the <ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> macro and defined automatically by the <ref refid="_gyoto_property_8h_1a1356435ea7ee0e18d07201a80e034dcc" kindref="member">GYOTO_PROPERTY_END</ref> macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="98" column="79"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1af25f771e1253ce1d47b039bbef84a428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::DynamicalDisk3D::DynamicalDisk3D</definition>
        <argsstring>()</argsstring>
        <name>DynamicalDisk3D</name>
        <briefdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_standard" kindref="compound">Standard</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="101" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a00138e705f81d9bd57c71727f23fcd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::DynamicalDisk3D::DynamicalDisk3D</definition>
        <argsstring>(const DynamicalDisk3D &amp;)</argsstring>
        <name>DynamicalDisk3D</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d" kindref="compound">DynamicalDisk3D</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="103" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a5206ae0144c8f10b630299c728818518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d" kindref="compound">DynamicalDisk3D</ref> *</type>
        <definition>virtual DynamicalDisk3D* Gyoto::Astrobj::DynamicalDisk3D::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1af435515a9706dcabbb238abba5f9f728">clone</reimplements>
        <briefdescription>
<para>Cloner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="104" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a30e971f401449217e9f8cef78f2d4bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Gyoto::Astrobj::DynamicalDisk3D::~DynamicalDisk3D</definition>
        <argsstring>()</argsstring>
        <name>~DynamicalDisk3D</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="106" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a33fcb5a0b55de44cdfb03ffbcad6062e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::metric</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt; gg)</argsstring>
        <name>metric</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd">metric</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="112" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7b3253e767287e5fb6290b391d57d7c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::file</definition>
        <argsstring>(std::string const &amp;f)</argsstring>
        <name>file</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a77dcf6327da128197d05d265a4dce4b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Astrobj::DynamicalDisk3D::file</definition>
        <argsstring>() const</argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="114" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ab7e40f43bc6fc1abb0e9db3ea54ec6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::tinit</definition>
        <argsstring>(double t)</argsstring>
        <name>tinit</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="115" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7c303a1ecedd7f3c7eb140176da5e5ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::tinit</definition>
        <argsstring>() const</argsstring>
        <name>tinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a49a97c6047abafe614052466299084cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::dt</definition>
        <argsstring>(double t)</argsstring>
        <name>dt</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="117" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ad59baaeb6529e6e4fa12764bdb7372b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::dt</definition>
        <argsstring>() const</argsstring>
        <name>dt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a727a38c7aa09e72a54715ba6d3692c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::PLindex</definition>
        <argsstring>(double t)</argsstring>
        <name>PLindex</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="119" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a63ee9c3c8da81371db0b1d42fbd932d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::PLindex</definition>
        <argsstring>() const</argsstring>
        <name>PLindex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a6199a168b981d1621d9bf40bf098d5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::floorTemperature</definition>
        <argsstring>(double t)</argsstring>
        <name>floorTemperature</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="121" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1afe017cec58645624412e86ed3e02de15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::floorTemperature</definition>
        <argsstring>() const</argsstring>
        <name>floorTemperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="122" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a3aa39c2c1eae706157eede521d308ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::temperature</definition>
        <argsstring>(bool t)</argsstring>
        <name>temperature</name>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="123" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a47ecf8d26c78c721080200a493b908f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::DynamicalDisk3D::temperature</definition>
        <argsstring>() const</argsstring>
        <name>temperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="124" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae1efba3c6f8de5860798413255410f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::withVelocity</definition>
        <argsstring>(bool t)</argsstring>
        <name>withVelocity</name>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="125" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aca09657bf31eb5a68b628688453f1010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::DynamicalDisk3D::withVelocity</definition>
        <argsstring>() const</argsstring>
        <name>withVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="126" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a2541b747a61b2d4494e220ce9a557758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::emission1date</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;c_ph, double const c_obj[8]) const</argsstring>
        <name>emission1date</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Compute emission at one grid date. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a8f73e6ed0328cec2a9d8b408e3cc9ef7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::DynamicalDisk3D::emission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a">emission</reimplements>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Interpolate emission between grid dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="136" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7c939dd165e41a2c0350fd7a59ecc147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::transmission1date</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;c_ph, double const c_obj[8]) const</argsstring>
        <name>transmission1date</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Compute transmission at one grid date. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::DynamicalDisk3D::transmission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;cph, double const co[8]) const</argsstring>
        <name>transmission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d">transmission</reimplements>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Interpolate transmission between grid dates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="144" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a550c0504b7190c743db3e9406ad30613" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::getVelocity</definition>
        <argsstring>(double const pos[4], double vel[4])</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a69249bf633036c0a4bd3935ef8a4ca70">getVelocity</reimplements>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Get fluid 4-velocity at point. </para>
        </briefdescription>
        <detaileddescription>
<para>Fill vel with the 4-vector velocity of the fluid at 4-position pos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>4-position at which to compute velocity; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vel</parametername>
</parameternamelist>
<parameterdescription>
<para>4-velocity at pos. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="147" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aafa0fe4bcab962c0c6a68298d662a9c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double const  *</type>
        <definition>double const* Gyoto::Astrobj::DynamicalDisk3D::getVelocity</definition>
        <argsstring>() const</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a1ec38f70c794ac42b6a4712289f84837">getVelocity</reimplements>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" kindref="member">Disk3D::velocity_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="148" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac66726b8c1271499fddb753e30cf9dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="111" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1af5482ea6b3773451ec3e2be56be821fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt;)</argsstring>
        <name>metric</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="111" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a160d18feeb44b24f396c1001abec7bd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::fillProperty</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp, Property const &amp;p) const</argsstring>
        <name>fillProperty</name>
        <reimplements refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b">fillProperty</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Output a single <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> to XML. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation decides what to do based on the <emphasis>p.type</emphasis>. The format matches how <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">setParameters()</ref> an <ref refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" kindref="member">setParameter()</ref> would interpret the XML descition.</para>
<para>Overriding this method should be avoided, but makes sense in some cases (for instance <ref refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032" kindref="member">Screen::fillProperty()</ref> selects a different unit for <emphasis>Distance</emphasis> based on its magnitude, so that stellar sizes are expressed in solar radii while smaller sizes can be expressed in meters and larger sizes in parsecs).</para>
<para>Overriding implementation should fall-back on calling the implementation in the direct parent class: <programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>fmp-&gt;doSomething();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::fillProperty(fmp,<sp/>p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="113" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad91728805f12844c776f4e329ac9489e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::zsym</definition>
        <argsstring>(bool t)</argsstring>
        <name>zsym</name>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="136" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa5ba35a4a4e2c44da9df724cd724a254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Disk3D::zsym</definition>
        <argsstring>() const</argsstring>
        <name>zsym</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="137" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ae7c7b65fb6da6784e287b12015ab98ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::tPattern</definition>
        <argsstring>(double t)</argsstring>
        <name>tPattern</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="138" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aab26d8e46cedf1a262050b41379aedd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::tPattern</definition>
        <argsstring>() const</argsstring>
        <name>tPattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a198645115afc481b270e1a5fcfafbbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::omegaPattern</definition>
        <argsstring>(double t)</argsstring>
        <name>omegaPattern</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="140" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a886822361d74f3a132f3dac02c2feedd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::omegaPattern</definition>
        <argsstring>() const</argsstring>
        <name>omegaPattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ac7d3523d0e323042abbdcbcffe16923d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::setEmissquant</definition>
        <argsstring>(double *pattern)</argsstring>
        <name>setEmissquant</name>
        <param>
          <type>double *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" kindref="member">Disk3D::emissquant_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The pointer is copied directly, not the array content.</para>
<para>This is a low-level function. Beware that:<itemizedlist>
<listitem><para>previously allocated array will not be freed automatically;</para>
</listitem><listitem><para>array attached when the destructor is called will be freed. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="152" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a45794a1d643394cf7bee3681c3e893e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::opacity</definition>
        <argsstring>(double *pattern)</argsstring>
        <name>opacity</name>
        <param>
          <type>double *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="154" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1acece8b8408b51389eab459f3b3335864" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double const  *</type>
        <definition>virtual double const* Gyoto::Astrobj::Disk3D::opacity</definition>
        <argsstring>() const</argsstring>
        <name>opacity</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a185d287fb8f306e209f287c4b82c5f70" kindref="member">Disk3D::opacity_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="195" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1acb0f8dcf419a4cdd9995938df2238d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::setVelocity</definition>
        <argsstring>(double *pattern)</argsstring>
        <name>setVelocity</name>
        <param>
          <type>double *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Set Disk3D::velocity__. </para>
        </briefdescription>
        <detaileddescription>
<para>The pointer is copied directly, not the array content.</para>
<para>This is a low-level function. Beware that:<itemizedlist>
<listitem><para>previously allocated array will not be freed automatically;</para>
</listitem><listitem><para>array attached when the destructor is called will be freed. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="164" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0603a6f0240410bd7b3c6bca5c272bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::copyEmissquant</definition>
        <argsstring>(double const *const pattern=NULL, size_t const naxes[4]=NULL)</argsstring>
        <name>copyEmissquant</name>
        <param>
          <type>double const *const</type>
          <declname>pattern</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>naxes</declname>
          <array>[4]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" kindref="member">Disk3D::emissquant_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" kindref="member">Disk3D::emissquant_</ref> is freed if not NULL, reallocated, and pattern is copied into emission_.</para>
<para>If <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" kindref="member">Disk3D::velocity_</ref> or has been set previously with mismatching sizes, it is deallocated too.</para>
<para>Finally, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a4d41cbf9b15b6b1d8c473dd0a09b8db2" kindref="member">Disk3D::nnu_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a2723fca241e743a9811af9a58890e947" kindref="member">Disk3D::nphi_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad4234dfb10632b419617d5533436771a" kindref="member">Disk3D::nz_</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade5dd2b964d2834335d72b60369bb5c6" kindref="member">Disk3D::nr_</ref> are set according to naxes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to copy as emission_. May be NULL in which case emission_ is simply deallocated and set to NULL.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>naxes</parametername>
</parameternamelist>
<parameterdescription>
<para>{ nnu_, nphi_, nz_, nr_ }. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="182" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9282dec57d31fc3d647a01c5183c0964" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double const  *</type>
        <definition>virtual double const* Gyoto::Astrobj::Disk3D::getEmissquant</definition>
        <argsstring>() const</argsstring>
        <name>getEmissquant</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" kindref="member">Disk3D::emissquant_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="186" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad9df8176868391a3eb2715d90dbf6202" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::getEmissquantNaxes</definition>
        <argsstring>(size_t naxes[4]) const</argsstring>
        <name>getEmissquantNaxes</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>naxes</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Get { <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a4d41cbf9b15b6b1d8c473dd0a09b8db2" kindref="member">Disk3D::nnu_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a2723fca241e743a9811af9a58890e947" kindref="member">Disk3D::nphi_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad4234dfb10632b419617d5533436771a" kindref="member">Disk3D::nz_</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade5dd2b964d2834335d72b60369bb5c6" kindref="member">Disk3D::nr_</ref> }. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="189" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aceba86a2d0a0edbad530e13a17a22bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::copyOpacity</definition>
        <argsstring>(double const *const pattern=NULL, size_t const naxes[4]=NULL)</argsstring>
        <name>copyOpacity</name>
        <param>
          <type>double const *const</type>
          <declname>pattern</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>naxes</declname>
          <array>[4]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="191" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad0fde4198c590fd4f5d092555cb1b60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::copyVelocity</definition>
        <argsstring>(double const *const pattern=NULL, size_t const naxes[3]=NULL)</argsstring>
        <name>copyVelocity</name>
        <param>
          <type>double const *const</type>
          <declname>pattern</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const</type>
          <declname>naxes</declname>
          <array>[3]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" kindref="member">Disk3D::velocity_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" kindref="member">Disk3D::velocity_</ref> is first freed if not NULL and set to NULL.</para>
<para>If pattern is not NULL, <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" kindref="member">Disk3D::emissquant_</ref> must have been set previously with matching dimensions. <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" kindref="member">Disk3D::velocity_</ref> is then reallocated, and pattern is copied into velocity_.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to copy as velocity_. May be NULL in which case velocity_ is simply deallocated and set to NULL.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>naxes</parametername>
</parameternamelist>
<parameterdescription>
<para>{ nphi_, nz_, nr_ }. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="210" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade48526a1cfc147be99ebac20627d56b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::repeatPhi</definition>
        <argsstring>(size_t n)</argsstring>
        <name>repeatPhi</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe216ea1d13d97ea0b2efb9d07c137d9" kindref="member">Disk3D::repeat_phi_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="216" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ac1067c4e37cb1213d00d380960ddc03e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
        <definition>virtual size_t Gyoto::Astrobj::Disk3D::repeatPhi</definition>
        <argsstring>() const</argsstring>
        <name>repeatPhi</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe216ea1d13d97ea0b2efb9d07c137d9" kindref="member">Disk3D::repeat_phi_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="218" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a6b3d6fef861323c24c238bb06628418c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::nu0</definition>
        <argsstring>(double freq)</argsstring>
        <name>nu0</name>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa479ab401ec23a582338e4a4851136af" kindref="member">Disk3D::nu0_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="221" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abae5c73fe159e44cd4724cf1f77eeb58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Disk3D::nu0</definition>
        <argsstring>() const</argsstring>
        <name>nu0</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa479ab401ec23a582338e4a4851136af" kindref="member">Disk3D::nu0_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="223" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad0ccf737c5df9bb4708b723fb19d8eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Disk3D::dnu</definition>
        <argsstring>(double dfreq)</argsstring>
        <name>dnu</name>
        <param>
          <type>double</type>
          <declname>dfreq</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9890077e54296622807b306293611a85" kindref="member">Disk3D::dnu_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="226" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3b8c3532e143b70c6c0f51ff62663932" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Disk3D::dnu</definition>
        <argsstring>() const</argsstring>
        <name>dnu</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9890077e54296622807b306293611a85" kindref="member">Disk3D::dnu_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="228" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7033957a9e6393d203f9f4649843c122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::rin</definition>
        <argsstring>(double rrin)</argsstring>
        <name>rin</name>
        <param>
          <type>double</type>
          <declname>rrin</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abecf9c4e93e4eb71ca1c2a96308f2d33" kindref="member">Disk3D::rin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="231" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab267c8918f10f9a9dace7479b70b7a2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::rin</definition>
        <argsstring>() const</argsstring>
        <name>rin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abecf9c4e93e4eb71ca1c2a96308f2d33" kindref="member">Disk3D::rin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="233" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1afea59313d7d115d275a07e90bd306c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::rout</definition>
        <argsstring>(double rout)</argsstring>
        <name>rout</name>
        <param>
          <type>double</type>
          <declname>rout</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0e1cf6f1bd46b2933b60988652025f4f" kindref="member">Disk3D::rout_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="236" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1af60eca1b1cd7f28a3686afef96f09fb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::rout</definition>
        <argsstring>() const</argsstring>
        <name>rout</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0e1cf6f1bd46b2933b60988652025f4f" kindref="member">Disk3D::rout_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="238" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa47e61115aaebddc9ff4a8f647a05aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::zmin</definition>
        <argsstring>(double zmin)</argsstring>
        <name>zmin</name>
        <param>
          <type>double</type>
          <declname>zmin</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7888a03d69469a3142a14982ab022f0f" kindref="member">Disk3D::zmin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="241" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a12fa7fd74df3c3f55395ff60e3fbd004" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::zmin</definition>
        <argsstring>() const</argsstring>
        <name>zmin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7888a03d69469a3142a14982ab022f0f" kindref="member">Disk3D::zmin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="243" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abadeddb80cac7e5e20faf9a92df47489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::zmax</definition>
        <argsstring>(double zmax)</argsstring>
        <name>zmax</name>
        <param>
          <type>double</type>
          <declname>zmax</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3ce5bb46e6ddba319d5be75442073979" kindref="member">Disk3D::zmax_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="246" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab45e8b9f7d05d8ce928dcade4f76ea6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::zmax</definition>
        <argsstring>() const</argsstring>
        <name>zmax</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3ce5bb46e6ddba319d5be75442073979" kindref="member">Disk3D::zmax_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="248" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a23bbf990853c462c6518d88223c5355b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::phimin</definition>
        <argsstring>(double phimin)</argsstring>
        <name>phimin</name>
        <param>
          <type>double</type>
          <declname>phimin</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a76c9e3aab695be2d28ea9abf6698c831" kindref="member">Disk3D::phimin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="251" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a87563518aec780eae15a6a3bf6477b8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::phimin</definition>
        <argsstring>() const</argsstring>
        <name>phimin</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a76c9e3aab695be2d28ea9abf6698c831" kindref="member">Disk3D::phimin_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="253" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe278bd613fc9e835538966270f00a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::phimax</definition>
        <argsstring>(double phimax)</argsstring>
        <name>phimax</name>
        <param>
          <type>double</type>
          <declname>phimax</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa42b6f92b99cc795808e6dd411fcc466" kindref="member">Disk3D::phimax_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="256" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1abdd90ee5a87e09e5dcf790a7f25dc288" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Disk3D::phimax</definition>
        <argsstring>() const</argsstring>
        <name>phimax</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa42b6f92b99cc795808e6dd411fcc466" kindref="member">Disk3D::phimax_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="258" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1a88f58b8244ee5ec4cdade4ba38cba23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Disk3D::Impact</definition>
        <argsstring>(Photon *ph, size_t index, Astrobj::Properties *data)</argsstring>
        <name>Impact</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14">Impact</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Does a photon at these coordinates impact the object? </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a88f58b8244ee5ec4cdade4ba38cba23b" kindref="member">Impact()</ref> checks whether a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> impacts the object between two integration steps of the photon&apos;s trajectory (those two steps are photon-&gt;getCoord(index, coord1) and photon-&gt;getCoord(index+1, coord2)). Impact returns 1 if the photon impacts the object between these two steps, else 0. In many cases of geometrically thick obects, the implementation <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Astrobj::Standard::Impact()</ref> will be fine.</para>
<para>Impact will call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">Generic::processHitQuantities()</ref> (which is virtual and may be re-implemented) to compute observable properties on demand: if the data pointer is non-NULL, the object will look in it for pointers to properties which apply to its kind. If a pointer to a property known to this object is present, then the property is computed and store at the pointed-to address. For instance, all objects know the &quot;intensity&quot; property. If data-&gt;intensity != NULL, the instensity is computed and stored in *data-&gt;intensity.</para>
<para>If data is non-NULL and only in this case, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref> will also call ph-&gt;transmit() to update the transmissions of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> (see <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit(size_t, double)</ref>). This must not be done if data is NULL (see <ref refid="class_gyoto_1_1_astrobj_1_1_complex_1a1ec0f21fbe89cfdcc1dda5851d0ab209" kindref="member">Astrobj::Complex::Impact()</ref> for an explanation).</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a88f58b8244ee5ec4cdade4ba38cba23b" kindref="member">Impact()</ref> may not extend the ph <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. The only two dates that are guaranteed to be defined are at indices index and index+1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> aimed at the object; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the last photon step; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure to hold the observables at impact.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if impact, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="265" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_1ae0ec76caf0f970442e1825016b804b9e">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2f5f60d3f32c175484ddb48f16a09be9">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a9a4ee32519b8425863a0360cb628d9ac">metric</reimplementedby>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="299" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>()</argsstring>
        <name>rMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a59fde26fc4e4542108e714cc5e2cadac">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1aea16e485a51f46b322b7e27bd8f95ebf">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1af4dfb2b79fe0879c0871ea9828d79f19">rMax</reimplementedby>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Get maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para>Child classes may use the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> member to cache this value, if its current value is DBL_MAX.</para>
<para>It can also be set using <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref>.</para>
<para><simplesect kind="return"><para>rmax_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="317" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>() const</argsstring>
        <name>rMax</name>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="318" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> and convert result to unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double rmax converted to unit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="327" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Set maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> in geometrical units. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="342" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val, std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" kindref="member">Generic::rMax(double val)</ref> after converting val from unit to geometrical units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> expressed in unit &quot;unit&quot;; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="351" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::deltaMax</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>deltaMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1ac44d8265c9b1206c9b0db08661700bd8">deltaMax</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Get max step constraint for adaptive integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max step to find this object reliably </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="334" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Generic::GYOTO_OBJECT_ACCESSORS_UNIT</definition>
        <argsstring>(deltaMaxInsideRMax)</argsstring>
        <name>GYOTO_OBJECT_ACCESSORS_UNIT</name>
        <param>
          <type>deltaMaxInsideRMax</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="353" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>(bool flag)</argsstring>
        <name>opticallyThin</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set whether the object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>Set flag indicating that radiative transfer should be integrated, i.e. the object is to be considered optically thin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if optically thin, 0 if optically thick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>() const</argsstring>
        <name>opticallyThin</name>
        <briefdescription>
<para>Query whether object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" kindref="member">opticallyThin(bool flag)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>(bool flag)</argsstring>
        <name>showshadow</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>() const</argsstring>
        <name>showshadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="369" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>(bool flag)</argsstring>
        <name>redshift</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="371" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>() const</argsstring>
        <name>redshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="372" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref></type>
        <definition>virtual Gyoto::Quantity_t Gyoto::Astrobj::Generic::getDefaultQuantities</definition>
        <argsstring>()</argsstring>
        <name>getDefaultQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a3205ac156dea7d83682d3a890e9604ec">getDefaultQuantities</reimplementedby>
        <briefdescription>
<para>Which quantities to compute if know was requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref> suitable as input to <ref refid="class_gyoto_1_1_scenery_1acaed08cd4fa2113101d26436cd96aebd" kindref="member">Gyoto::Scenery::setRequestedQuantities()</ref> to set de default quantities to compute for this object. The default of these defaults GYOTO_QUANTITY_INTENSITY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="380" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::setParameters</definition>
        <argsstring>(FactoryMessenger *fmp)</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_gyoto_1_1_object_1aa0a8b119e7aa95b21be081f8c97e1626">setParameters</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a635b0ea47d78c02a999d932eec8b16c5">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a931ca188ae49a0d8e9764a151edd3553">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1ad1ad60d3ce8861dfa8626ca908e5789e">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_oscil_torus_1a0e4df99b42b3d3722d6ea39972d1421d">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8">setParameters</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Main loop in Subcontractor_t function. </para>
        </briefdescription>
        <detaileddescription>
<para>The Subcontractor_t function for each <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> kind should look somewhat like this (templated as <ref refid="namespace_gyoto_1_1_astrobj_1a889583a9d40c821bd55c4191cb3201ed" kindref="member">Gyoto::Astrobj::Subcontractor&lt;MyKind&gt;</ref>): <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj::Generic&gt;</highlight></codeline>
<codeline><highlight class="normal">Gyoto::Astrobj::MyKind::Subcontractor(FactoryMessenger*<sp/>fmp)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>SmartPointer&lt;MyKind&gt;<sp/>ao<sp/>=<sp/>new<sp/>MyKind();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ao<sp/>-&gt;<sp/>setParameters(fmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>ao;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Each object kind should implement setParameter(string name, string content, string unit) to interpret the individual XML elements. <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">setParameters()</ref> can be overloaded in case the specific <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> class needs low level access to the <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref>. See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" kindref="member">UniformSphere::setParameters()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="408" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, state_t const &amp;coord_ph_hit, double const *coord_obj_hit, double dt, Astrobj::Properties *data) const</argsstring>
        <name>processHitQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a639da6614e85224814af4f2f6622e9ab">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6d49fda70fa23c3d8d9ed4386793a287">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1a339f1cd765cd173c34c85552e7e4c415">processHitQuantities</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Fills <ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>processHitQuantities fills the requested data in Impact. To use it, you need to call it in the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14" kindref="member">Impact()</ref> method for your object in case of hit. It will fill Redshift, Intensity, <ref refid="namespace_gyoto_1_1_spectrum" kindref="compound">Spectrum</ref>, BinSpectrum and update the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref>&apos;s transmission by calling <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit()</ref>, only if data==NULL.</para>
<para>You can overload it for your <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>. The generic implementation calls <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" kindref="member">integrateEmission()</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="466" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, double *coord_ph_hit, double *coord_obj_hit, double dt, Astrobj::Properties *data) const =delete</argsstring>
        <name>processHitQuantities</name>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="469" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="525" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa">emission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a229272a0eec6c7eaeff905a4f4190e2e">emission</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> for several values of <nu/><subscript>em</subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length dsem. It should take self-absorption along dsem into account.</para>
<para>Same as emission(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const looping on several values of nu_em.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Inu[] and nu_em[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I<subscript><nu/></subscript> or dI<subscript><nu/></subscript> [W m-2 sr-2] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="551" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="554" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_blob_1aa9e772639c3b505c12f17912a2a8aea9">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_jet_1a3a5c90fc26a2980a012fe44074b9f272">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a528ae8edfc00f55b38330373845b9464">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aff09a9faa13d0be2428a97325740e87b">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_spherical_accretion_1a2d502412d04b57a692afeed26eebd8b5">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1ad3f86e9cce85b549341e08c16a1d8275">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a87cafd2c7dbf6fe04615e9d2f0648b2c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1afd3ce020bfe47b977bea3e514243e856">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_flared_disk_synchrotron_1a165e77626a58268751115749c16e694a">radiativeQ</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>emission and transmission together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="561" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="565" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double *Inu, double *Qnu, double *Unu, double *Vnu, Eigen::Matrix4d *Onu, double const *nuem, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1ac70d4cc58245764c6a76026755dac088">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a15a271cca8f57aab8a920720e78bc8e2">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1a099bdffa842fea620d36006f680052e3">radiativeQ</reimplementedby>
        <param>
          <type>double *</type>
          <declname>Inu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Qnu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Unu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Vnu</declname>
        </param>
        <param>
          <type>Eigen::Matrix4d *</type>
          <declname>Onu</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Compute the increment of Stokes parameters and transmission matrix. Polarised version of RadiaveQ. </para>
        </briefdescription>
        <detaileddescription>
<para>First function to be called for radiative quantities. If exist, i.e. implemented in an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, return the Stokes parameters emitted by the small volume of length dsem.</para>
<para>Warning :<itemizedlist>
<listitem><para>The basis used to determine the Stokes coefficients is different from the observer parallel transported polarisation basis. One should use getChi function to compute the angle between these two basis.</para>
</listitem><listitem><para>The non polarized case must also be implemented in this function to avoid error.</para>
</listitem></itemizedlist>
</para>
<para>See exemple in SimplePolarStar.C.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of intensity (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter Q (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Unu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter U (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter V (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Onu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output transmission (Eigen) matrix (must be set to a previously allocated array of Matrix4d) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of nu_em[], Inu[], Qnu[], Unu[], Vnu[], and Onu[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Increment of the Stokes parameters (I,Q,U,V) and local Transmission matrix (O). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="602" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a302d31a2017146695ea41f878dbb1336">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a6add4c7014e29c3049d1f3b53b700922">integrateEmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the integral of <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> from <nu/><subscript>1</subscript> to <nu/><subscript>2</subscript>. The default implementation is a numerical integrator which works well enough and is reasonably fast if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref> is a smooth function (i.e. no emission or absorption lines). If possible, it is wise to implement an analytical solution. It is used by processHitQuantities to compute the &quot;BinSpectrum&quot; quantity which is the most physical: it is the only quantity that can be actually measured directly by a real-life instrument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="617" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]=NULL) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>integrateEmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a2fbc7319fa8c8d98aa330f0556500dc0">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a65318a11cd3eb26258deb3dde9942056">integrateEmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1ae7fe80444da7bea77b2cef62ffaaf096">integrateEmission</reimplementedby>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Like double integrateEmission(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]) const for each <ref refid="namespace_gyoto_1_1_spectrometer" kindref="compound">Spectrometer</ref> channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="628" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, double *cph, double *co) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="648" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, double coord[8]) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="649" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" kindref="member">Omatrix()</ref> computes the exponential of the Mueller matrix which contains the absorption and Faraday coefficients and is used in the polarized radiative transfer equation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Onu</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix (must be allocated previously) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphanu[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 4 absorption coefficients in the Stokes basis (I,Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnu[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 3 Faraday coefficients in the Stokes basis (Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Chi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of rotation between the parallel transported observer polarization basis and the Stokes basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="663" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="666" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="667" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Pmatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Pmatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="670" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double sin2Chi, double cos2Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the rotation matrix with angle Chi to the emission Stokes vector constructed in the fonction from the individual coefficients </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="677" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="678" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::getChi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], bool elec=false) const</argsstring>
        <name>getChi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Chi angle. Return the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::getSinCos2Chi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], double *sin2Chi, double *cos2Chi, bool elec=false) const</argsstring>
        <name>getSinCos2Chi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cosinus and sinus of 2*Chi angle. Chi being the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph) const</argsstring>
        <name>computeB4vect</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the magnetic field 4-vector at a given position and a given configuration</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>B4vect</parametername>
</parameternamelist>
<parameterdescription>
<para>the output 4-vector magnetic field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magneticConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>string which determine the wanted configuration (&apos;Radial&apos;, &apos;Azimuthal&apos;, &apos;Vertical&apos;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the object which also contain its velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the photon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect_ipole</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph, double spin) const</argsstring>
        <name>computeB4vect_ipole</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X, int *const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array containing the range of all the axes (for exemple : radius, \theta, \varphi) at which the array is knwon. Should be built as a pointer of pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the length of each axes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[N][3]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contain the minimum value, the maximum value and the length of each axes. The axes will be assumed to be linearly spaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="731" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointee::incRefCount</definition>
        <argsstring>()</argsstring>
        <name>incRefCount</name>
        <briefdescription>
<para>Increment the reference counter. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::decRefCount</definition>
        <argsstring>()</argsstring>
        <name>decRefCount</name>
        <briefdescription>
<para>Decrement the reference counter and return current value. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::getRefCount</definition>
        <argsstring>()</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>Get the current number of references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="98" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Object::isThreadSafe</definition>
        <argsstring>() const</argsstring>
        <name>isThreadSafe</name>
        <briefdescription>
<para>Whether this class is thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Return True if this object is thread-safe, i.e. if an instance and its clone can be used in parallel threads (in the context of Scenery::raytrace()). Known objects which are not thread-safe include Lorene metrics and everything from the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in.</para>
<para>The default implementation considers that the class itself is thread safe and recurses into the declared properties to check whether they are safe too. Classes that abide to the Object/Property paradigm and are themselves thread-safe have nothing special to do.</para>
<para>Objects that clone children in their copy constructor that are not declared as properties must take these children into account.</para>
<para>Classes that are never thread-safe must declare it. It acn be easily done using GYOTO_OBJECT_THREAD_SAFETY in the class declaration and GYOTO_PROPERTY_THREAD_UNSAFE in the class definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="197" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="237" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(Property const &amp;p, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718">set</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="240" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val)</argsstring>
        <name>set</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82">set</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="243" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="246" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="249" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926">get</reimplementedby>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="252" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(Property const &amp;p, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4">get</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="255" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>Property const* Gyoto::Object::property</definition>
        <argsstring>(std::string const pname) const</argsstring>
        <name>property</name>
        <param>
          <type>std::string const</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Find property by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Look into the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> list for a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> whose <emphasis>name</emphasis> (or <emphasis>name_false</emphasis>, for a boolean <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>) is <emphasis>pname</emphasis>. Return a const pointer to the first such property found, or NULL if none is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="267" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillElement</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp) const</argsstring>
        <name>fillElement</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a88d6f38c5fa5401a860291fbb21526d5">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_complex_1ada5f1fb56b87c56ff64113a49c76cca0">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_complex_1a0d73e5fd77b0e920af44894abfc96a99">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a63501e86c47ea6b67e0c564c706a72f1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1">fillElement</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
<para>Fill the XML element for this <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation simply calls <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref> for each <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> defined for the <ref refid="class_gyoto_1_1_object" kindref="compound">Object</ref>.</para>
<para>Derived classes should avoid overriding <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref>. It may make sense occasionally, e.g. to make sure that the metric is output first.</para>
<para>To customize how a given <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> is rendered, it is better to override <ref refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" kindref="member">fillProperty()</ref>.</para>
<para>If this method is overridden, the implementation should in general call <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> on the direct base. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="316" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Object::setParameter</definition>
        <argsstring>(std::string name, std::string content, std::string unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a0c6f1aee4a478c5ef695348d64eae2d4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_kerr_k_s_1a4c9d3a51c5d1478908516a0b96a42135">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a628aa18277af464450896efd63206527">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4">setParameter</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_rot_star3__1_1ac2fbf2bb5796e3d7c7eb80dccfe20af7">setParameter</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by name. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if no <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> of this <emphasis>name</emphasis> is found. Overriding implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>int<sp/>setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">int<sp/>B::setParameter(std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>return<sp/>A::setParameter(name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>0;<sp/><sp/>//<sp/>name<sp/>was<sp/>known</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity). This may have a path component, e.g. &quot;Astrobj::Radius&quot;, in which case a property named &quot;Astrobj&quot; will be sought in the current object, and setParameter will be called recusrively on this <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref> with Radius as name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if this parameter is known, 1 if it is not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="390" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::setParameter</definition>
        <argsstring>(Gyoto::Property const &amp;p, std::string const &amp;name, std::string const &amp;content, std::string const &amp;unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003">setParameter</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (and name) </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (<emphasis>p</emphasis>) of this <emphasis>name</emphasis> is found (i.e. either <emphasis>p.name</emphasis> or <emphasis>p.name_false</emphasis> is equal to <emphasis>name</emphasis>). Implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::setParameter(p,<sp/>name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> that matches <emphasis>name</emphasis> (<emphasis>p.name</emphasis> == <emphasis>name</emphasis> or <emphasis>p.name_false</emphasis> == <emphasis>name</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="426" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::describeProperty</definition>
        <argsstring>(Gyoto::Property const &amp;p) const</argsstring>
        <name>describeProperty</name>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Format desrciption for a property. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string containing the name(s) and type of the property, as well as whether it supports unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Object::help</definition>
        <argsstring>() const</argsstring>
        <name>help</name>
        <briefdescription>
<para>Print (to stdout) some help on this class. </para>
        </briefdescription>
        <detaileddescription>
<para>Describe all properties that this instance supports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Object::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af6c1082ac163e833fff9e934b417b194">kind</reimplementedby>
        <briefdescription>
<para>Get kind_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="456" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1add53de6d226853378cecd895662c4ae7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::DynamicalDisk3D::copyQuantities</definition>
        <argsstring>(int iq)</argsstring>
        <name>copyQuantities</name>
        <param>
          <type>int</type>
          <declname>iq</declname>
        </param>
        <briefdescription>
<para>Set underlying <ref refid="class_gyoto_1_1_astrobj_1_1_disk3_d" kindref="compound">Disk3D</ref> pointers to a specific date slice. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iq</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the date slice. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="156" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab3008d0d3d4ddee330f1a006f4113a06" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Disk3D::getIndices</definition>
        <argsstring>(size_t i[4], double const co[4], double nu=0.) const</argsstring>
        <name>getIndices</name>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>i</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
          <defval>0.</defval>
        </param>
        <briefdescription>
<para>Get emissquant_ cell corresponding to position co[4]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoDisk3D.h" line="261" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::kind</definition>
        <argsstring>(const std::string)</argsstring>
        <name>kind</name>
        <param>
          <type>const std::string</type>
        </param>
        <briefdescription>
<para>Set kind_. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" kindref="member">kind(const std::string)</ref> is protected because, for most Objects, it should not be changed in runtime. Set kind_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="453" column="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interp1d</definition>
        <argsstring>(double const x, double const y0, double const y1) const</argsstring>
        <name>interp1d</name>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the 1D linear interpolation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x query position along the linear function [0,1]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the low position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the high position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="741" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpNd</definition>
        <argsstring>(int const N, double *const Xq, double **const X, double *const Y, std::string const *cond_limit) const</argsstring>
        <name>interpNd</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the N- dimension interpolation on an N-dimensional cube</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X[2**N][N]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contains for the 2**N points of the N dimensional cube the associated axes values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y[2**N]</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the value of the array to be interpolated at each points of the N-dimensional cube. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="751" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::getIndice</definition>
        <argsstring>(double &amp;xq, std::string const cond_limit, double const X_params[3], double *const X=NULL) const</argsstring>
        <name>getIndice</name>
        <param>
          <type>double &amp;</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>cond_limit</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>X_params</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double *const</type>
          <declname>X</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that return the closest indice of the query value on an axis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query value on the axis. Could be modified in case of periodic boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary conditions that will be applied to the axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array which contain the minimum value, the maximum value and the length of the axe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) array which contains the value of the axis points. Usefull for not linearly spaced axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="760" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" static="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref> &gt;</type>
        <definition>typedef Gyoto::SmartPointer&lt;Gyoto::SmartPointee&gt; Gyoto::SmartPointee::Subcontractor_t(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</definition>
        <argsstring>(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</argsstring>
        <name>Subcontractor_t</name>
        <briefdescription>
<para>A subcontractor builds an object upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Various classes need to provide a subcontractor to be able to instantiate themselves upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. A subcontractor is a function (often a static member function) which accepts a pointer to a <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> as unique parameter, communicates with the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref> using this messenger to read an XML description of the object to build, and returns this objet. <ref refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" kindref="member">SmartPointee::Subcontractor_t</ref>* is just generic enough a typedef to cast to and from other subcontractor types: <ref refid="namespace_gyoto_1_1_astrobj_1aa53c7ada58c8c8f3799c3485b7d8f3bb" kindref="member">Astrobj::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_metric_1ad6b33a642cc94ad67855184d2adb95df" kindref="member">Metric::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a163055eef14aee22dd8fa5188812d889" kindref="member">Spectrum::Subcontractor_t</ref>. A subcontractor needs to be registered using the relevant <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Register()</ref> function: <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Astrobj::Register()</ref>, <ref refid="namespace_gyoto_1_1_metric_1a602cba49b001e7470f3d439d1ab3e8f7" kindref="member">Metric::Register()</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a517874749d838d7121880e7d9d14c626" kindref="member">Spectrum::Register()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="114" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Geometrically thick optically thin disk read from a set of FITS files. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes a <ref refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_b_b" kindref="compound">PatternDiskBB</ref> that evolves dynamically. It is described by a set of FITS files for different times. Its emission is blackbody.</para>
<para>The disk is assumed to be described by a regular, constant in time, grid.</para>
<para>The metric must be Kerr in BL coordinates. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
      </node>
      <node id="4">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Disk3D</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_disk3_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::DynamicalDisk3D</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>Gyoto::Property</label>
        <link refid="class_gyoto_1_1_property"/>
        <childnode refid="7" relation="usage">
          <edgelabel>getter_unit</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>getter</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>setter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>setter_unit</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="13">
        <label>Gyoto::SmartPointer&lt; Gyoto::Screen &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrometer::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="5">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="4">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="14">
        <label>Gyoto::Property::setter_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__t"/>
        <childnode refid="9" relation="usage">
          <edgelabel>set_spectrometer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>set_metric</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>set_spectrum</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>set_astrobj</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>set_screen</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Gyoto::Astrobj::Disk3D</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_disk3_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Gyoto::Property::setter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__unit__t"/>
      </node>
      <node id="11">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::DynamicalDisk3D</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Gyoto::Property::getter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__unit__t"/>
      </node>
      <node id="8">
        <label>Gyoto::Property::getter_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__t"/>
        <childnode refid="9" relation="usage">
          <edgelabel>get_spectrometer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>get_metric</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>get_spectrum</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>get_astrobj</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>get_screen</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" line="58" column="1" bodyfile="/home/junichi/Gyoto/include/GyotoDynamicalDisk3D.h" bodystart="58" bodyend="158"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>__defaultfeatures</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a48e5acbd4ee8c1d8ace574548e7db9f0" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>absorption_array_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a5206ae0144c8f10b630299c728818518" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>clone</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>computeB4vect</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>computeB4vect_ipole</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0603a6f0240410bd7b3c6bca5c272bc0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>copyEmissquant</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aceba86a2d0a0edbad530e13a17a22bcf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>copyOpacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1add53de6d226853378cecd895662c4ae7" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>copyQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad0fde4198c590fd4f5d092555cb1b60f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>copyVelocity</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>decRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>deltamaxinsidermax_</name></member>
      <member refid="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>describeProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a6d703232c8c92ffe37729e6dd71663ad" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dirname_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a4339c5b7a11f1ffde34798f4caf341a5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Disk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1adefde507d0ec9470cb154c828d797bb4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Disk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad0ccf737c5df9bb4708b723fb19d8eda" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dnu</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3b8c3532e143b70c6c0f51ff62663932" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dnu</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9890077e54296622807b306293611a85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dnu_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7072d9de4e41546d797f5d27e0084e5d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dphi_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a053404c9ca308386ea2fe5c76b8af379" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dr_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a49a97c6047abafe614052466299084cb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dt</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ad59baaeb6529e6e4fa12764bdb7372b1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dt</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae219f2faa5ee29834986eb32db013dc0" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dt_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1af25f771e1253ce1d47b039bbef84a428" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>DynamicalDisk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a00138e705f81d9bd57c71727f23fcd23" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>DynamicalDisk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a532e44453d143491d8a1a9674d2b8dc2" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>dz_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a8f73e6ed0328cec2a9d8b408e3cc9ef7" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a2541b747a61b2d4494e220ce9a557758" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission1date</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1adccdfb1da53c93667833fc10290dba38" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emission_array_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab5f035a9f4e463a1d65d2c132a5c3a98" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>emissquant_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7b3253e767287e5fb6290b391d57d7c3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>file</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a77dcf6327da128197d05d265a4dce4b9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>file</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abea9d19957b967a5d7c3256ccbe2f2de" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>filename_</name></member>
      <member refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>fillElement</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a160d18feeb44b24f396c1001abec7bd6" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>fillProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>flag_radtransf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a6199a168b981d1621d9bf40bf098d5d5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>floorTemperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1afe017cec58645624412e86ed3e02de15" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>floorTemperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac3f061aca8dcf615f039437c9a360c53" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>floortemperature_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa01d6dc0f2a939e8c9cab6bfad0171fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a54143ea81889a2d2ae75f0ca9ad0264a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3a0ff7964797a990879dd4cd2026cfbb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getChi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getDefaultQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a9282dec57d31fc3d647a01c5183c0964" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getEmissquant</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad9df8176868391a3eb2715d90dbf6202" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getEmissquantNaxes</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getIndice</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab3008d0d3d4ddee330f1a006f4113a06" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getIndices</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7babb137c86cb15bcfe8fc58f3a7c9a2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getProperties</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getSinCos2Chi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a550c0504b7190c743db3e9406ad30613" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aafa0fe4bcab962c0c6a68298d662a9c2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>gg_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a615e9ddb8aff99d85fcac93eb54f3d7d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::DynamicalDisk3D &gt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>GYOTO_OBJECT_ACCESSORS_UNIT</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a741914bfb80367a68848e16653ce0734" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>GYOTO_OBJECT_THREAD_SAFETY</name></member>
      <member refid="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>help</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a88f58b8244ee5ec4cdade4ba38cba23b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Impact</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>incRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>interp1d</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>interpNd</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>isThreadSafe</name></member>
      <member refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>kind_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a33fcb5a0b55de44cdfb03ffbcad6062e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac66726b8c1271499fddb753e30cf9dee" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1af5482ea6b3773451ec3e2be56be821fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>mutex_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae4681fd7d64637829b877bdbddf5324d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nb_times_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a4d41cbf9b15b6b1d8c473dd0a09b8db2" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nnu_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>noredshift_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aa8e4c28edaf3eea85268593241ef3ab9" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>novel_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a2723fca241e743a9811af9a58890e947" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nphi_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade5dd2b964d2834335d72b60369bb5c6" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nr_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a6b3d6fef861323c24c238bb06628418c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nu0</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abae5c73fe159e44cd4724cf1f77eeb58" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nu0</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa479ab401ec23a582338e4a4851136af" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nu0_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad4234dfb10632b419617d5533436771a" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>nz_</name></member>
      <member refid="class_gyoto_1_1_object_1a5173d279a53bbc9850771e344d6b79b0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a5834e83ca1482a379c7ddefb1919457f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a1fbd53bedaf8d18f67b12ec0660b8aa7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a198645115afc481b270e1a5fcfafbbf8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>omegaPattern</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a886822361d74f3a132f3dac02c2feedd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>omegaPattern</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ae3ebffcf88f6fa6754bdf939622863ba" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>omegaPattern_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a45794a1d643394cf7bee3681c3e893e1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1acece8b8408b51389eab459f3b3335864" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>opacity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a185d287fb8f306e209f287c4b82c5f70" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>opacity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe278bd613fc9e835538966270f00a8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abdd90ee5a87e09e5dcf790a7f25dc288" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa42b6f92b99cc795808e6dd411fcc466" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a23bbf990853c462c6518d88223c5355b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a87563518aec780eae15a6a3bf6477b8d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a76c9e3aab695be2d28ea9abf6698c831" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>phimin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a727a38c7aa09e72a54715ba6d3692c16" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>PLindex</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a63ee9c3c8da81371db0b1d42fbd932d1" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>PLindex</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a8c84bb4a90db328ac332ce356ce63c53" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>PLindex_</name></member>
      <member refid="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>plugins_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Pmatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ad13eaed3896582b161ea9e2c95e01d4b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>properties</name></member>
      <member refid="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>property</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>refCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abe216ea1d13d97ea0b2efb9d07c137d9" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>repeat_phi_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ade48526a1cfc147be99ebac20627d56b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>repeatPhi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ac1067c4e37cb1213d00d380960ddc03e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>repeatPhi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7033957a9e6393d203f9f4649843c122" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab267c8918f10f9a9dace7479b70b7a2a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abecf9c4e93e4eb71ca1c2a96308f2d33" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1afea59313d7d115d275a07e90bd306c59" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rout</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1af60eca1b1cd7f28a3686afef96f09fb0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rout</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a0e1cf6f1bd46b2933b60988652025f4f" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>rout_</name></member>
      <member refid="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ac7d3523d0e323042abbdcbcffe16923d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>setEmissquant</name></member>
      <member refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>setParameters</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1acb0f8dcf419a4cdd9995938df2238d1f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>setVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>shadow_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a7d212bcd7d3ac4147e18683c47ca910d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1adc075b08ca5d3c0635bc97f843835f8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a32268b51ef40a85deea1fc737111318b" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>spectrumBB_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>Subcontractor_t</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a3aa39c2c1eae706157eede521d308ada" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>temperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a47ecf8d26c78c721080200a493b908f3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>temperature</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1afb11286edfc1703336e3ca5b7c5a5daf" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>temperature_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ab7e40f43bc6fc1abb0e9db3ea54ec6ae" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tinit</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7c303a1ecedd7f3c7eb140176da5e5ff" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tinit</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a5234927bc7366388175b5f5792615c26" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tinit_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ae7c7b65fb6da6784e287b12015ab98ed" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tPattern</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aab26d8e46cedf1a262050b41379aedd3" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tPattern</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab153b1767e80474322ed8b451478590b" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>tPattern_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Disk3D::"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a7c939dd165e41a2c0350fd7a59ecc147" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>transmission1date</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad63646c669da83cb5498bc664062fefe" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>velocity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a0bf5e31c9a09550120e41dd066ad8144" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>velocity_array_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ae1efba3c6f8de5860798413255410f79" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>withVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1aca09657bf31eb5a68b628688453f1010" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>withVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abadeddb80cac7e5e20faf9a92df47489" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ab45e8b9f7d05d8ce928dcade4f76ea6f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a3ce5bb46e6ddba319d5be75442073979" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa47e61115aaebddc9ff4a8f647a05aff" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a12fa7fd74df3c3f55395ff60e3fbd004" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a7888a03d69469a3142a14982ab022f0f" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zmin_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1ad91728805f12844c776f4e329ac9489e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zsym</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1aa5ba35a4a4e2c44da9df724cd724a254" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zsym</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1abfae2f3e8c822e64ff47524c0ee2a764" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>zsym_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a8b39d1747218abe28dd3835e7386ea93" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>~Disk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a30e971f401449217e9f8cef78f2d4bf3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>~DynamicalDisk3D</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1adf8758eab0634929f5c3630a54a88f07" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>~Generic</name></member>
      <member refid="class_gyoto_1_1_object_1ab6f302f93bfd1f07ae2a6a48b3c74932" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>~Object</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a4301d456d1d36ed7912d073b742c74e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::DynamicalDisk3D</scope><name>~SmartPointee</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
