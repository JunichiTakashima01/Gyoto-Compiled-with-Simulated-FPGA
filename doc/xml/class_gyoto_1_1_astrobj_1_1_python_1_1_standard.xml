<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Gyoto::Astrobj::Python::Standard</compoundname>
    <basecompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard &gt;</basecompoundref>
    <includes refid="_gyoto_python_8h" local="no">GyotoPython.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a5ae3c9719583817ce35553a578249981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Gyoto::SmartPointer&lt; Gyoto::Astrobj::Python::Standard &gt;</definition>
        <argsstring></argsstring>
        <name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Python::Standard &gt;</name>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard" kindref="compound">Gyoto::Astrobj::Python::Standard</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="669" column="8" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ae42f113847cdbc550857edda766df22c" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Astrobj::Python::Standard::pEmission_</definition>
        <argsstring></argsstring>
        <name>pEmission_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="689" column="12" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac81a5dc6360115f4ff1a223a7326a7ed" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject * Gyoto::Astrobj::Python::Standard::pIntegrateEmission_</definition>
        <argsstring></argsstring>
        <name>pIntegrateEmission_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="689" column="23" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ab8b3075f6f2e3b95f3a47d2a0dd9e1c0" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject * Gyoto::Astrobj::Python::Standard::pTransmission_</definition>
        <argsstring></argsstring>
        <name>pTransmission_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="689" column="43" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ade656f50c7c601b6d7335d79c0fd9019" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject * Gyoto::Astrobj::Python::Standard::pCall_</definition>
        <argsstring></argsstring>
        <name>pCall_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="689" column="58" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="689" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1af9ed9cfee503510ce27ec1d1d53722b5" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject * Gyoto::Astrobj::Python::Standard::pGetVelocity_</definition>
        <argsstring></argsstring>
        <name>pGetVelocity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="690" column="5" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a9023ece5d84885e781152d98bdd6f648" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject * Gyoto::Astrobj::Python::Standard::pGiveDelta_</definition>
        <argsstring></argsstring>
        <name>pGiveDelta_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="690" column="19" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ade1d12fbb6bdea332eb81d7d4edf2ea7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Python::Standard::pEmission_overloaded_</definition>
        <argsstring></argsstring>
        <name>pEmission_overloaded_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="691" column="8" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a505190983a06bffc3672958e7b24d59e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Python::Standard::pIntegrateEmission_overloaded_</definition>
        <argsstring></argsstring>
        <name>pIntegrateEmission_overloaded_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="691" column="30" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::__defaultfeatures</definition>
        <argsstring></argsstring>
        <name>__defaultfeatures</name>
        <briefdescription>
<para>Whether some virtual methods are implemented. </para>
        </briefdescription>
        <detaileddescription>
<para>The default implementations of some methods call one-another. This member is used internally to avoid infinite recursion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="215" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::refCount</definition>
        <argsstring></argsstring>
        <name>refCount</name>
        <briefdescription>
<para>Reference counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="83" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t Gyoto::SmartPointee::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
<para>A mutex. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled with libpthread </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="89" column="19" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1abcdd4dcf5f6ae46d9454c2fe7330b72a" prot="public" static="yes" mutable="no">
        <type><ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const</type>
        <definition>GYOTO_OBJECT Property const Gyoto::Astrobj::Python::Standard::properties[]</definition>
        <argsstring>[]</argsstring>
        <name>properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="694" column="42" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ab6a63773fec44776689e6d52173f28da" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Gyoto::Astrobj::Python::Standard::GYOTO_OBJECT_THREAD_SAFETY</definition>
        <argsstring></argsstring>
        <name>GYOTO_OBJECT_THREAD_SAFETY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="695" column="3" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1aa01d7fafbb99a0648d923731bdd81585" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>virtual Property const* Gyoto::Astrobj::Python::Standard::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a7cfca1aa6f8fc7b4826dae937ca98f24">getProperties</reimplements>
        <briefdescription>
<para>Get list of properties. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is declared automatically by the <ref refid="_gyoto_object_8h_1a750e7a43779f63bdb13111eaf0271203" kindref="member">GYOTO_OBJECT</ref> macro and defined automatically by the <ref refid="_gyoto_property_8h_1a1356435ea7ee0e18d07201a80e034dcc" kindref="member">GYOTO_PROPERTY_END</ref> macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="694" column="79"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37500264776864ab4a800cbe23c01d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Python::Standard::Standard</definition>
        <argsstring>()</argsstring>
        <name>Standard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="698" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a0709a55db90065994aa94a133346a818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Python::Standard::Standard</definition>
        <argsstring>(const Standard &amp;)</argsstring>
        <name>Standard</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard" kindref="compound">Standard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="699" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a2e829065a32cc8a57aed26345e051037" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Python::Standard::~Standard</definition>
        <argsstring>()</argsstring>
        <name>~Standard</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a24d8ea9fd96f72f1dfc197bc396a662d">~Standard</reimplements>
        <briefdescription>
<para>Destructor: does nothing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="700" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a88be593c3356c17769386bd231bc0724" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard" kindref="compound">Standard</ref> *</type>
        <definition>Standard* Gyoto::Astrobj::Python::Standard::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1af5e9f81e6888919dea2437639a871a3e">clone</reimplements>
        <briefdescription>
<para>Cloner. </para>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented by the various <ref refid="class_gyoto_1_1_astrobj_1_1_generic" kindref="compound">Astrobj::Generic</ref> subclasses in order to support cloning: <programlisting><codeline><highlight class="normal">SmartPointer&lt;Astrobj&gt;<sp/>deep_copy<sp/>=<sp/>original-&gt;clone();</highlight></codeline>
</programlisting></para>
<para>Cloning is necessary for multi-threading, recommended for interaction with the Yorick plug-in etc.</para>
<para>Implementing it is very straightforward, as long as the copy constructor <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" kindref="member">Generic(const Generic&amp; )</ref> has been implemented: <programlisting><codeline><highlight class="normal">MyAstrobj*<sp/>MyAstrobj::clone()<sp/>const<sp/>{<sp/>return<sp/>new<sp/>MyAstrobj(*this);<sp/>}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="701" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::emission</definition>
        <argsstring>(double nu_em, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a">emission</reimplements>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length ds<subscript>em</subscript>, in the emitter&apos;s frame. It should take self-absorption along ds<subscript>em</subscript> into account.</para>
<para>Reminder :<itemizedlist>
<listitem><para>intensity = I<subscript><nu/></subscript> [J m^-2 s^-1 ster^-1 Hz^-1];</para>
</listitem><listitem><para>invariant intensity = I<subscript><nu/></subscript>/<nu/><superscript>3</superscript>, which has the same value in any frame;</para>
</listitem><listitem><para>emission coefficient = j<subscript><nu/></subscript> [J m^-3 s^-1 ster^-1 Hz^-1] , defined by dI<subscript><nu/></subscript> = j<subscript><nu/></subscript>*ds, where ds is the distance travelled by the photon inside the object;</para>
</listitem><listitem><para>invariant emission coef = j<subscript><nu/></subscript>/<nu/><superscript>2</superscript>, which has the same value in any frame.</para>
</listitem></itemizedlist>
</para>
<para>The equation used for radiative transfer (without absorption) is:</para>
<para>d(I<subscript><nu/></subscript>/<nu/><superscript>3</superscript>)/d<lambda/> = (j<subscript><nu/></subscript>/<nu/><superscript>2</superscript>) [*]</para>
<para>where <lambda/> is the integration parameter along the null geodesic.</para>
<para>NB: Let us consider a particular observer, with <nu/> being the frequency measured by this observer, and ds being the proper distance (as measured by the observer) that the photon travels as it moves from <lambda/> to <lambda/>+d<lambda/> along its geodesic. Then it can be shown that:</para>
<para>d<lambda/> = ds/<nu/></para>
<para>This shows that Eq. [*] is homogeneous.</para>
<para>The default implementation returns 1. if optically thick and ds<subscript>em</subscript> if optically thin. It allows for a quick implementation of your object for visualization purposes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nu_em</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency at emission [Hz] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>length over which to integrate inside the object [geometrical units] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="704" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::emission</definition>
        <argsstring>(double Inu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>emission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a7e93f0090f640c12a4a295433cbdf9fd">emission</reimplements>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Specific intensity I<subscript><nu/></subscript> for several values of <nu/><subscript>em</subscript> </para>
        </briefdescription>
        <detaileddescription>
<para>Called by the default implementation for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" kindref="member">emission()</ref> computes the intensity I<subscript><nu/></subscript> emitted by the small volume of length dsem. It should take self-absorption along dsem into account.</para>
<para>Same as emission(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const looping on several values of nu_em.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of Inu[] and nu_em[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>I<subscript><nu/></subscript> or dI<subscript><nu/></subscript> [W m-2 sr-2] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="707" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, state_t const &amp;c_ph, double const c_obj[8]=NULL) const</argsstring>
        <name>integrateEmission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24">integrateEmission</reimplements>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>c_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Compute the integral of <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" kindref="member">emission()</ref> from <nu/><subscript>1</subscript> to <nu/><subscript>2</subscript>. The default implementation is a numerical integrator which works well enough and is reasonably fast if <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" kindref="member">emission()</ref> is a smooth function (i.e. no emission or absorption lines). If possible, it is wise to implement an analytical solution. It is used by processHitQuantities to compute the &quot;BinSpectrum&quot; quantity which is the most physical: it is the only quantity that can be actually measured directly by a real-life instrument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="711" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a65318a11cd3eb26258deb3dde9942056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>integrateEmission</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1aa062f923ced3946778306e4a3e1901bb">integrateEmission</reimplements>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para><int/><subscript><nu/><subscript>1</subscript></subscript><superscript><nu/><subscript>2</subscript></superscript> I<subscript><nu/></subscript> d<nu/> (or j<subscript><nu/></subscript>) </para>
        </briefdescription>
        <detaileddescription>
<para>Like double integrateEmission(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]) const for each <ref refid="namespace_gyoto_1_1_spectrometer" kindref="compound">Spectrometer</ref> channel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="714" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a490c5212486e7d85a12e052d25728a0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="718" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a606a2c0be5e66e0b12ce7c5a2f37ced6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::operator()</definition>
        <argsstring>(double const coord[4])</argsstring>
        <name>operator()</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88">operator()</reimplements>
        <param>
          <type>double const</type>
          <declname>coord</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Function defining the object interior. </para>
        </briefdescription>
        <detaileddescription>
<para>A potential, distance, or whatever function such that <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a606a2c0be5e66e0b12ce7c5a2f37ced6" kindref="member">operator()(double const coord[4])</ref> &lt; <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" kindref="member">Standard::critical_value_</ref> if and only if coord is inside the object. This function is used by the default implmenetation of <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref>. If <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref> is overloaded, it is not necessary to overload operator()(double coord[4]). The default implementation throws an error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="721" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a0e898e0fc20a05c2eec6e070ab9f02bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::getVelocity</definition>
        <argsstring>(double const pos[4], double vel[4])</argsstring>
        <name>getVelocity</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1acdc2e44eb25269f41b0710f62acfee40">getVelocity</reimplements>
        <param>
          <type>double const</type>
          <declname>pos</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Fluid velocity field. </para>
        </briefdescription>
        <detaileddescription>
<para>Fill vel with the 4-vector velocity of the fluid at 4-position pos.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>4-position at which to compute velocity; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vel</parametername>
</parameternamelist>
<parameterdescription>
<para>4-velocity at pos. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="722" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a7923f45423943f81d5daf94a1d1e7e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::giveDelta</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>giveDelta</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_standard_1aabfdcdadae2bec9691f77d8e24fa3593">giveDelta</reimplements>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Maximum <delta/> inside object. </para>
        </briefdescription>
        <detaileddescription>
<para>Gives the requested integration step <delta/><subscript>t</subscript> (in coordinate time t) between two neighbooring points along a portion of geodesic inside an astrobj; the current implementation only considers a constant delta, equal to Standard::deltaInobj()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate at which <delta/><subscript>t</subscript> is given </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="723" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a257de97dbef49bd2c6828090eea4de50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Python::Standard::module</definition>
        <argsstring>() const</argsstring>
        <name>module</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a9a814881f2741b5ccdf8ca91d1b4ebf7">module</reimplements>
        <briefdescription>
<para>Return module_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="726" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a4a94de855ab50bfb0303b8afc2f2b67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::module</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>module</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a4cb3d486914da158dafcd1e562827fed">module</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> and import the <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref> module. </para>
        </briefdescription>
        <detaileddescription>
<para>Side effects:<itemizedlist>
<listitem><para>sets <ref refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" kindref="member">inline_module_</ref> to &quot;&quot;;</para>
</listitem><listitem><para>calls <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac37e7398e73e09e1fe4543418d3ce967" kindref="member">klass</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>) if <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> is already known, so <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> can be set (or reset) after <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="727" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a54e22665edcbd570612bd2546e336139" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Python::Standard::inlineModule</definition>
        <argsstring>() const</argsstring>
        <name>inlineModule</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a79f704f70a42edf5f37d1e28ee88037a">inlineModule</reimplements>
        <briefdescription>
<para>Return inline_module_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="728" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a34ff93e25b631d25445d9c05339e955b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::inlineModule</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>inlineModule</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a3436f643ba19cb9e53d8a7e95b64f0df">inlineModule</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" kindref="member">inline_module_</ref> and import the <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref> module. </para>
        </briefdescription>
        <detaileddescription>
<para>Side effects:<itemizedlist>
<listitem><para>sets <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> to &quot;&quot;;</para>
</listitem><listitem><para>calls <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac37e7398e73e09e1fe4543418d3ce967" kindref="member">klass</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>) if <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> is already known, so <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> can be set (or reset) after <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="729" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac37e7398e73e09e1fe4543418d3ce967" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Astrobj::Python::Standard::klass</definition>
        <argsstring>() const</argsstring>
        <name>klass</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a894cfd1e8f4424b4a27b79020bc95a95">klass</reimplements>
        <briefdescription>
<para>Retrieve <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="730" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a2d173c0c05b4ad4c4642f7823e6e73e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::klass</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>klass</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1acce1645b213fe517f73483a99e7789be">klass</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> and instantiate the <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" kindref="member">pInstance_</ref>.</para>
<para>This generic implementation takes care of the common ground, but does not set &apos;this&apos; or call <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a57c225357ebfa68bed48e309aaf13ee0" kindref="member">parameters</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>). Therefore, all the derived classes should reimplement this method and at least call Python::Base::klass(c) and <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a57c225357ebfa68bed48e309aaf13ee0" kindref="member">parameters</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>). Between the two is the right moment to check that the <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref> class implements the required API and to cache PyObject* pointers to class methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="731" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a57c225357ebfa68bed48e309aaf13ee0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>virtual std::vector&lt;double&gt; Gyoto::Astrobj::Python::Standard::parameters</definition>
        <argsstring>() const</argsstring>
        <name>parameters</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1a1f83483692c3f761777f5a8a863d0a83">parameters</reimplements>
        <briefdescription>
<para>Retrieve <ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="732" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1adbd242f453a565255460e3fd555457b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::parameters</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;)</argsstring>
        <name>parameters</name>
        <reimplements refid="class_gyoto_1_1_python_1_1_base_1ad60df11071a344829956610aa8015a58">parameters</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref> and send them to <ref refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" kindref="member">pInstance_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters are sent to the class instance using the <bold>setitem</bold> method with numerical keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="733" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1aabde9153d1add6d14d271a36b2555333" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Python::Standard::criticalValue</definition>
        <argsstring>() const</argsstring>
        <name>criticalValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="734" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6d1721c09ff8a37bba1e6c1d9ce4e293" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Python::Standard::criticalValue</definition>
        <argsstring>(double)</argsstring>
        <name>criticalValue</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="735" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::set</definition>
        <argsstring>(std::string const &amp;key, Value val)</argsstring>
        <name>set</name>
        <reimplements refid="class_gyoto_1_1_object_1aba6d35c5bbf814912ed84549109e117a">set</reimplements>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="329" column="16" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="329" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::set</definition>
        <argsstring>(Property const &amp;p, Value val)</argsstring>
        <name>set</name>
        <reimplements refid="class_gyoto_1_1_object_1a58c4ecdaae1873dc6912e164b61826e0">set</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="341" column="16" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="341" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::set</definition>
        <argsstring>(Property const &amp;p, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <reimplements refid="class_gyoto_1_1_object_1aa063e0df7c2e4b22207a784c76c6681f">set</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="352" column="16" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="352" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::set</definition>
        <argsstring>(std::string const &amp;pname, Value val, std::string const &amp;unit)</argsstring>
        <name>set</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> (expressed in unit) of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="246" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::get</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>get</name>
        <reimplements refid="class_gyoto_1_1_object_1ad61a061d2073c841e9911be0395d4494">get</reimplements>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="366" column="17" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="366" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>Value Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::get</definition>
        <argsstring>(Property const &amp;p, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <reimplements refid="class_gyoto_1_1_object_1ad4189c2c103030e9d91ee0f29ebcf13d">get</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="375" column="9" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="375" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>Value Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::get</definition>
        <argsstring>(Property const &amp;p) const</argsstring>
        <name>get</name>
        <reimplements refid="class_gyoto_1_1_object_1a8232112e660216a61caa15fab27b889f">get</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="384" column="9" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="384" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Object::get</definition>
        <argsstring>(std::string const &amp;pname, std::string const &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>pname</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref> of a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>, converted to unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::setParameter</definition>
        <argsstring>(std::string name, std::string content, std::string unit)</argsstring>
        <name>setParameter</name>
        <reimplements refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b">setParameter</reimplements>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="394" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="394" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::setParameter</definition>
        <argsstring>(Gyoto::Property const &amp;p, std::string const &amp;name, std::string const &amp;content, std::string const &amp;unit)</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a13a8a59bd3738f5739db0550dbb42003">setParameter</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>content</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set parameter by <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (and name) </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used when parsing an XML description, if <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> (<emphasis>p</emphasis>) of this <emphasis>name</emphasis> is found (i.e. either <emphasis>p.name</emphasis> or <emphasis>p.name_false</emphasis> is equal to <emphasis>name</emphasis>). Implementation should fall-back on calling the direct&apos;s parent implementation:</para>
<para><programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::setParameter(Gyoto::Property<sp/>const<sp/>&amp;p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>content,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>unit)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>doSomething(content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::setParameter(p,<sp/>name,<sp/>content,<sp/>unit);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> that matches <emphasis>name</emphasis> (<emphasis>p.name</emphasis> == <emphasis>name</emphasis> or <emphasis>p.name_false</emphasis> == <emphasis>name</emphasis>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>XML name of the parameter (XML entity) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string representation of the unit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="426" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::fillElement</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp) const</argsstring>
        <name>fillElement</name>
        <reimplements refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3">fillElement</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="409" column="16" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="409" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard  &gt;::setParameters</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp)</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a1872b827525ccb1fdedb614474992a6a">setParameters</reimplements>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="425" column="8" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="425" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>(double val)</argsstring>
        <name>safetyValue</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="128" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Standard::safetyValue</definition>
        <argsstring>() const</argsstring>
        <name>safetyValue</name>
        <briefdescription>
<para>Get <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" kindref="member">Standard::safety_value_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="129" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>() const</argsstring>
        <name>deltaInObj</name>
        <briefdescription>
<para>Get Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
<para>Get the constant integration step inside the astrobj</para>
<para><simplesect kind="return"><para>delta_inobj_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Standard::deltaInObj</definition>
        <argsstring>(double val)</argsstring>
        <name>deltaInObj</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set Generic::delta_inobj_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="137" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Astrobj::Standard::Impact</definition>
        <argsstring>(Gyoto::Photon *ph, size_t index, Astrobj::Properties *data=NULL)</argsstring>
        <name>Impact</name>
        <reimplements refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14">Impact</reimplements>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_inflate_star_1a3830c81bb6668a3a84bf1c8c7d0dc0c1">Impact</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1ab848de73dcbef4425a9b2930613879d3">Impact</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1a670d1a9f526c7efc17b376dbcb93b7aa">Impact</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Does a photon at these coordinates impact the object? </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref> checks whether a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> impacts the object between two integration steps of the photon&apos;s trajectory (those two steps are photon-&gt;getCoord(index, coord1) and photon-&gt;getCoord(index+1, coord2)). Impact returns 1 if the photon impacts the object between these two steps, else 0. In many cases of geometrically thick obects, the implementation <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Astrobj::Standard::Impact()</ref> will be fine.</para>
<para>Impact will call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">Generic::processHitQuantities()</ref> (which is virtual and may be re-implemented) to compute observable properties on demand: if the data pointer is non-NULL, the object will look in it for pointers to properties which apply to its kind. If a pointer to a property known to this object is present, then the property is computed and store at the pointed-to address. For instance, all objects know the &quot;intensity&quot; property. If data-&gt;intensity != NULL, the instensity is computed and stored in *data-&gt;intensity.</para>
<para>If data is non-NULL and only in this case, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" kindref="member">processHitQuantities()</ref> will also call ph-&gt;transmit() to update the transmissions of the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> (see <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit(size_t, double)</ref>). This must not be done if data is NULL (see <ref refid="class_gyoto_1_1_astrobj_1_1_complex_1a1ec0f21fbe89cfdcc1dda5851d0ab209" kindref="member">Astrobj::Complex::Impact()</ref> for an explanation).</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" kindref="member">Impact()</ref> may not extend the ph <ref refid="class_gyoto_1_1_worldline" kindref="compound">Worldline</ref>. The only two dates that are guaranteed to be defined are at indices index and index+1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Gyoto::Photon</ref> aimed at the object; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the last photon step; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a structure to hold the observables at impact.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if impact, 0 if not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="142" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Functor::Double_constDoubleArray::operator()</definition>
        <argsstring>(double const data[])=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_1a312fb0f3764200c1037564f7fc982e0a">operator()</reimplementedby>
        <param>
          <type>double const</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The actual function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoFunctors.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        <definition>virtual SmartPointer&lt;Metric::Generic&gt; Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>() const</argsstring>
        <name>metric</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_1ae0ec76caf0f970442e1825016b804b9e">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a2f5f60d3f32c175484ddb48f16a09be9">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a9a4ee32519b8425863a0360cb628d9ac">metric</reimplementedby>
        <briefdescription>
<para>Get the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="299" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::metric</definition>
        <argsstring>(SmartPointer&lt; Metric::Generic &gt;)</argsstring>
        <name>metric</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_deformed_torus_1a73465b4ec54963a99ecf8798025b37ff">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_oscil_torus_1a55a5cb4c747ab70fffcacc25a77dce6d">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1ab752daf92833f9ec6134e6c50ed2c607">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a7a3cb5725a6a6b34601bff67a7d17341">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_directional_disk_1acb91def6848a6e7ad1f3c0c7510f8893">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1a33fcb5a0b55de44cdfb03ffbcad6062e">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1ac7be36a4010d9baa10047d8d50862cb4">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1af0d77ce1db96a3cba45fe12c06c10081">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_trace_1a05ceb0db36380a273c987ac5288ef6b7">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_1acbd8e050255b27e17296b91d9e501955">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1a37117e90c2c437d6b66d888374d83b84">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_jet_1a5854e65f66e612da62a1b620cc383069">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1af38f1bd9626ec8c18647fc76fad8bafc">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_spherical_accretion_1afdcc4ad5350f57175c9f891fe9b7a655">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a0fac2855eeaf27c08681b767c7ba592a">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1aa5c7bcde1b3228df50b80b1d9d96df5d">metric</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_xillver_reflection_1a1900b388d8580c94f44022515488a775">metric</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Metric::Generic</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Set the <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" kindref="member">gg_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="304" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>()</argsstring>
        <name>rMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1a59fde26fc4e4542108e714cc5e2cadac">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_fixed_star_1aea16e485a51f46b322b7e27bd8f95ebf">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a7a8d4d8dc49f8d2a19cddba2e12a04e1">rMax</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1af4dfb2b79fe0879c0871ea9828d79f19">rMax</reimplementedby>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Get maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para>Child classes may use the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> member to cache this value, if its current value is DBL_MAX.</para>
<para>It can also be set using <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref>.</para>
<para><simplesect kind="return"><para>rmax_ in geometrical units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="317" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>() const</argsstring>
        <name>rMax</name>
        <briefdescription>
<para>Get maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="318" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> and convert result to unit.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double rmax converted to unit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="326" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(std::string const &amp;unit) const</argsstring>
        <name>rMax</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Get rmax_ is specified unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="327" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Set maximal distance from center of coordinate system at which a <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> may hit the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> in geometrical units. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="342" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::rMax</definition>
        <argsstring>(double val, std::string const &amp;unit)</argsstring>
        <name>rMax</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Set maximal distance from center of coordinate system. </para>
        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" kindref="member">Generic::rMax(double val)</ref> after converting val from unit to geometrical units.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> expressed in unit &quot;unit&quot;; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>string... </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="351" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::deltaMax</definition>
        <argsstring>(double coord[8])</argsstring>
        <name>deltaMax</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_complex_1ac44d8265c9b1206c9b0db08661700bd8">deltaMax</reimplementedby>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Get max step constraint for adaptive integration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">coord</parametername>
</parameternamelist>
<parameterdescription>
<para>position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max step to find this object reliably </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="334" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Astrobj::Generic::GYOTO_OBJECT_ACCESSORS_UNIT</definition>
        <argsstring>(deltaMaxInsideRMax)</argsstring>
        <name>GYOTO_OBJECT_ACCESSORS_UNIT</name>
        <param>
          <type>deltaMaxInsideRMax</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="353" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>(bool flag)</argsstring>
        <name>opticallyThin</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Set whether the object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>Set flag indicating that radiative transfer should be integrated, i.e. the object is to be considered optically thin. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>1 if optically thin, 0 if optically thick. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="360" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::opticallyThin</definition>
        <argsstring>() const</argsstring>
        <name>opticallyThin</name>
        <briefdescription>
<para>Query whether object is optically thin. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" kindref="member">opticallyThin(bool flag)</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="365" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>(bool flag)</argsstring>
        <name>showshadow</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="368" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::showshadow</definition>
        <argsstring>() const</argsstring>
        <name>showshadow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="369" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>(bool flag)</argsstring>
        <name>redshift</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="371" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::redshift</definition>
        <argsstring>() const</argsstring>
        <name>redshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="372" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref></type>
        <definition>virtual Gyoto::Quantity_t Gyoto::Astrobj::Generic::getDefaultQuantities</definition>
        <argsstring>()</argsstring>
        <name>getDefaultQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a3205ac156dea7d83682d3a890e9604ec">getDefaultQuantities</reimplementedby>
        <briefdescription>
<para>Which quantities to compute if know was requested. </para>
        </briefdescription>
        <detaileddescription>
<para>Return a <ref refid="namespace_gyoto_1a009cbd7f025ce417907a5344a15a1463" kindref="member">Gyoto::Quantity_t</ref> suitable as input to <ref refid="class_gyoto_1_1_scenery_1acaed08cd4fa2113101d26436cd96aebd" kindref="member">Gyoto::Scenery::setRequestedQuantities()</ref> to set de default quantities to compute for this object. The default of these defaults GYOTO_QUANTITY_INTENSITY. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="380" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, state_t const &amp;coord_ph_hit, double const *coord_obj_hit, double dt, Astrobj::Properties *data) const</argsstring>
        <name>processHitQuantities</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a639da6614e85224814af4f2f6622e9ab">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_bolometric_1a6d49fda70fa23c3d8d9ed4386793a287">processHitQuantities</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thin_disk_profile_1a339f1cd765cd173c34c85552e7e4c415">processHitQuantities</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Fills <ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>processHitQuantities fills the requested data in Impact. To use it, you need to call it in the <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a73a731c15af0c247fc4c46ca934b1b14" kindref="member">Impact()</ref> method for your object in case of hit. It will fill Redshift, Intensity, <ref refid="namespace_gyoto_1_1_spectrum" kindref="compound">Spectrum</ref>, BinSpectrum and update the <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref>&apos;s transmission by calling <ref refid="class_gyoto_1_1_photon_1a90545a8f03ab57524021baf0e19a61d3" kindref="member">Photon::transmit()</ref>, only if data==NULL.</para>
<para>You can overload it for your <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>. The generic implementation calls <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a93d130767671c25823d5ec3fd477e28a" kindref="member">emission()</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a320317a0c347ab4317152b93952dab24" kindref="member">integrateEmission()</ref> and <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> below. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="466" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::processHitQuantities</definition>
        <argsstring>(Photon *ph, double *coord_ph_hit, double *coord_obj_hit, double dt, Astrobj::Properties *data) const =delete</argsstring>
        <name>processHitQuantities</name>
        <param>
          <type><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> *</type>
          <declname>ph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_ph_hit</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>coord_obj_hit</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_astrobj_1_1_properties" kindref="compound">Astrobj::Properties</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="469" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double nu_em, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="525" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::emission</definition>
        <argsstring>(double Inu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>emission</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="554" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double const nu_em[], size_t nbnu, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]=NULL) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_blob_1aa9e772639c3b505c12f17912a2a8aea9">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_jet_1a3a5c90fc26a2980a012fe44074b9f272">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_plasmoid_1a528ae8edfc00f55b38330373845b9464">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1aff09a9faa13d0be2428a97325740e87b">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_spherical_accretion_1a2d502412d04b57a692afeed26eebd8b5">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1ad3f86e9cce85b549341e08c16a1d8275">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_torus_1a87cafd2c7dbf6fe04615e9d2f0648b2c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1afd3ce020bfe47b977bea3e514243e856">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_flared_disk_synchrotron_1a165e77626a58268751115749c16e694a">radiativeQ</reimplementedby>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double const</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>emission and transmission together </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="561" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double Inu[], double Taunu[], double nu_em[], size_t nbnu, double dsem, double coord_ph[8], double coord_obj[8]=NULL) const =delete</argsstring>
        <name>radiativeQ</name>
        <param>
          <type>double</type>
          <declname>Inu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Taunu</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>nu_em</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="565" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::radiativeQ</definition>
        <argsstring>(double *Inu, double *Qnu, double *Unu, double *Vnu, Eigen::Matrix4d *Onu, double const *nuem, size_t nbnu, double dsem, state_t const &amp;cph, double const *co) const</argsstring>
        <name>radiativeQ</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1ac70d4cc58245764c6a76026755dac088">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_page_thorne_disk_1a15a271cca8f57aab8a920720e78bc8e2">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a327a6e5590cdf412e5cfef2f9372260c">radiativeQ</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_thick_disk_1a099bdffa842fea620d36006f680052e3">radiativeQ</reimplementedby>
        <param>
          <type>double *</type>
          <declname>Inu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Qnu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Unu</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Vnu</declname>
        </param>
        <param>
          <type>Eigen::Matrix4d *</type>
          <declname>Onu</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Compute the increment of Stokes parameters and transmission matrix. Polarised version of RadiaveQ. </para>
        </briefdescription>
        <detaileddescription>
<para>First function to be called for radiative quantities. If exist, i.e. implemented in an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, return the Stokes parameters emitted by the small volume of length dsem.</para>
<para>Warning :<itemizedlist>
<listitem><para>The basis used to determine the Stokes coefficients is different from the observer parallel transported polarisation basis. One should use getChi function to compute the angle between these two basis.</para>
</listitem><listitem><para>The non polarized case must also be implemented in this function to avoid error.</para>
</listitem></itemizedlist>
</para>
<para>See exemple in SimplePolarStar.C.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Inu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of intensity (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter Q (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Unu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter U (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vnu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output increment of Stokes parameter V (must be set to a previously allocated array of doubles) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Onu[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Output transmission (Eigen) matrix (must be set to a previously allocated array of Matrix4d) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nu_em[nbnu]</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequencies at emission </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbnu</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of nu_em[], Inu[], Qnu[], Unu[], Vnu[], and Onu[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>Length over which to integrate inside the object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>Emitter coordinate at current photon position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Increment of the Stokes parameters (I,Q,U,V) and local Transmission matrix (O). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="602" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double nu1, double nu2, double dsem, double c_ph[8], double c_obj[8]=NULL) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double</type>
          <declname>nu1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_ph</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>double</type>
          <declname>c_obj</declname>
          <array>[8]</array>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="620" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Astrobj::Generic::integrateEmission</definition>
        <argsstring>(double *I, double const *boundaries, size_t const *chaninds, size_t nbnu, double dsem, double *cph, double *co) const =delete</argsstring>
        <name>integrateEmission</name>
        <param>
          <type>double *</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double const *</type>
          <declname>boundaries</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref> const *</type>
          <declname>chaninds</declname>
        </param>
        <param>
          <type><ref refid="_gyoto_config_8h_1a43b4547e12226fef871eed8afe191ad7" kindref="member">size_t</ref></type>
          <declname>nbnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>co</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="632" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord_ph, double const coord_obj[8]) const</argsstring>
        <name>transmission</name>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1ad4fc9a40ef19f5af4277853b96a45f3e">transmission</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk3_d_1ac07397b47b24184dcc353b25329d30cd">transmission</reimplementedby>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord_ph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>coord_obj</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Transmission: exp( <alpha/><subscript><nu/></subscript> * ds<subscript>em</subscript> ) </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" kindref="member">transmission()</ref> computes the transmission of this fluid element or 0 if optically thick. The default implementation returns 1. (no attenuation) if optically thin, 0. if optically thick.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nuem</parametername>
</parameternamelist>
<parameterdescription>
<para>frequency in the fluid&apos;s frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="646" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, state_t const &amp;coord) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="648" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Gyoto::Astrobj::Generic::transmission</definition>
        <argsstring>(double nuem, double dsem, double coord[8]) const =delete</argsstring>
        <name>transmission</name>
        <param>
          <type>double</type>
          <declname>nuem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord</declname>
          <array>[8]</array>
        </param>
        <briefdescription>
<para>Obsolete, update your code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="649" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" kindref="member">Omatrix()</ref> computes the exponential of the Mueller matrix which contains the absorption and Faraday coefficients and is used in the polarized radiative transfer equation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Onu</parametername>
</parameternamelist>
<parameterdescription>
<para>output matrix (must be allocated previously) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alphanu[4]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 4 absorption coefficients in the Stokes basis (I,Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnu[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array containing the 3 Faraday coefficients in the Stokes basis (Q,U,V) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Chi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle of rotation between the parallel transported observer polarization basis and the Stokes basis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsem</parametername>
</parameternamelist>
<parameterdescription>
<para>geometrical length in geometrical units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="663" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="664" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphanu[4], double rnu[3], double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphanu</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double</type>
          <declname>rnu</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="666" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Omatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Omatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="667" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Matrix4d</type>
        <definition>Eigen::Matrix4d Gyoto::Astrobj::Generic::Pmatrix</definition>
        <argsstring>(double alphaInu, double alphaQnu, double alphaUnu, double alphaVnu, double rQnu, double rUnu, double rVnu, double sin2Chi, double cos2Chi, double dsem) const</argsstring>
        <name>Pmatrix</name>
        <param>
          <type>double</type>
          <declname>alphaInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dsem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="670" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double sin2Chi, double cos2Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cos2Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply the rotation matrix with angle Chi to the emission Stokes vector constructed in the fonction from the individual coefficients </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="677" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Vector4d</type>
        <definition>Eigen::Vector4d Gyoto::Astrobj::Generic::rotateJs</definition>
        <argsstring>(double jInu, double jQnu, double jUnu, double jVnu, double Chi) const</argsstring>
        <name>rotateJs</name>
        <param>
          <type>double</type>
          <declname>jInu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jQnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jUnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>jVnu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Chi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="678" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::getChi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], bool elec=false) const</argsstring>
        <name>getChi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get Chi angle. Return the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="689" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::getSinCos2Chi</definition>
        <argsstring>(double const fourvect[4], state_t const &amp;cph, double const vel[4], double *sin2Chi, double *cos2Chi, bool elec=false) const</argsstring>
        <name>getSinCos2Chi</name>
        <param>
          <type>double const</type>
          <declname>fourvect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>vel</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>sin2Chi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>cos2Chi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>elec</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cosinus and sinus of 2*Chi angle. Chi being the angle between the parallel transported observer polarization basis (Ephi,Etheta) and the Stokes basis in the rest frame of the emitter defined by the 4-vector magnetic/electric field.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvect</parametername>
</parameternamelist>
<parameterdescription>
<para>4-vector magnetic/electric field depending on elec (false/true) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> coordinate, must contain the Ephi and Etheta vectors i.e. size(cph)==16 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vel</parametername>
</parameternamelist>
<parameterdescription>
<para>Fluid velocity at the photon coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="699" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph) const</argsstring>
        <name>computeB4vect</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the magnetic field 4-vector at a given position and a given configuration</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>B4vect</parametername>
</parameternamelist>
<parameterdescription>
<para>the output 4-vector magnetic field </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>magneticConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>string which determine the wanted configuration (&apos;Radial&apos;, &apos;Azimuthal&apos;, &apos;Vertical&apos;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>co</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the object which also contain its velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cph</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinate of the photon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="708" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Astrobj::Generic::computeB4vect_ipole</definition>
        <argsstring>(double B4vect[4], std::string const magneticConfig, double const co[8], state_t const &amp;cph, double spin) const</argsstring>
        <name>computeB4vect_ipole</name>
        <param>
          <type>double</type>
          <declname>B4vect</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>std::string const</type>
          <declname>magneticConfig</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>co</declname>
          <array>[8]</array>
        </param>
        <param>
          <type>state_t const &amp;</type>
          <declname>cph</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="710" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X, int *const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>int *const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array containing the range of all the axes (for exemple : radius, \theta, \varphi) at which the array is knwon. Should be built as a pointer of pointers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the length of each axes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="721" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpolate</definition>
        <argsstring>(int const N, double *const array, double *const Xq, double **const X_params, std::string const *cond_limits) const</argsstring>
        <name>interpolate</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>array</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X_params</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>N-dimensional linear interpolation function</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>array that should be interpolated. This array has to be a 1D array with the first dimension evolving the slowest </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[N][3]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contain the minimum value, the maximum value and the length of each axes. The axes will be assumed to be linearly spaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limits</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="731" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::SmartPointee::incRefCount</definition>
        <argsstring>()</argsstring>
        <name>incRefCount</name>
        <briefdescription>
<para>Increment the reference counter. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="96" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::decRefCount</definition>
        <argsstring>()</argsstring>
        <name>decRefCount</name>
        <briefdescription>
<para>Decrement the reference counter and return current value. Warning: Don&apos;t mess with the counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="97" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::SmartPointee::getRefCount</definition>
        <argsstring>()</argsstring>
        <name>getRefCount</name>
        <briefdescription>
<para>Get the current number of references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="98" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Object::isThreadSafe</definition>
        <argsstring>() const</argsstring>
        <name>isThreadSafe</name>
        <briefdescription>
<para>Whether this class is thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Return True if this object is thread-safe, i.e. if an instance and its clone can be used in parallel threads (in the context of Scenery::raytrace()). Known objects which are not thread-safe include Lorene metrics and everything from the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in.</para>
<para>The default implementation considers that the class itself is thread safe and recurses into the declared properties to check whether they are safe too. Classes that abide to the Object/Property paradigm and are themselves thread-safe have nothing special to do.</para>
<para>Objects that clone children in their copy constructor that are not declared as properties must take these children into account.</para>
<para>Classes that are never thread-safe must declare it. It acn be easily done using GYOTO_OBJECT_THREAD_SAFETY in the class declaration and GYOTO_PROPERTY_THREAD_UNSAFE in the class definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="197" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const  *</type>
        <definition>Property const* Gyoto::Object::property</definition>
        <argsstring>(std::string const pname) const</argsstring>
        <name>property</name>
        <param>
          <type>std::string const</type>
          <declname>pname</declname>
        </param>
        <briefdescription>
<para>Find property by name. </para>
        </briefdescription>
        <detaileddescription>
<para>Look into the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> list for a <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> whose <emphasis>name</emphasis> (or <emphasis>name_false</emphasis>, for a boolean <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref>) is <emphasis>pname</emphasis>. Return a const pointer to the first such property found, or NULL if none is found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="267" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::fillProperty</definition>
        <argsstring>(Gyoto::FactoryMessenger *fmp, Property const &amp;p) const</argsstring>
        <name>fillProperty</name>
        <reimplementedby refid="class_gyoto_1_1_scenery_1a9bc2f2025deb97a71f21f2be5c0f5022">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_directional_disk_1a42a558bc44010a73986909dd9a2fdd41">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_disk3_d_1a160d18feeb44b24f396c1001abec7bd6">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_dynamical_disk_1abbc14f98531888e96547665a8a6a20ca">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_equatorial_hot_spot_1a5acba2e137e389070bb5f7c71ea31ed5">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_neutron_star_model_atmosphere_1a65604453c31dac828adeaeb7c35ca23d">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_pattern_disk_1acc548bda88d62932275e8d0fcd630ca9">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_polish_doughnut_1acbe2c229f702905204ea0d822b94e17c">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_shift_1a234a2d08bb7918e1bc62e4a710a4df77">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_star_1a152074fdddb29950936d3193d3aea55d">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af5ccaceb5c188a7a0ea11791885919bc">fillProperty</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_xillver_reflection_1a9e8bc6375f3c981042b74d99ee7adf91">fillProperty</reimplementedby>
        <param>
          <type><ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">Gyoto::FactoryMessenger</ref> *</type>
          <declname>fmp</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Output a single <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> to XML. </para>
        </briefdescription>
        <detaileddescription>
<para>The base implementation decides what to do based on the <emphasis>p.type</emphasis>. The format matches how <ref refid="class_gyoto_1_1_object_1aa0a8b119e7aa95b21be081f8c97e1626" kindref="member">setParameters()</ref> an <ref refid="class_gyoto_1_1_object_1a45969ac469cf6979037229c2741b226b" kindref="member">setParameter()</ref> would interpret the XML descition.</para>
<para>Overriding this method should be avoided, but makes sense in some cases (for instance <ref refid="class_gyoto_1_1_screen_1a50f80add154ec088fc9509ba22ef0032" kindref="member">Screen::fillProperty()</ref> selects a different unit for <emphasis>Distance</emphasis> based on its magnitude, so that stellar sizes are expressed in solar radii while smaller sizes can be expressed in meters and larger sizes in parsecs).</para>
<para>Overriding implementation should fall-back on calling the implementation in the direct parent class: <programlisting><codeline><highlight class="normal">class<sp/>A:<sp/>public<sp/>Object<sp/>{};</highlight></codeline>
<codeline><highlight class="normal">class<sp/>B:<sp/>public<sp/>A<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>using<sp/>B::setParameter;</highlight></codeline>
<codeline><highlight class="normal"><sp/>virtual<sp/>void<sp/>fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">void<sp/>B::fillProperty(Gyoto::FactoryMessenger<sp/>*fmp,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Property<sp/>const<sp/>&amp;p)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(name==&quot;Duff&quot;)<sp/>fmp-&gt;doSomething();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>A::fillProperty(fmp,<sp/>p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="298" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::describeProperty</definition>
        <argsstring>(Gyoto::Property const &amp;p) const</argsstring>
        <name>describeProperty</name>
        <param>
          <type><ref refid="class_gyoto_1_1_property" kindref="compound">Gyoto::Property</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Format desrciption for a property. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string containing the name(s) and type of the property, as well as whether it supports unit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gyoto::Object::help</definition>
        <argsstring>() const</argsstring>
        <name>help</name>
        <briefdescription>
<para>Print (to stdout) some help on this class. </para>
        </briefdescription>
        <detaileddescription>
<para>Describe all properties that this instance supports. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="444" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Object::kind</definition>
        <argsstring>() const</argsstring>
        <name>kind</name>
        <reimplementedby refid="class_gyoto_1_1_spectrometer_1_1_uniform_1af6c1082ac163e833fff9e934b417b194">kind</reimplementedby>
        <briefdescription>
<para>Get kind_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="456" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1af62c327a27345056f6012b771fa970b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Python::Base::hasPythonProperty</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>hasPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="305" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a888b32520799d6f002536e153060b6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::setPythonProperty</definition>
        <argsstring>(std::string const &amp;key, Value val)</argsstring>
        <name>setPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="306" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1abea99a3924aca45cd00c543fab7bd155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Python::Base::getPythonProperty</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>getPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="307" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a02a869483c7dd153661b7867c892f505" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Python::Base::pythonPropertyType</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>pythonPropertyType</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="308" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::critical_value_</definition>
        <argsstring></argsstring>
        <name>critical_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="94" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::safety_value_</definition>
        <argsstring></argsstring>
        <name>safety_value_</name>
        <briefdescription>
<para>See <ref refid="class_gyoto_1_1_astrobj_1_1_standard_1a764b9a17fee369e61349acd3aa4ddd88" kindref="member">operator()(double const coord[4])</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="95" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Standard::delta_inobj_</definition>
        <argsstring></argsstring>
        <name>delta_inobj_</name>
        <briefdescription>
<para>Constant value of the integration step inside object, in units of the compact object&apos;s mass M. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" line="96" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoStandardAstrobj.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_metric_1_1_generic" kindref="compound">Gyoto::Metric::Generic</ref> &gt;</type>
        <definition>SmartPointer&lt;Gyoto::Metric::Generic&gt; Gyoto::Astrobj::Generic::gg_</definition>
        <argsstring></argsstring>
        <name>gg_</name>
        <briefdescription>
<para>The <ref refid="namespace_gyoto_1_1_metric" kindref="compound">Metric</ref> in this end of the Universe. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="222" column="16" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::rmax_</definition>
        <argsstring></argsstring>
        <name>rmax_</name>
        <briefdescription>
<para>Maximum distance to the center of the coordinate system [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum distance from the center of the coordinate system at which a photon may hit the object. Child classes may compute a decent value for <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> at any time if <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is DBL_MAX. External classes (Photons in particular) must use <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" kindref="member">rMax()</ref> to access this information.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="234" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::deltamaxinsidermax_</definition>
        <argsstring></argsstring>
        <name>deltamaxinsidermax_</name>
        <briefdescription>
<para>Maximum <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integration step inside <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref> [geometrical units]. </para>
        </briefdescription>
        <detaileddescription>
<para>Maximum step for <ref refid="class_gyoto_1_1_photon" kindref="compound">Photon</ref> integation when inside the sphere of radius <ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" kindref="member">rmax_</ref>.</para>
<para><ref refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" kindref="member">deltamaxinsidermax_</ref> is in geometrical units. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="242" column="10" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Gyoto::Astrobj::Generic::flag_radtransf_</definition>
        <argsstring></argsstring>
        <name>flag_radtransf_</name>
        <briefdescription>
<para>1 if radiative transfer inside <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, else 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="244" column="8" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::shadow_</definition>
        <argsstring></argsstring>
        <name>shadow_</name>
        <briefdescription>
<para>1 to highlight the shadow region in the image </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="246" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::noredshift_</definition>
        <argsstring></argsstring>
        <name>noredshift_</name>
        <briefdescription>
<para>1 to impose redshift factor g = 1 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="247" column="7" bodyfile="/home/junichi/Gyoto/include/GyotoAstrobj.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Object::kind_</definition>
        <argsstring></argsstring>
        <name>kind_</name>
        <briefdescription>
<para>The &quot;kind&quot; that is output in the XML entity. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>kind=&quot;kind_&quot;<sp/>...&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="162" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; Gyoto::Object::plugins_</definition>
        <argsstring></argsstring>
        <name>plugins_</name>
        <briefdescription>
<para>The plug-ins that needs to be loaded to access this instance&apos;s class. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g. for an <ref refid="namespace_gyoto_1_1_astrobj" kindref="compound">Astrobj</ref>, <ref refid="class_gyoto_1_1_object_1a0ffc3f84b4c2372d639eb848605fb1f3" kindref="member">fillElement()</ref> will ensure <programlisting><codeline><highlight class="normal">&lt;Astrobj<sp/>...<sp/>plugin=&quot;plugins_&quot;&gt;...&lt;/Astrobj&gt;</highlight></codeline>
</programlisting> is written. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="172" column="15" bodyfile="/home/junichi/Gyoto/include/GyotoObject.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::module_</definition>
        <argsstring></argsstring>
        <name>module_</name>
        <briefdescription>
<para>Name of the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> module that holds the class. </para>
        </briefdescription>
        <detaileddescription>
<para>For instance, if the class is implemented in toto.py, the module name is &quot;toto&quot;. <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> name: Module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="200" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::inline_module_</definition>
        <argsstring></argsstring>
        <name>inline_module_</name>
        <briefdescription>
<para><ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> source code for module that holds the class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="206" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::class_</definition>
        <argsstring></argsstring>
        <name>class_</name>
        <briefdescription>
<para>Name of the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class that we want to expose. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> name: Class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="213" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Python::Base::parameters_</definition>
        <argsstring></argsstring>
        <name>parameters_</name>
        <briefdescription>
<para>Parameters that this class needs. </para>
        </briefdescription>
        <detaileddescription>
<para>A list of parameters (doubles) can be passed in the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> Parameters. They will be sent to the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> instance using <bold>setitem</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="222" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1af652cb4b7a2f473e9a86a4bf1e47e973" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pModule_</definition>
        <argsstring></argsstring>
        <name>pModule_</name>
        <briefdescription>
<para>Reference to the python module once it has been loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="227" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pInstance_</definition>
        <argsstring></argsstring>
        <name>pInstance_</name>
        <briefdescription>
<para>Reference to the python instance once it has been instantiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="232" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a7e9289775df2ec09ca222ba290cf35c7" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pProperties_</definition>
        <argsstring></argsstring>
        <name>pProperties_</name>
        <briefdescription>
<para>Reference to the properties member. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="237" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a8f1ddee73aaa84dcdc1b1d2b0b3d8f7c" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pSet_</definition>
        <argsstring></argsstring>
        <name>pSet_</name>
        <briefdescription>
<para>Reference to the (optional) Set method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="242" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a758de1b2cdd3d9cd55506b5c599290f1" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pGet_</definition>
        <argsstring></argsstring>
        <name>pGet_</name>
        <briefdescription>
<para>Reference to the (optional) Get method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="247" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interp1d</definition>
        <argsstring>(double const x, double const y0, double const y1) const</argsstring>
        <name>interp1d</name>
        <param>
          <type>double const</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>y1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the 1D linear interpolation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x query position along the linear function [0,1]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y0</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the low position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the array to be interpolated at the high position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="741" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Gyoto::Astrobj::Generic::interpNd</definition>
        <argsstring>(int const N, double *const Xq, double **const X, double *const Y, std::string const *cond_limit) const</argsstring>
        <name>interpNd</name>
        <param>
          <type>int const</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Xq</declname>
        </param>
        <param>
          <type>double **const</type>
          <declname>X</declname>
        </param>
        <param>
          <type>double *const</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>std::string const *</type>
          <declname>cond_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function which returns the N- dimension interpolation on an N-dimensional cube</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>number of dimensions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query position at which the interpolation should be done. 1D array with N elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X[2**N][N]</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array that contains for the 2**N points of the N dimensional cube the associated axes values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Y[2**N]</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array that contain the value of the array to be interpolated at each points of the N-dimensional cube. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>1D array of strings that set the boundary conditions that will be applied to each axes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="751" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Gyoto::Astrobj::Generic::getIndice</definition>
        <argsstring>(double &amp;xq, std::string const cond_limit, double const X_params[3], double *const X=NULL) const</argsstring>
        <name>getIndice</name>
        <param>
          <type>double &amp;</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>std::string const</type>
          <declname>cond_limit</declname>
        </param>
        <param>
          <type>double const</type>
          <declname>X_params</declname>
          <array>[3]</array>
        </param>
        <param>
          <type>double *const</type>
          <declname>X</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function that return the closest indice of the query value on an axis.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xq</parametername>
</parameternamelist>
<parameterdescription>
<para>query value on the axis. Could be modified in case of periodic boundary condition. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cond_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary conditions that will be applied to the axis. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X_params[3]</parametername>
</parameternamelist>
<parameterdescription>
<para>array which contain the minimum value, the maximum value and the length of the axe. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>X</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) array which contains the value of the axis points. Usefull for not linearly spaced axis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoAstrobj.h" line="760" column="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" static="no">
        <type><ref refid="class_gyoto_1_1_smart_pointer" kindref="compound">Gyoto::SmartPointer</ref>&lt; <ref refid="class_gyoto_1_1_smart_pointee" kindref="compound">Gyoto::SmartPointee</ref> &gt;</type>
        <definition>typedef Gyoto::SmartPointer&lt;Gyoto::SmartPointee&gt; Gyoto::SmartPointee::Subcontractor_t(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</definition>
        <argsstring>(Gyoto::FactoryMessenger *, std::vector&lt; std::string &gt; const &amp;)</argsstring>
        <name>Subcontractor_t</name>
        <briefdescription>
<para>A subcontractor builds an object upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Various classes need to provide a subcontractor to be able to instantiate themselves upon order from the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref>. A subcontractor is a function (often a static member function) which accepts a pointer to a <ref refid="class_gyoto_1_1_factory_messenger" kindref="compound">FactoryMessenger</ref> as unique parameter, communicates with the <ref refid="class_gyoto_1_1_factory" kindref="compound">Factory</ref> using this messenger to read an XML description of the object to build, and returns this objet. <ref refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" kindref="member">SmartPointee::Subcontractor_t</ref>* is just generic enough a typedef to cast to and from other subcontractor types: <ref refid="namespace_gyoto_1_1_astrobj_1aa53c7ada58c8c8f3799c3485b7d8f3bb" kindref="member">Astrobj::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_metric_1ad6b33a642cc94ad67855184d2adb95df" kindref="member">Metric::Subcontractor_t</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a163055eef14aee22dd8fa5188812d889" kindref="member">Spectrum::Subcontractor_t</ref>. A subcontractor needs to be registered using the relevant <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Register()</ref> function: <ref refid="namespace_gyoto_1_1_astrobj_1abb6caf3023a51cb77b5f6793ac03b188" kindref="member">Astrobj::Register()</ref>, <ref refid="namespace_gyoto_1_1_metric_1a602cba49b001e7470f3d439d1ab3e8f7" kindref="member">Metric::Register()</ref>, <ref refid="namespace_gyoto_1_1_spectrum_1a517874749d838d7121880e7d9d14c626" kindref="member">Spectrum::Register()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoSmartPointer.h" line="114" column="5" bodyfile="/home/junichi/Gyoto/include/GyotoSmartPointer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Object::kind</definition>
        <argsstring>(const std::string)</argsstring>
        <name>kind</name>
        <param>
          <type>const std::string</type>
        </param>
        <briefdescription>
<para>Set kind_. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" kindref="member">kind(const std::string)</ref> is protected because, for most Objects, it should not be changed in runtime. Set kind_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/include/GyotoObject.h" line="453" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Coding a <ref refid="class_gyoto_1_1_astrobj_1_1_standard" kindref="compound">Gyoto::Astrobj::Standard</ref> in <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Sample XML file: <programlisting filename="example-python-standard.xml"><codeline><highlight class="normal">&lt;?</highlight><highlight class="keyword">xml</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">version</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">encoding</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;UTF-8&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">standalone</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">?&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">Scenery</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">An</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">optically</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">thin</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">blob</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">centered</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">on</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">origin</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">system</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">in</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">flat</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">space-time.</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Computation</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">uses</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">spherical</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Metric</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">kind</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;KerrBL&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Spin</highlight><highlight class="normal">&gt;<sp/>0.<sp/>&lt;/</highlight><highlight class="keywordtype">Spin</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Mass</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;sunmass&quot;</highlight><highlight class="normal">&gt;<sp/>4</highlight><highlight class="keyword">e6</highlight><highlight class="normal"><sp/>&lt;/</highlight><highlight class="keywordtype">Mass</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Metric</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Screen</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Distance</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;kpc&quot;</highlight><highlight class="normal">&gt;<sp/>8<sp/>&lt;/</highlight><highlight class="keywordtype">Distance</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Time</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;yr&quot;</highlight><highlight class="normal">&gt;<sp/>30</highlight><highlight class="keyword">e3</highlight><highlight class="normal"><sp/>&lt;/</highlight><highlight class="keywordtype">Time</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">FieldOfView</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;microas&quot;</highlight><highlight class="normal">&gt;<sp/>150<sp/>&lt;/</highlight><highlight class="keywordtype">FieldOfView</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">In</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">UTF-8</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">locales</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;microas&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">may</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">be</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">written</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;µas&quot;</highlight><highlight class="normal">.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Inclination</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;degree&quot;</highlight><highlight class="normal">&gt;<sp/>90<sp/>&lt;/</highlight><highlight class="keywordtype">Inclination</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">In</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">UTF-8</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">locales</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;degree&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">may</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">be</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">written</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;°&quot;</highlight><highlight class="normal">.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">PALN</highlight><highlight class="normal">&gt;<sp/>0<sp/>&lt;/</highlight><highlight class="keywordtype">PALN</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Argument</highlight><highlight class="normal">&gt;<sp/>0<sp/>&lt;/</highlight><highlight class="keywordtype">Argument</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Resolution</highlight><highlight class="normal">&gt;<sp/>32<sp/>&lt;/</highlight><highlight class="keywordtype">Resolution</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Screen</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Astrobj</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">kind</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Python::Standard&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Module</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">gyoto_sample_standard</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Module</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Class</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">FixedStar</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Class</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Standard</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">objects</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">define</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">a</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">potential</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">some</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sort</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">through</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">__call__</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">below</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">CriticalValue</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inside</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">above</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">is</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">outside.</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">SafetyValue</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">must</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">be</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">slighlty</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">above</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">CriticalValue</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">a</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">minimum</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">__call__</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">searched</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">when</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">potential</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">below</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">SafetyValue</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">to</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">check</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">whether</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">object</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">has</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">been</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">crossed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">&lt;!--CriticalValue&gt;<sp/>9.<sp/>&lt;/CriticalValue--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">&lt;!--SafetyValue&gt;<sp/>11.<sp/>&lt;/SafetyValue--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">In</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Python</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">implementation</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">FixedStar</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">like</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">in</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">eponymous</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">C</highlight><highlight class="normal">++<sp/></highlight><highlight class="keyword">implementation</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">CriticalValue</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">SafetyValue</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">are</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">both</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">when</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">setting</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">convenience</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">ad-hoc</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">property</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Radius</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">defined</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">in</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Python.</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">The</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">other</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Python-defined</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">properties</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">are</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">space</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">coordinates</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">center</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">FixedStar</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">a</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">spectrum</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">and</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">an</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">opacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Position</highlight><highlight class="normal">&gt;<sp/>0.<sp/>0.<sp/>0.<sp/>&lt;/</highlight><highlight class="keywordtype">Position</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Radius</highlight><highlight class="normal">&gt;<sp/>12.<sp/>&lt;/</highlight><highlight class="keywordtype">Radius</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Spectrum</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">kind</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;PowerLaw&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Exponent</highlight><highlight class="normal">&gt;<sp/>0<sp/>&lt;/</highlight><highlight class="keywordtype">Exponent</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Constant</highlight><highlight class="normal">&gt;<sp/>0.001<sp/>&lt;/</highlight><highlight class="keywordtype">Constant</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Spectrum</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Opacity</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">kind</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;PowerLaw&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Exponent</highlight><highlight class="normal">&gt;<sp/>0<sp/>&lt;/</highlight><highlight class="keywordtype">Exponent</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Constant</highlight><highlight class="normal">&gt;<sp/>0.01<sp/>&lt;/</highlight><highlight class="keywordtype">Constant</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Opacity</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Gyoto::Astrobj::Python::Standard</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">also</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">support</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">rest</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">of</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Gyoto::Astrobj::Standard</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Properties:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">OpticallyThin</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;</highlight><highlight class="keywordtype">RMax</highlight><highlight class="normal">&gt;20.&lt;/</highlight><highlight class="keywordtype">RMax</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Astrobj</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Delta</highlight><highlight class="normal">&gt;<sp/>1</highlight><highlight class="keyword">e0</highlight><highlight class="normal"><sp/>&lt;/</highlight><highlight class="keywordtype">Delta</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">MinimumTime</highlight><highlight class="normal">&gt;<sp/>0.<sp/>&lt;/</highlight><highlight class="keywordtype">MinimumTime</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">Quantities</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/</highlight><highlight class="keywordtype">Quantities</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">One</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">can</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">also</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">specify</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">a</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">unit</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">Gyoto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">was</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">compiled</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>--</highlight><highlight class="keyword">with-udunits</highlight><highlight class="normal">):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">mJy</highlight><highlight class="normal">/</highlight><highlight class="keyword">pix²</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">mJy</highlight><highlight class="normal">/</highlight><highlight class="keyword">µas²</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">J.m-2.s-1.sr-1.Hz-1</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">erg.cm-2.s-1.sr-1.Hz-1</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">mJy.sr-1</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">Intensity</highlight><highlight class="normal">[</highlight><highlight class="keyword">Jy.sr-1</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;</highlight><highlight class="keywordtype">DeltaMaxOverR</highlight><highlight class="normal">&gt;0.01&lt;/</highlight><highlight class="keywordtype">DeltaMaxOverR</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">&lt;!--DeltaMax&gt;0.1&lt;/DeltaMax--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">Scenery</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting> Sample <ref refid="namespace_gyoto_1_1_astrobj_1_1_python" kindref="compound">Python</ref> module: <programlisting filename="gyoto_sample_standard.py"><codeline><highlight class="stringliteral">&apos;&apos;&apos;Sample<sp/>Astrobj::Standard<sp/>for<sp/>using<sp/>with<sp/>Gyoto<sp/>Python<sp/>plug-in</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Those<sp/>classes<sp/>demonstrate<sp/>how<sp/>to<sp/>use<sp/>Python<sp/>classes<sp/>as<sp/>Gyoto</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Astrobj::Standard<sp/>implementations<sp/>using<sp/>Gyoto&apos;s<sp/>&quot;python&quot;</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>plug-in.<sp/>Note<sp/>that<sp/>this<sp/>plug-in<sp/>can<sp/>be<sp/>renamed<sp/>to<sp/>whatever<sp/>matches</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>the<sp/>particular<sp/>version<sp/>of<sp/>Python<sp/>it<sp/>has<sp/>been<sp/>built<sp/>against</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>(e.g.<sp/>python3.4).</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>goal<sp/>is<sp/>to<sp/>be<sp/>able<sp/>to<sp/>instantiate<sp/>these<sp/>from<sp/>XML,<sp/>from</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Yorick...<sp/>and<sp/>even<sp/>from<sp/>Python<sp/>using<sp/>the<sp/>gyoto<sp/>extension...</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Synopsis:</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>import<sp/>gyoto.core</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>gyoto.core.requirePlugin(&quot;python&quot;)<sp/>#<sp/>or<sp/>python2.7<sp/>or<sp/>python3.4...</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>sp=gyoto.core.Astrobj(&quot;Python::Standard&quot;)</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>sp.set(&quot;Module&quot;,<sp/>&quot;gyoto_sample_standard&quot;)</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>sp.set(&quot;Class&quot;,<sp/>&quot;FixedStar&quot;)</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>sp.set(&quot;Position&quot;,<sp/>(0.,<sp/>0.,<sp/>0.))</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>sp.set(&quot;Radius&quot;,<sp/>1.)</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Classes<sp/>that<sp/>aim<sp/>at<sp/>implementing<sp/>the<sp/>Gyoto::Astrobj::Standard</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>interface<sp/>do<sp/>so<sp/>by<sp/>providing<sp/>the<sp/>following<sp/>methods<sp/>and<sp/>variable:</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>__call__:<sp/>required</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>getVelocity:<sp/>required</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>giveDelta,<sp/>emission,<sp/>integrateEmission,<sp/>transmission,<sp/>set,<sp/>get,</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>properties:<sp/>optional.</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>emission<sp/>and<sp/>integrateEmission<sp/>can<sp/>be<sp/>overloaded<sp/>by<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>varargs<sp/>argument.</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Ad-hoc<sp/>properties<sp/>are<sp/>declared<sp/>in<sp/>member<sp/>properties<sp/>which<sp/>is<sp/>a</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>dict<sp/>in<sp/>the<sp/>form:</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>properties<sp/>=<sp/>{<sp/>Key1:<sp/>type1,<sp/>Key2:<sp/>type2}</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>where<sp/>Keyi<sp/>and<sp/>typei<sp/>are<sp/>strings.</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>They<sp/>are<sp/>then<sp/>handled<sp/>by<sp/>set(self,<sp/>key,<sp/>val)<sp/>and<sp/>get(self,<sp/>key).</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>gyoto.core</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FixedStar:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>Sample<sp/>class<sp/>for<sp/>Astrobj::Python::Standard</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties={</highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;vector_double&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Radius&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;double&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Spectrum&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;spectrum&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Opacity&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;spectrum&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Properties<sp/>handled<sp/>by<sp/>set()<sp/>and<sp/>get()</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>position=numpy.zeros(3,<sp/>dtype=float)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;3<sp/>coordinates<sp/>of<sp/>the<sp/>center<sp/>of<sp/>the<sp/>star</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>radius=1.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Radius<sp/>of<sp/>the<sp/>Star<sp/>in<sp/>geometrical<sp/>units</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>spectrum=gyoto.core.Spectrum(</highlight><highlight class="stringliteral">&quot;BlackBody&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>opacity=gyoto.core.Spectrum(</highlight><highlight class="stringliteral">&quot;PowerLaw&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">set(self,<sp/>key,<sp/>val):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Set<sp/>parameters<sp/>as<sp/>ad<sp/>hoc<sp/>entities</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Python:</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.set(&quot;Position&quot;,<sp/>(x1,<sp/>x2,<sp/>x3))</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.set(&quot;Radius&quot;,<sp/>radius)</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XML:</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;Position&gt;<sp/>x1<sp/>x2<sp/>x3<sp/>&lt;/Position&gt;</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;Radius&gt;<sp/>radius<sp/>&lt;/Radius&gt;</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setting<sp/>Radius<sp/>actually<sp/>sets<sp/>CriticalValue<sp/>and<sp/>SafetyValue</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Properties<sp/>of<sp/>Astrobj::Standard).</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key==</highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.position<sp/>=<sp/>val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Radius&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.radius<sp/>=<sp/>val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Spectrum&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.spectrum<sp/>=<sp/>val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Opacity&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.opacity<sp/>=<sp/>val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Note:<sp/>since<sp/>we<sp/>set<sp/>attributes<sp/>here,<sp/>__setattr__(self,<sp/>key,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>val)<sp/>defined<sp/>below<sp/>will<sp/>be<sp/>called<sp/>and<sp/>implements<sp/>useful<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>effects.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get(self,<sp/>key):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Retrieve<sp/>properties</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optional,<sp/>but<sp/>simple<sp/>to<sp/>implement<sp/>and<sp/>very<sp/>usefull.<sp/>Required</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>write<sp/>back<sp/>to<sp/>XML,<sp/>which<sp/>is<sp/>used<sp/>for<sp/>MPI<sp/>parallelization.</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Radius&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.radius</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Spectrum&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.spectrum</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Opacity&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.opacity</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__setattr__(self,<sp/>key,<sp/>val):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Set<sp/>attributes</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optional,<sp/>but<sp/>allows<sp/>reacting<sp/>when<sp/>attributes<sp/>(self.xxx)</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.<sp/>In<sp/>particular,<sp/>Gyoto<sp/>will<sp/>set<sp/>self.this<sp/>to<sp/>the<sp/>C++</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>instance<sp/>upon<sp/>initialization.</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First,<sp/>actually<sp/>store<sp/>the<sp/>attribute.<sp/>This<sp/>is<sp/>what<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>happen<sp/>if<sp/>we<sp/>did<sp/>not<sp/>overload<sp/>__setattr__.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.__dict__[key]=val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;this&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Then,<sp/>if<sp/>key<sp/>is<sp/>&quot;this&quot;,<sp/>trigger<sp/>the<sp/>side<sp/>effects<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>setting<sp/>position<sp/>and<sp/>radius.<sp/>This<sp/>will<sp/>reenter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>__setattr__<sp/>with<sp/>the<sp/>following<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.position=self.position</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.radius=self.radius</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>when<sp/>position<sp/>is<sp/>set,<sp/>cache<sp/>Cartesian<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos=numpy.zeros(4,<sp/>dtype=float)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos[1:]=val</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.coord_st=self.to_cartesian(pos)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;radius&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>two<sp/>properties<sp/>from<sp/>the<sp/>Gyoto::Standard<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.this.set(</highlight><highlight class="stringliteral">&quot;CriticalValue&quot;</highlight><highlight class="normal">,<sp/>val**2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.this.set(</highlight><highlight class="stringliteral">&quot;SafetyValue&quot;</highlight><highlight class="normal">,<sp/>val**2*1.1+0.1)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_cartesian(self,<sp/>coord):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;Helper<sp/>function,<sp/>not<sp/>in<sp/>the<sp/>API</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gg=self.this.metric()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spherical=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gg<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spherical<sp/>=<sp/>gg.coordKind()<sp/>==<sp/>gyoto.core.GYOTO_COORDKIND_SPHERICAL</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>spherical:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rs=coord[1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ths=coord[2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phs=coord[3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st=math.sin(ths)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ct=math.cos(ths)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp=math.sin(phs)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp=math.cos(phs)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numpy.array((coord[0],<sp/>rs*st*cp,<sp/>rs*st*sp,<sp/>rs*ct))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__call__(self,<sp/>coord):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>Astrobj::Standard::operator()()</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Required</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_ph=self.to_cartesian(coord)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_st=self.coord_st</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>coord_ph[1]-coord_st[1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>coord_ph[2]-coord_st[2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dz<sp/>=<sp/>coord_ph[3]-coord_st[3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx*dx<sp/>+<sp/>dy*dy<sp/>+<sp/>dz*dz</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">getVelocity(self,<sp/>coord,<sp/>vel):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>Velocity<sp/>field</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Required</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel[0]=1.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>4):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel[i]=0.</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">emission(self,<sp/>nuem,<sp/>dsem,<sp/>cph,<sp/>co):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;<sp/>emission</highlight></codeline>
<codeline><highlight class="stringliteral"></highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Optional</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.this.opticallyThin():</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.spectrum(nuem,<sp/>self.opacity(nuem),<sp/>dsem)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.spectrum(nuem)</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">transmission(self,<sp/>nuem,<sp/>dsem,<sp/>cph,<sp/>co):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.this.opticallyThin()):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opac=self.opacity(nuem)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>opac<sp/>==<sp/>0.:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>math.exp(-opac*dsem)</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Gyoto::Python::Base</label>
        <link refid="class_gyoto_1_1_python_1_1_base"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
      </node>
      <node id="5">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Python::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>Gyoto::Property</label>
        <link refid="class_gyoto_1_1_property"/>
        <childnode refid="8" relation="usage">
          <edgelabel>getter_unit</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>getter</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>setter</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>setter_unit</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>Gyoto::Python::Base</label>
        <link refid="class_gyoto_1_1_python_1_1_base"/>
      </node>
      <node id="13">
        <label>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="3">
        <label>Gyoto::Astrobj::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_standard"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>Gyoto::SmartPointer&lt; Gyoto::Screen &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="17">
        <label>Gyoto::Functor::Double_constDoubleArray</label>
        <link refid="class_gyoto_1_1_functor_1_1_double__const_double_array"/>
      </node>
      <node id="4">
        <label>Gyoto::Astrobj::Generic</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_generic"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrometer::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="6">
        <label>Gyoto::Object</label>
        <link refid="class_gyoto_1_1_object"/>
        <childnode refid="7" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>Gyoto::SmartPointer&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="5">
        <label>Gyoto::SmartPointee</label>
        <link refid="class_gyoto_1_1_smart_pointee"/>
      </node>
      <node id="15">
        <label>Gyoto::Property::setter_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__t"/>
        <childnode refid="10" relation="usage">
          <edgelabel>set_spectrometer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>set_metric</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>set_spectrum</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>set_astrobj</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>set_screen</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>Gyoto::Property::setter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1setter__unit__t"/>
      </node>
      <node id="12">
        <label>Gyoto::SmartPointer&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_smart_pointer"/>
      </node>
      <node id="8">
        <label>Gyoto::Property::getter_unit_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__unit__t"/>
      </node>
      <node id="9">
        <label>Gyoto::Property::getter_t</label>
        <link refid="union_gyoto_1_1_property_1_1getter__t"/>
        <childnode refid="10" relation="usage">
          <edgelabel>get_spectrometer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>get_metric</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>get_spectrum</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>get_astrobj</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>get_screen</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Astrobj::Python::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="683" column="1" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="685" bodyend="737"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0b7b8a6576a8df3f46523b34701ea10d" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>__defaultfeatures</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1abfc27f1504c6c5342ad9ff4efe5566b2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Base</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1ae3b870fd182c26b7923db3e0473c703b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Base</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>class_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a88be593c3356c17769386bd231bc0724" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>clone</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a6f8b18eb1e9450b234f001ada382e987" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>computeB4vect</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af35df1f9264573cb9af2a9f566998ced" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>computeB4vect_ipole</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0040fdc25588896631742281db9cd208" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>critical_value_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1aabde9153d1add6d14d271a36b2555333" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>criticalValue</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6d1721c09ff8a37bba1e6c1d9ce4e293" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>criticalValue</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a22a67609fb4690ee8ec0e95e4060e387" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>decRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a223d0abe2f8c72a288f4c9b57e5c22db" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>delta_inobj_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1aa2572a498e74bf38e1f4b354938a82a7" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a50ebadd2172a9a2359fad07d2b8b305e" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>deltaInObj</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab0cdf8ae0991f0bea86828be5c0cf59e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>deltaMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1c219fb083260ed76ce2c67d47edeffd" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>deltamaxinsidermax_</name></member>
      <member refid="class_gyoto_1_1_object_1a741ba678188d7d167ff2e3bb13dd924f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>describeProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a6b7869cf7524b36d5f775a969b9fc012" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37ef68fc3559f64403cd09e7dd0066aa" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a105eb8ad296c08e33977cebb1d5a784e" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2ff9e7374e55fb37b1eb6538e65448cf" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>emission</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1a7524ab9c2d51d32f7de7177df5b544a1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>fillElement</name></member>
      <member refid="class_gyoto_1_1_object_1a11892ef308d6f40add51eaea653a394b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>fillProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4c1f589b6795d2f742922245926c37b5" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>flag_radtransf_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa01d6dc0f2a939e8c9cab6bfad0171fd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a54143ea81889a2d2ae75f0ca9ad0264a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3a0ff7964797a990879dd4cd2026cfbb" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae510b9acf41e962b02b2d931afd9e07f" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Generic</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1aa91e924b2c7c3e58764f8aee6b174926" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1a042952734a5d4bd00b73a4c03cc23af4" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1abeaf3c1bd632fda3a48118d30105c871" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_object_1a99544282b6c383b8570a5bc51bed1ecf" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>get</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afa1fe03d5defb25fe8086a20b247b9e8" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getChi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1acb8ac9b6955e961ef2baa6366128caa3" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getDefaultQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac52690e1f5bbdf9b851b0b26e121ef72" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getIndice</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1aa01d7fafbb99a0648d923731bdd81585" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getProperties</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1abea99a3924aca45cd00c543fab7bd155" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getPythonProperty</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9a9cb35cd161bf19ce652f76e0a5bec0" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getRefCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a44674d0280cad4c25ef93436e17e8dbd" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getSinCos2Chi</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a0e898e0fc20a05c2eec6e070ab9f02bf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>getVelocity</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afb9529bd8da9781af6692d2427b26e34" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>gg_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a7923f45423943f81d5daf94a1d1e7e01" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>giveDelta</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a5ae3c9719583817ce35553a578249981" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Gyoto::SmartPointer&lt; Gyoto::Astrobj::Python::Standard &gt;</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac9397fe5d0bea5c5aaf3a006ec433d26" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>GYOTO_OBJECT_ACCESSORS_UNIT</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ab6a63773fec44776689e6d52173f28da" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>GYOTO_OBJECT_THREAD_SAFETY</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1af62c327a27345056f6012b771fa970b8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>hasPythonProperty</name></member>
      <member refid="class_gyoto_1_1_object_1a13843618d84c49d47bd37ddfa31160c5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>help</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1d1cc899a7919c4369261a83c7656ad7" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Impact</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a9ec09c51fd18dde7c13ef3b03fac1fad" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>incRefCount</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>inline_module_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a54e22665edcbd570612bd2546e336139" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>inlineModule</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a34ff93e25b631d25445d9c05339e955b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>inlineModule</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a868da025a1f70fb2152f8860ce64b514" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a65318a11cd3eb26258deb3dde9942056" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a4af35a1083b47e3eb5d2a7b394b4dc02" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a723f1e0d3c99b05be4706e668eb58d3a" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>integrateEmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1a6905eff093717438afefe564b30a2e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>interp1d</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0336acd32601879a8a44b6ff41101409" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>interpNd</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ca5c9ec074c4026b3be52098350e3ac" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a605191298f2e31f1780b0348dc211618" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>interpolate</name></member>
      <member refid="class_gyoto_1_1_object_1a06ea95dc396053466cdd63d419d1688c" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>isThreadSafe</name></member>
      <member refid="class_gyoto_1_1_object_1aae3b80667884c6620c4796a1b8ef74e5" prot="protected" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1a9f46de678c67e9050cf3a8b9677e1d73" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>kind</name></member>
      <member refid="class_gyoto_1_1_object_1ac48ad88e3ef229ba0d0fe68a94a7118f" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>kind_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac37e7398e73e09e1fe4543418d3ce967" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>klass</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a2d173c0c05b4ad4c4642f7823e6e73e8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>klass</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac66726b8c1271499fddb753e30cf9dee" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af5482ea6b3773451ec3e2be56be821fd" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>metric</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a257de97dbef49bd2c6828090eea4de50" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>module</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a4a94de855ab50bfb0303b8afc2f2b67a" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>module</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>module_</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1abf1c1e431cdd4f08f13de581cccb6770" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>mutex_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aedee05b6554d7db41d51fcbf0416b04e" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>noredshift_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1a9ebdd38ce6f787942688ab460c1b3aa9" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1a323886ea8a4ec42ca658794a89d0294b" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a5173d279a53bbc9850771e344d6b79b0" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_object_1a1fbd53bedaf8d18f67b12ec0660b8aa7" prot="public" virt="non-virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Object</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3129f0e86a5e157a34a3a63b768108b5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afe6de1c283d75d7997eecfc64bb1f626" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aeae337b98d2c187c533ab0b0e958ea1c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a2b1239f8d35bda6cd62fd1cf43724ebe" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Omatrix</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a606a2c0be5e66e0b12ce7c5a2f37ced6" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a2bf98945b0ee159c57194fabcb0368a9" prot="public" virt="pure-virtual" ambiguityscope="Gyoto::Functor::Double_constDoubleArray::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>operator()</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa38878504c68d10229dc0729c898c00d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a803354ae1c0322599451b31676525b86" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>opticallyThin</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a57c225357ebfa68bed48e309aaf13ee0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>parameters</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1adbd242f453a565255460e3fd555457b2" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>parameters</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>parameters_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ade656f50c7c601b6d7335d79c0fd9019" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pCall_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ae42f113847cdbc550857edda766df22c" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pEmission_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ade1d12fbb6bdea332eb81d7d4edf2ea7" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pEmission_overloaded_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a758de1b2cdd3d9cd55506b5c599290f1" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pGet_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1af9ed9cfee503510ce27ec1d1d53722b5" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pGetVelocity_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a9023ece5d84885e781152d98bdd6f648" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pGiveDelta_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pInstance_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac81a5dc6360115f4ff1a223a7326a7ed" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pIntegrateEmission_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a505190983a06bffc3672958e7b24d59e" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pIntegrateEmission_overloaded_</name></member>
      <member refid="class_gyoto_1_1_object_1a01832761cd5f0a12319e3e24ce9a9fba" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>plugins_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ac98093215e1253c3ae6f2c73d0949f8c" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Pmatrix</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1af652cb4b7a2f473e9a86a4bf1e47e973" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pModule_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a7e9289775df2ec09ca222ba290cf35c7" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pProperties_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1aa6f20e6d108357f6355493c4fdd5bb2f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1cc43418ef2f68d287f2d4a5e007e558" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>processHitQuantities</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1abcdd4dcf5f6ae46d9454c2fe7330b72a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>properties</name></member>
      <member refid="class_gyoto_1_1_object_1a424ef3538c714adfafad7eda249e0d58" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>property</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a8f1ddee73aaa84dcdc1b1d2b0b3d8f7c" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pSet_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ab8b3075f6f2e3b95f3a47d2a0dd9e1c0" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pTransmission_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a02a869483c7dd153661b7867c892f505" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>pythonPropertyType</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8c58fba1b8f7683df96afa73243aa9aa" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ae665ae4574583a715dc442f4de838e13" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0e8a446412b95fc5f764c6456786eb96" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>radiativeQ</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1af2369945e025692d0df2944ead8c7520" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab8f031b279865bed0e448790fb3c1ad2" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>redshift</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1aaaf212a70fb1880b70e4d357e843cc85" prot="private" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>refCount</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ab83c07c91451283c39aa6929db0f97bf" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a35ba85185bc13057dc21824e57a11683" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1ad65201a57dcce6af74e44ff296820130" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1abdba9cbf2a831d085979d5089742f7d9" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a1fffcd6d1c1e54cf0326a1631dc24639" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a0edde9b415607a4ef4b79ca8c2e606da" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rMax</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a5cc3f2599b83bc21c35e95ded7fab541" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rmax_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1afaf780270ee0e46750a5372a8c551dbc" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a526cb261f0cbefda9dec6f69993758e5" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>rotateJs</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1af820f4802021f52e233c787cfe5c97af" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>safety_value_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a0a53e90c76121de361e49ee954765d91" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1ac660f132530f12b6cc61a60e87b7972f" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>safetyValue</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1ad4aff23562b0ae6a36e05741eb631c82" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1ab3aa615a6b576b663f9ee524831280c8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1ab601136e5837e6bd99c4bf3b0beee718" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_object_1abed03e16a8013699534b802e06751ef8" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>set</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1ab4fd3efea9c85b8f8c1aaafa2597dfa4" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_object_1a43fe041144add66155668ca88a99fd98" prot="public" virt="virtual" ambiguityscope="Gyoto::Astrobj::Standard::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>setParameter</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1a84ea2cab6209f1ed0de3a73223c6a5e8" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>setParameters</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a888b32520799d6f002536e153060b6fe" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>setPythonProperty</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a58018f8c013b1ac60219a4f1cec30edf" prot="protected" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>shadow_</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a8ae6d79f0c011ad97da14185553caea4" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a939ebc52f5aacc71a5bb4dca803d52ab" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>showshadow</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a7d212bcd7d3ac4147e18683c47ca910d" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1adc075b08ca5d3c0635bc97f843835f8a" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a37500264776864ab4a800cbe23c01d10" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a0709a55db90065994aa94a133346a818" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a1f8278591f27a729bb1222424619730c" prot="public" virt="non-virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a7948720c27fc3bdaf23c8c52a769a68e" prot="public" virt="non-virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_standard_1a95b93c6163a8dc99bba0010c53fd04fd" prot="public" virt="non-virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Standard</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1afe17bea3c33e2187940cfdd5543c1d14" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>Subcontractor_t</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a490c5212486e7d85a12e052d25728a0e" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a12691b14048aa4e3aa9fad7a427a198d" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a3f6b8d4c68855ad66ec479fc0d8f28ea" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1a28efbc072bac5ea345afa966ac052522" prot="public" virt="virtual" ambiguityscope="Object&lt; Gyoto::Astrobj::Standard &gt;::"><scope>Gyoto::Astrobj::Python::Standard</scope><name>transmission</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a1ef2825c473f7ad7c48fe8822eda8c16" prot="public" virt="non-virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~Base</name></member>
      <member refid="class_gyoto_1_1_functor_1_1_double__const_double_array_1a56681650c78dc2089816993041f288c0" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~Double_constDoubleArray</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_generic_1adf8758eab0634929f5c3630a54a88f07" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~Generic</name></member>
      <member refid="class_gyoto_1_1_python_1_1_object_1af0760f1ceb18207d2e3678295b23af2b" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~Object</name></member>
      <member refid="class_gyoto_1_1_smart_pointee_1a4301d456d1d36ed7912d073b742c74e1" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~SmartPointee</name></member>
      <member refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a2e829065a32cc8a57aed26345e051037" prot="public" virt="virtual"><scope>Gyoto::Astrobj::Python::Standard</scope><name>~Standard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
