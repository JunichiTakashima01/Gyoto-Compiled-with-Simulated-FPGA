<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_gyoto_1_1_python_1_1_base" kind="class" language="C++" prot="public">
    <compoundname>Gyoto::Python::Base</compoundname>
    <derivedcompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; Gyoto::Metric::Generic &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; Gyoto::Astrobj::ThinDisk &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; Gyoto::Spectrum::Generic &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_gyoto_1_1_python_1_1_object" prot="public" virt="non-virtual">Gyoto::Python::Object&lt; O &gt;</derivedcompoundref>
    <includes refid="_gyoto_python_8h" local="no">GyotoPython.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::module_</definition>
        <argsstring></argsstring>
        <name>module_</name>
        <briefdescription>
<para>Name of the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> module that holds the class. </para>
        </briefdescription>
        <detaileddescription>
<para>For instance, if the class is implemented in toto.py, the module name is &quot;toto&quot;. <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> name: Module. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="200" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::inline_module_</definition>
        <argsstring></argsstring>
        <name>inline_module_</name>
        <briefdescription>
<para><ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> source code for module that holds the class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="206" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Gyoto::Python::Base::class_</definition>
        <argsstring></argsstring>
        <name>class_</name>
        <briefdescription>
<para>Name of the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class that we want to expose. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> name: Class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="213" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; Gyoto::Python::Base::parameters_</definition>
        <argsstring></argsstring>
        <name>parameters_</name>
        <briefdescription>
<para>Parameters that this class needs. </para>
        </briefdescription>
        <detaileddescription>
<para>A list of parameters (doubles) can be passed in the <ref refid="class_gyoto_1_1_property" kindref="compound">Property</ref> Parameters. They will be sent to the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> instance using <bold>setitem</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="222" column="15" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1af652cb4b7a2f473e9a86a4bf1e47e973" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pModule_</definition>
        <argsstring></argsstring>
        <name>pModule_</name>
        <briefdescription>
<para>Reference to the python module once it has been loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="227" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pInstance_</definition>
        <argsstring></argsstring>
        <name>pInstance_</name>
        <briefdescription>
<para>Reference to the python instance once it has been instantiated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="232" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a7e9289775df2ec09ca222ba290cf35c7" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pProperties_</definition>
        <argsstring></argsstring>
        <name>pProperties_</name>
        <briefdescription>
<para>Reference to the properties member. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="237" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a8f1ddee73aaa84dcdc1b1d2b0b3d8f7c" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pSet_</definition>
        <argsstring></argsstring>
        <name>pSet_</name>
        <briefdescription>
<para>Reference to the (optional) Set method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="242" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gyoto_1_1_python_1_1_base_1a758de1b2cdd3d9cd55506b5c599290f1" prot="protected" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* Gyoto::Python::Base::pGet_</definition>
        <argsstring></argsstring>
        <name>pGet_</name>
        <briefdescription>
<para>Reference to the (optional) Get method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="247" column="13" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1abfc27f1504c6c5342ad9ff4efe5566b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Python::Base::Base</definition>
        <argsstring>()</argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="250" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1ae3b870fd182c26b7923db3e0473c703b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Python::Base::Base</definition>
        <argsstring>(const Base &amp;)</argsstring>
        <name>Base</name>
        <param>
          <type>const <ref refid="class_gyoto_1_1_python_1_1_base" kindref="compound">Base</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="251" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a1ef2825c473f7ad7c48fe8822eda8c16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Gyoto::Python::Base::~Base</definition>
        <argsstring>()</argsstring>
        <name>~Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="252" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a9a814881f2741b5ccdf8ca91d1b4ebf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Python::Base::module</definition>
        <argsstring>() const</argsstring>
        <name>module</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1ad306d8a512881fa5d0eeda24d193bd2d">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a1e19d7037aeee1bffb119b8f2c5e5f00">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a257de97dbef49bd2c6828090eea4de50">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1af7d2cfd1dc5f6ba3b8e033c7508b93de">module</reimplementedby>
        <briefdescription>
<para>Return module_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="254" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a79f704f70a42edf5f37d1e28ee88037a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Python::Base::inlineModule</definition>
        <argsstring>() const</argsstring>
        <name>inlineModule</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1a15f085937942324f8bd30b38993d2328">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a5aa16fe612f6ed1e9f7a7172cbe07241">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a54e22665edcbd570612bd2546e336139">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a3cd84a0bf6a468b0bf5409b40bf70705">inlineModule</reimplementedby>
        <briefdescription>
<para>Return inline_module_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="255" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a4cb3d486914da158dafcd1e562827fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::module</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>module</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1a217fab133edf1b0435295112b70e93a8">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a3718604728f0dce0a8927e45921a7ed8">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a4a94de855ab50bfb0303b8afc2f2b67a">module</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a6356c48534d038f0aac4f5dd50a9ca7b">module</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> and import the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> module. </para>
        </briefdescription>
        <detaileddescription>
<para>Side effects:<itemizedlist>
<listitem><para>sets <ref refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" kindref="member">inline_module_</ref> to &quot;&quot;;</para>
</listitem><listitem><para>calls <ref refid="class_gyoto_1_1_python_1_1_base_1a894cfd1e8f4424b4a27b79020bc95a95" kindref="member">klass</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>) if <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> is already known, so <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> can be set (or reset) after <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="265" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a3436f643ba19cb9e53d8a7e95b64f0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::inlineModule</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>inlineModule</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1aadff9b3ca45129d98dc4012d0c8465d1">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a2faed173e725f3192666abb0ad1a054c">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a34ff93e25b631d25445d9c05339e955b">inlineModule</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a5e0d327f7d7d2718fdd66ce7b41d7856">inlineModule</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" kindref="member">inline_module_</ref> and import the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> module. </para>
        </briefdescription>
        <detaileddescription>
<para>Side effects:<itemizedlist>
<listitem><para>sets <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> to &quot;&quot;;</para>
</listitem><listitem><para>calls <ref refid="class_gyoto_1_1_python_1_1_base_1a894cfd1e8f4424b4a27b79020bc95a95" kindref="member">klass</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>) if <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> is already known, so <ref refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" kindref="member">module_</ref> can be set (or reset) after <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="275" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a894cfd1e8f4424b4a27b79020bc95a95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string Gyoto::Python::Base::klass</definition>
        <argsstring>() const</argsstring>
        <name>klass</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1ab6fa56d42ac5c1472b094d865a899357">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a9708bdef837a896e529accc4e1720655">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1ac37e7398e73e09e1fe4543418d3ce967">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a987a360677d0f4f8ca16bb606cbad1f4">klass</reimplementedby>
        <briefdescription>
<para>Retrieve <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="278" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1acce1645b213fe517f73483a99e7789be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::klass</definition>
        <argsstring>(const std::string &amp;c)</argsstring>
        <name>klass</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1acab5164d2806f32ed1beccce64dde497">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a41b59b3d5e8f36d0d7d0865ae2efceb1">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a2d173c0c05b4ad4c4642f7823e6e73e8">klass</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a2e9e943c6b9c78d08ec6458e68609dce">klass</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" kindref="member">class_</ref> and instantiate the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" kindref="member">pInstance_</ref>.</para>
<para>This generic implementation takes care of the common ground, but does not set &apos;this&apos; or call <ref refid="class_gyoto_1_1_python_1_1_base_1a1f83483692c3f761777f5a8a863d0a83" kindref="member">parameters</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>). Therefore, all the derived classes should reimplement this method and at least call Python::Base::klass(c) and <ref refid="class_gyoto_1_1_python_1_1_base_1a1f83483692c3f761777f5a8a863d0a83" kindref="member">parameters</ref>(<ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>). Between the two is the right moment to check that the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class implements the required API and to cache PyObject* pointers to class methods. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="293" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a1f83483692c3f761777f5a8a863d0a83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>virtual std::vector&lt;double&gt; Gyoto::Python::Base::parameters</definition>
        <argsstring>() const</argsstring>
        <name>parameters</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1aee2f5c686605b792bfdb382a41846d5e">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a97c57b0c9a8c22375d8668d1e1b189a8">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1a57c225357ebfa68bed48e309aaf13ee0">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1ad3fd7c2bb76de035b1ba37fad34e9d5b">parameters</reimplementedby>
        <briefdescription>
<para>Retrieve <ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="296" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1ad60df11071a344829956610aa8015a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::parameters</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;)</argsstring>
        <name>parameters</name>
        <reimplementedby refid="class_gyoto_1_1_spectrum_1_1_python_1a640a1029c8e750cc6958894d6c429bea">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_metric_1_1_python_1a0116ead0d5baed6dbe02f18e7e4a31df">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard_1adbd242f453a565255460e3fd555457b2">parameters</reimplementedby>
        <reimplementedby refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk_1a581acf6668db9476d28fe60927be3d8d">parameters</reimplementedby>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Set <ref refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" kindref="member">parameters_</ref> and send them to <ref refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" kindref="member">pInstance_</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters are sent to the class instance using the <bold>setitem</bold> method with numerical keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="303" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1af62c327a27345056f6012b771fa970b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Gyoto::Python::Base::hasPythonProperty</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>hasPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="305" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a888b32520799d6f002536e153060b6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Gyoto::Python::Base::setPythonProperty</definition>
        <argsstring>(std::string const &amp;key, Value val)</argsstring>
        <name>setPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="306" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1abea99a3924aca45cd00c543fab7bd155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_gyoto_1_1_value" kindref="compound">Value</ref></type>
        <definition>virtual Value Gyoto::Python::Base::getPythonProperty</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>getPythonProperty</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="307" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_gyoto_1_1_python_1_1_base_1a02a869483c7dd153661b7867c892f505" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int Gyoto::Python::Base::pythonPropertyType</definition>
        <argsstring>(std::string const &amp;key) const</argsstring>
        <name>pythonPropertyType</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="308" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_gyoto_1_1_python_1_1_base" kindref="compound">Base</ref> class for classes in the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> plug-in. </para>
    </briefdescription>
    <detaileddescription>
<para>All derived C++ classes (<ref refid="class_gyoto_1_1_metric_1_1_python" kindref="compound">Gyoto::Metric::Python</ref>, <ref refid="class_gyoto_1_1_spectrum_1_1_python" kindref="compound">Gyoto::Spectrum::Python</ref>, <ref refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard" kindref="compound">Gyoto::Astrobj::Python::Standard</ref> and Gyoto::Astrobj::Python::Thindisk have those three Properties:<itemizedlist>
<listitem><para>Module (string): the module in which the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class is implemented;</para>
</listitem><listitem><para>Class (string): the name of the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> class, in module Module, to interface with;</para>
</listitem><listitem><para>Parameters (vector&lt;double&gt;): optional list of parameters for this class. These parameters are passed one by one to the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> instance using <bold>setitem</bold> with numerical keys.</para>
</listitem></itemizedlist>
</para>
<para>Those C++ classes wrap around <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> classes that implement certain methods. Those <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> classes may accepts parameters through the Parameters property described above by implementing <bold>setitem</bold>, or by providing:<itemizedlist>
<listitem><para>member &quot;properties&quot;, a dict in the form {name: dtype} where name is the property name and dtype the corresponding datatype.</para>
</listitem><listitem><para>methods set(self, key, value) and get(self, key).</para>
</listitem></itemizedlist>
</para>
<para>All the <ref refid="namespace_gyoto" kindref="compound">Gyoto</ref> instances of the classes descending from <ref refid="class_gyoto_1_1_python_1_1_base" kindref="compound">Gyoto::Python::Base</ref> expose themselves to the <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> instance they wrap immediately after instantiation by setting the &apos;this&apos; attribute. If the &apos;gyoto&apos; <ref refid="namespace_gyoto_1_1_python" kindref="compound">Python</ref> extension can be loaded, then &apos;this&apos; will be an instance of one of the classes gyoto.Metric, gyoto.Spectrum, gyoto.StandardAstrobj or gyoto.ThinDisk pointing to the underlying C++ instance. If the &apos;gyoto&apos; extension is not available, &apos;this&apos; will be None. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Gyoto::Python::Object&lt; Gyoto::Astrobj::Standard &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Gyoto::Python::Base</label>
        <link refid="class_gyoto_1_1_python_1_1_base"/>
      </node>
      <node id="2">
        <label>Gyoto::Python::Object&lt; Gyoto::Metric::Generic &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Gyoto::Python::Object&lt; Gyoto::Astrobj::ThinDisk &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Gyoto::Spectrum::Python</label>
        <link refid="class_gyoto_1_1_spectrum_1_1_python"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Gyoto::Python::Object&lt; Gyoto::Spectrum::Generic &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Gyoto::Astrobj::Python::ThinDisk</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_python_1_1_thin_disk"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Gyoto::Python::Object&lt; O &gt;</label>
        <link refid="class_gyoto_1_1_python_1_1_object"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Gyoto::Metric::Python</label>
        <link refid="class_gyoto_1_1_metric_1_1_python"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Gyoto::Astrobj::Python::Standard</label>
        <link refid="class_gyoto_1_1_astrobj_1_1_python_1_1_standard"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" line="192" column="1" bodyfile="/home/junichi/Gyoto/plugins/python/include/GyotoPython.h" bodystart="192" bodyend="310"/>
    <listofallmembers>
      <member refid="class_gyoto_1_1_python_1_1_base_1abfc27f1504c6c5342ad9ff4efe5566b2" prot="public" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>Base</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1ae3b870fd182c26b7923db3e0473c703b" prot="public" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>Base</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a69af6b343cb744e7e34022d395f93ab4" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>class_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1abea99a3924aca45cd00c543fab7bd155" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>getPythonProperty</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1af62c327a27345056f6012b771fa970b8" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>hasPythonProperty</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1ae0c6e2e9b883adaa081e7a3b402d3bb2" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>inline_module_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a79f704f70a42edf5f37d1e28ee88037a" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>inlineModule</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a3436f643ba19cb9e53d8a7e95b64f0df" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>inlineModule</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a894cfd1e8f4424b4a27b79020bc95a95" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>klass</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1acce1645b213fe517f73483a99e7789be" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>klass</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a9a814881f2741b5ccdf8ca91d1b4ebf7" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>module</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a4cb3d486914da158dafcd1e562827fed" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>module</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a7f6558bf7597b6e6c8f1bd198895b077" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>module_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a1f83483692c3f761777f5a8a863d0a83" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>parameters</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1ad60df11071a344829956610aa8015a58" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>parameters</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1aa033dfe530617afb7c7a27e6536bb88c" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>parameters_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a758de1b2cdd3d9cd55506b5c599290f1" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>pGet_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1aab2145b455aa9848024b643d06016b35" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>pInstance_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1af652cb4b7a2f473e9a86a4bf1e47e973" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>pModule_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a7e9289775df2ec09ca222ba290cf35c7" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>pProperties_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a8f1ddee73aaa84dcdc1b1d2b0b3d8f7c" prot="protected" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>pSet_</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a02a869483c7dd153661b7867c892f505" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>pythonPropertyType</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a888b32520799d6f002536e153060b6fe" prot="public" virt="virtual"><scope>Gyoto::Python::Base</scope><name>setPythonProperty</name></member>
      <member refid="class_gyoto_1_1_python_1_1_base_1a1ef2825c473f7ad7c48fe8822eda8c16" prot="public" virt="non-virtual"><scope>Gyoto::Python::Base</scope><name>~Base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
