<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Scenery>

  The goal of this example is to exhibit using a Metric and a Spectrum
  coded in Python. It is functionaly equivalent to
  example-fixed-star-minkowski-cartesian.xml in the main Gyoto example
  directory.

  An optically thin blob centered on the origin of the coordinate
  system, in flat space-time. Computation uses the Cartesian
  coordinates.

  <Metric kind = "Python">
    <Mass unit="sunmass"> 4e6 </Mass>
    <Cartesian/>
    <Module>gyoto_sample_metrics</Module>
    <Class>Minkowski</Class>
  </Metric>

  <Screen>
    <Distance unit="kpc"> 8 </Distance>
    <Time unit="yr"> 30e3 </Time>
    <FieldOfView unit="microas"> 150 </FieldOfView>
    In UTF-8 locales, "microas" may be written "µas".
    <Inclination unit="degree"> 90 </Inclination>
    In UTF-8 locales, "degree" may be written "°".
    <PALN> 0 </PALN>
    <Argument> 0 </Argument>
    <Resolution> 32 </Resolution>
  </Screen>

  <Astrobj kind = "FixedStar">
    <Radius> 12 </Radius>
    <Position> 0 0 0 </Position>
    <UseGenericImpact/>
    <Spectrum kind="Python">
      <Module>gyoto_sample_spectra</Module>
      <Class>PowerLaw</Class>
      <Constant>0.001</Constant>
      <Exponent>0.</Exponent>
    </Spectrum>
    <Opacity kind="Python">
      <Module>gyoto_sample_spectra</Module>
      <Class>PowerLaw</Class>
      <Constant>0.001</Constant>
      <Exponent>0.</Exponent>
    </Opacity>
    <OpticallyThin/>
  </Astrobj>

  <Delta> 1e0 </Delta>
  <MinimumTime> 0. </MinimumTime>
  <Quantities>
    Intensity
  </Quantities>
  One can also specify a unit (if Gyoto was compiled with --with-udunits):
    Intensity[mJy/pix²]
    Intensity[mJy/µas²]
    Intensity[J.m-2.s-1.sr-1.Hz-1]
    Intensity[erg.cm-2.s-1.sr-1.Hz-1]
    Intensity[mJy.sr-1]
    Intensity[Jy.sr-1]

</Scenery>
